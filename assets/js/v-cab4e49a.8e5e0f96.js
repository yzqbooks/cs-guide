"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[41666],{66411:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a=JSON.parse('{"key":"v-cab4e49a","path":"/java-tutor/server-config/after-bought-server.html","title":"购买服务器后的配置","lang":"zh-CN","frontmatter":{"summary":"购买服务器后的配置 安装zsh 1、安装zsh 2、把默认的Shell改成zsh 注意：不要使用sudo。 安装nodejs 使用nvm安装nodejs https://github.com/nvm-sh/nvm#git-install 然后运行 nvm install node 安装java 如果这种方式不需要环境变量,但不一定是最新的 手动安装jdk(是","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/java-tutor/server-config/after-bought-server.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"购买服务器后的配置"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-06-22T16:32:16.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-06-22T16:32:16.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"安装zsh","slug":"安装zsh","children":[]},{"level":2,"title":"安装nodejs","slug":"安装nodejs","children":[]},{"level":2,"title":"安装java","slug":"安装java","children":[{"level":3,"title":"如果这种方式不需要环境变量,但不一定是最新的","slug":"如果这种方式不需要环境变量-但不一定是最新的","children":[]},{"level":3,"title":"手动安装jdk(是最新的)","slug":"手动安装jdk-是最新的","children":[]},{"level":3,"title":"更改环境变量","slug":"更改环境变量","children":[]}]},{"level":2,"title":"安装postgresql","slug":"安装postgresql","children":[]},{"level":2,"title":"安装Nginx","slug":"安装nginx","children":[]},{"level":2,"title":"或者安装open-resty","slug":"或者安装open-resty","children":[]}],"git":{"createdTime":1649166358000,"updatedTime":1655915536000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":2}]},"readingTime":{"minutes":1.4,"words":419},"filePathRelative":"java-tutor/server-config/after-bought-server.md","localizedDate":"2022年4月5日"}')},99189:(e,n,s)=>{s.r(n),s.d(n,{default:()=>b});var a=s(66252);const i=(0,a.uE)('<h1 id="购买服务器后的配置" tabindex="-1"><a class="header-anchor" href="#购买服务器后的配置" aria-hidden="true">#</a> 购买服务器后的配置</h1><h2 id="安装zsh" tabindex="-1"><a class="header-anchor" href="#安装zsh" aria-hidden="true">#</a> 安装zsh</h2><p>1、安装zsh</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">zsh</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、把默认的Shell改成zsh</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>chsh -s /bin/zsh\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：不要使用sudo。</p><h2 id="安装nodejs" tabindex="-1"><a class="header-anchor" href="#安装nodejs" aria-hidden="true">#</a> 安装nodejs</h2>',8),l=(0,a.Uk)("使用nvm安装nodejs "),t={href:"https://github.com/nvm-sh/nvm#git-install",target:"_blank",rel:"noopener noreferrer"},r=(0,a.Uk)("https://github.com/nvm-sh/nvm#git-install"),d=(0,a.Uk)(" 然后运行 "),c=(0,a._)("code",null,"nvm install node",-1),o=(0,a.uE)('<h2 id="安装java" tabindex="-1"><a class="header-anchor" href="#安装java" aria-hidden="true">#</a> 安装java</h2><h3 id="如果这种方式不需要环境变量-但不一定是最新的" tabindex="-1"><a class="header-anchor" href="#如果这种方式不需要环境变量-但不一定是最新的" aria-hidden="true">#</a> 如果这种方式不需要环境变量,但不一定是最新的</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> openjdk-11-jdk-headless \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="手动安装jdk-是最新的" tabindex="-1"><a class="header-anchor" href="#手动安装jdk-是最新的" aria-hidden="true">#</a> 手动安装jdk(是最新的)</h3>',4),p={href:"https://adoptium.net/archive.html",target:"_blank",rel:"noopener noreferrer"},u=(0,a.Uk)("https://adoptium.net/archive.html"),h=(0,a.Uk)(" 这里下载jdk后上传到服务器解压,配置环境变量即可"),v=(0,a.uE)('<h3 id="更改环境变量" tabindex="-1"><a class="header-anchor" href="#更改环境变量" aria-hidden="true">#</a> 更改环境变量</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vi</span> ~/.bashrc\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>文件尾追加。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#set oracle jdk environment</span>\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/jdk-11.0.7\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">JRE_HOME</span><span class="token operator">=</span><span class="token variable">${JAVA_HOME}</span> \n<span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span>.:<span class="token variable">${JAVA_HOME}</span>/lib:<span class="token variable">${JRE_HOME}</span>/lib  \n<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">${JAVA_HOME}</span>/bin:<span class="token environment constant">$PATH</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使配置生效</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.bashrc\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看配置是否成功</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>java -version\njavac -version\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装postgresql" tabindex="-1"><a class="header-anchor" href="#安装postgresql" aria-hidden="true">#</a> 安装postgresql</h2><h2 id="安装nginx" tabindex="-1"><a class="header-anchor" href="#安装nginx" aria-hidden="true">#</a> 安装Nginx</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>sudo apt<span class="token operator">-</span>get install nginx\n\nsudo systemctl start nginx\n\n然后输入你的服务器ip出现nginx默认页面即可\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="或者安装open-resty" tabindex="-1"><a class="header-anchor" href="#或者安装open-resty" aria-hidden="true">#</a> 或者安装open-resty</h2><div class="custom-container tip"><p class="custom-container-title">提示</p><p>OpenResty是一个基于 Nginx 与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。</p><p>简单地说OpenResty 的目标是让你的Web服务直接跑在 Nginx 服务内部，充分利用 Nginx 的非阻塞 I/O 模型，不仅仅对 HTTP 客户端请求,甚至于对远程后端诸如 MySQL、PostgreSQL、Memcached 以及 Redis 等都进行一致的高性能响应</p></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">apt-get</span> <span class="token function">install</span> libpcre3-dev <span class="token punctuation">\\</span>\n    libssl-dev perl <span class="token function">make</span> build-essential <span class="token function">curl</span>\n\n<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> openresty\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',14),m={},b=(0,s(83744).Z)(m,[["render",function(e,n){const s=(0,a.up)("ExternalLinkIcon");return(0,a.wg)(),(0,a.iD)("div",null,[i,(0,a._)("p",null,[l,(0,a._)("a",t,[r,(0,a.Wm)(s)]),d,c]),o,(0,a._)("p",null,[(0,a._)("a",p,[u,(0,a.Wm)(s)]),h]),v])}]])}}]);