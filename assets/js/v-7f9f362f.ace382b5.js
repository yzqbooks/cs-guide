"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[20121],{25414:(e,r,o)=>{o.r(r),o.d(r,{data:()=>l});const l=JSON.parse('{"key":"v-7f9f362f","path":"/go-tutor/basics/golang-tips.html","title":"golang常用技巧","lang":"zh-CN","frontmatter":{"summary":"golang常用技巧 gomodule速查表 https://encore.dev/guide/go.mod 我找到的 https://github.com/filebrowser/filebrowser.git 好用的库 读取配置文件 ： https://github.com/spf13/viper ; 命令行颜色显示： color; 工具库： https","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/go-tutor/basics/golang-tips.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"golang常用技巧"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-29T07:25:09.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-07-29T07:25:09.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"gomodule速查表","slug":"gomodule速查表","children":[]},{"level":2,"title":"我找到的","slug":"我找到的","children":[]},{"level":2,"title":"好用的库","slug":"好用的库","children":[]},{"level":2,"title":"添加swagger","slug":"添加swagger","children":[]},{"level":2,"title":"后端框架","slug":"后端框架","children":[]},{"level":2,"title":"音频和音乐","slug":"音频和音乐","children":[]},{"level":2,"title":"认证和授权","slug":"认证和授权","children":[]},{"level":2,"title":"命令行","slug":"命令行","children":[{"level":3,"title":"标准命令行交互","slug":"标准命令行交互","children":[]},{"level":3,"title":"高级控制台界面","slug":"高级控制台界面","children":[]}]},{"level":2,"title":"配置","slug":"配置","children":[]},{"level":2,"title":"持续集成","slug":"持续集成","children":[]},{"level":2,"title":"CSS 预处理器","slug":"css-预处理器","children":[]},{"level":2,"title":"数据结构","slug":"数据结构","children":[]},{"level":2,"title":"数据库","slug":"数据库","children":[]},{"level":2,"title":"数据库驱动","slug":"数据库驱动","children":[]},{"level":2,"title":"日期和时间","slug":"日期和时间","children":[]},{"level":2,"title":"分布式系统","slug":"分布式系统","children":[]},{"level":2,"title":"电子邮件","slug":"电子邮件","children":[]},{"level":2,"title":"嵌入式脚本语言","slug":"嵌入式脚本语言","children":[]},{"level":2,"title":"文件","slug":"文件","children":[]},{"level":2,"title":"财经","slug":"财经","children":[]},{"level":2,"title":"表单","slug":"表单","children":[]},{"level":2,"title":"游戏开发","slug":"游戏开发","children":[]},{"level":2,"title":"代码生成与泛型","slug":"代码生成与泛型","children":[]},{"level":2,"title":"Go 编译器","slug":"go-编译器","children":[]},{"level":2,"title":"协程","slug":"协程","children":[]},{"level":2,"title":"GUI","slug":"gui","children":[]},{"level":2,"title":"硬件","slug":"硬件","children":[]},{"level":2,"title":"图像","slug":"图像","children":[]},{"level":2,"title":"物联网","slug":"物联网","children":[]},{"level":2,"title":"日志","slug":"日志","children":[]},{"level":2,"title":"机器学习","slug":"机器学习","children":[]},{"level":2,"title":"消息","slug":"消息","children":[]},{"level":2,"title":"杂项","slug":"杂项","children":[]},{"level":2,"title":"自然语言处理","slug":"自然语言处理","children":[]},{"level":2,"title":"网络","slug":"网络","children":[]},{"level":2,"title":"OpenGL","slug":"opengl","children":[]},{"level":2,"title":"ORM","slug":"orm","children":[]},{"level":2,"title":"包管理","slug":"包管理","children":[]},{"level":2,"title":"查询语言","slug":"查询语言","children":[]},{"level":2,"title":"资源嵌入","slug":"资源嵌入","children":[]},{"level":2,"title":"科学及数据分析","slug":"科学及数据分析","children":[]},{"level":2,"title":"安全","slug":"安全","children":[]},{"level":2,"title":"序列化","slug":"序列化","children":[]},{"level":2,"title":"服务器程序","slug":"服务器程序","children":[]},{"level":2,"title":"模板引擎","slug":"模板引擎","children":[]},{"level":2,"title":"测试","slug":"测试","children":[]},{"level":2,"title":"文本处理","slug":"文本处理","children":[]},{"level":2,"title":"第三方 APIs","slug":"第三方-apis","children":[]},{"level":2,"title":"实用工具","slug":"实用工具","children":[]},{"level":2,"title":"验证","slug":"验证","children":[]},{"level":2,"title":"版本控制","slug":"版本控制","children":[]},{"level":2,"title":"视频","slug":"视频","children":[]},{"level":2,"title":"Web 框架","slug":"web-框架","children":[]},{"level":2,"title":"Windows","slug":"windows","children":[]},{"level":2,"title":"XML","slug":"xml","children":[{"level":3,"title":"中间件","slug":"中间件","children":[]},{"level":3,"title":"路由","slug":"路由","children":[]}]},{"level":2,"title":"代码分析","slug":"代码分析","children":[]},{"level":2,"title":"编辑器插件","slug":"编辑器插件","children":[]},{"level":2,"title":"Go 语言工具","slug":"go-语言工具","children":[]},{"level":2,"title":"软件包","slug":"软件包","children":[{"level":3,"title":"DevOps 工具","slug":"devops-工具","children":[]},{"level":3,"title":"其他软件","slug":"其他软件","children":[]}]},{"level":2,"title":"基准测试","slug":"基准测试","children":[]},{"level":2,"title":"会议","slug":"会议","children":[]},{"level":2,"title":"E-Books","slug":"e-books","children":[]},{"level":2,"title":"Twitter","slug":"twitter","children":[]},{"level":2,"title":"网站","slug":"网站","children":[{"level":3,"title":"教程","slug":"教程","children":[]}]}],"git":{"createdTime":1659079509000,"updatedTime":1659079509000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":90.74,"words":27221},"filePathRelative":"go-tutor/basics/golang-tips.md","localizedDate":"2022年7月29日"}')},18633:(e,r,o)=>{o.r(r),o.d(r,{default:()=>che});var l=o(66252);const t=(0,l._)("h1",{id:"golang常用技巧",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#golang常用技巧","aria-hidden":"true"},"#"),(0,l.Uk)(" golang常用技巧")],-1),n=(0,l._)("h2",{id:"gomodule速查表",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#gomodule速查表","aria-hidden":"true"},"#"),(0,l.Uk)(" gomodule速查表")],-1),a={href:"https://encore.dev/guide/go.mod",target:"_blank",rel:"noopener noreferrer"},i=(0,l.Uk)("https://encore.dev/guide/go.mod"),h=(0,l._)("h2",{id:"我找到的",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#我找到的","aria-hidden":"true"},"#"),(0,l.Uk)(" 我找到的")],-1),k={href:"https://github.com/filebrowser/filebrowser.git",target:"_blank",rel:"noopener noreferrer"},_=(0,l.Uk)("https://github.com/filebrowser/filebrowser.git"),u=(0,l._)("h2",{id:"好用的库",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#好用的库","aria-hidden":"true"},"#"),(0,l.Uk)(" 好用的库")],-1),g=(0,l.Uk)("读取配置文件 ： "),p={href:"https://github.com/spf13/viper",target:"_blank",rel:"noopener noreferrer"},m=(0,l.Uk)("https://github.com/spf13/viper"),s=(0,l.Uk)("命令行颜色显示： "),b={href:"https://github.com/gookit/color",target:"_blank",rel:"noopener noreferrer"},f=(0,l.Uk)("color"),c=(0,l.Uk)("工具库： "),U={href:"https://github.com/gookit/goutil",target:"_blank",rel:"noopener noreferrer"},G=(0,l.Uk)("https://github.com/gookit/goutil"),d=(0,l.Uk)("操作数据库： "),W={href:"https://gorm.io/gorm",target:"_blank",rel:"noopener noreferrer"},v=(0,l.Uk)("gorm"),w=(0,l.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>go get -u gorm.io/gorm\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="添加swagger" tabindex="-1"><a class="header-anchor" href="#添加swagger" aria-hidden="true">#</a> 添加swagger</h2><ol><li>将注释添加到API源代码中，请参阅声明性注释格式。</li><li>使用如下命令下载swag：</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>go get -u github.com/swaggo/swag/cmd/swag\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从源码开始构建的话，需要有Go环境（1.9及以上版本）。</p><p>或者从github的release页面下载预编译好的二进制文件。</p><ol><li>在包含<code>main.go</code>文件的项目根目录运行<code>swag init</code>。这将会解析注释并生成需要的文件（<code>docs</code>文件夹和<code>docs/docs.go</code>）。</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>swag init\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>确保导入了生成的<code>docs/docs.go</code>文件，这样特定的配置文件才会被初始化。如果通用API指数没有写在<code>main.go</code>中，可以使用<code>-g</code>标识符来告知swag。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>swag init -g http/api.go\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="后端框架" tabindex="-1"><a class="header-anchor" href="#后端框架" aria-hidden="true">#</a> 后端框架</h2><p>gin <code>go get -u github.com/gin-gonic/gin</code></p><p>goframe <code>go get -u -v github.com/gogf/gf</code></p><p>iris</p><p>echo</p><p>Revel</p><p>Beego</p>',17),y=(0,l.Uk)("orangeg框架 "),x={href:"http://zhucheer.gitee.io/orange_doc/",target:"_blank",rel:"noopener noreferrer"},S=(0,l.Uk)("http://zhucheer.gitee.io/orange_doc/"),P=(0,l._)("h2",{id:"音频和音乐",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#音频和音乐","aria-hidden":"true"},"#"),(0,l.Uk)(" 音频和音乐")],-1),T=(0,l._)("p",null,"用于操作音频的库_",-1),A={href:"https://github.com/eaburns/flac",target:"_blank",rel:"noopener noreferrer"},z=(0,l.Uk)("flac"),j=(0,l.Uk)(" - 原生 Go FLAC 解码器"),M={href:"https://github.com/mewkiz/flac",target:"_blank",rel:"noopener noreferrer"},C=(0,l.Uk)("flac"),L=(0,l.Uk)(" - 原生 Go FLAC 解码器"),R={href:"https://github.com/Comcast/gaad",target:"_blank",rel:"noopener noreferrer"},I=(0,l.Uk)("gaad"),q=(0,l.Uk)(" - 原生 Go AAC 比特流解析器"),H={href:"https://github.com/krig/Go-sox",target:"_blank",rel:"noopener noreferrer"},D=(0,l.Uk)("Go-sox"),O=(0,l.Uk)(" - libsox 的 Go 语言接口"),E={href:"https://github.com/zhulik/Go_mediainfo",target:"_blank",rel:"noopener noreferrer"},N=(0,l.Uk)("Go_mediainfo"),B=(0,l.Uk)(" - libmediainfo 的 Go 语言接口"),Q={href:"https://github.com/dh1tw/Gosamplerate",target:"_blank",rel:"noopener noreferrer"},J=(0,l.Uk)("Gosamplerate"),F=(0,l.Uk)(" - libsamplerate 的 Go 语言接口"),V={href:"https://github.com/bogem/id3v2",target:"_blank",rel:"noopener noreferrer"},X=(0,l.Uk)("id3v2"),K=(0,l.Uk)(" - 快速且稳定的 ID3 解析及写入库"),Y={href:"https://github.com/Go-mix/mix",target:"_blank",rel:"noopener noreferrer"},Z=(0,l.Uk)("mix"),$=(0,l.Uk)(" - 基于序列的 Go 语言混音器，可用于音乐 app。"),ee={href:"https://github.com/tcolgate/mp3",target:"_blank",rel:"noopener noreferrer"},re=(0,l.Uk)("mp3"),oe=(0,l.Uk)(" - 原生 Go MP3 解码器"),le={href:"https://github.com/Go-music-theory/music-theory",target:"_blank",rel:"noopener noreferrer"},te=(0,l.Uk)("music-theory"),ne=(0,l.Uk)(" - Go 语言编写的音乐理论模型"),ae={href:"https://github.com/Gordonklaus/portaudio",target:"_blank",rel:"noopener noreferrer"},ie=(0,l.Uk)("PortAudio"),he=(0,l.Uk)(" - 音频 I/O 库的 Go 语言接口"),ke={href:"https://github.com/rakyll/portmidi",target:"_blank",rel:"noopener noreferrer"},_e=(0,l.Uk)("portmidi"),ue=(0,l.Uk)(" - PortMidi 的 Go 语言接口"),ge={href:"https://github.com/wtolson/Go-taglib",target:"_blank",rel:"noopener noreferrer"},pe=(0,l.Uk)("taglib"),me=(0,l.Uk)(" - taglib 的 Go 语言接口"),se={href:"https://github.com/mccoyst/vorbis",target:"_blank",rel:"noopener noreferrer"},be=(0,l.Uk)("vorbis"),fe=(0,l.Uk)(' - "原生" Go Vorbis 解码器 (使用 CGo, 但是没有其他依赖).'),ce={href:"https://github.com/mdlayher/waveform",target:"_blank",rel:"noopener noreferrer"},Ue=(0,l.Uk)("waveform"),Ge=(0,l.Uk)(" - 一个可以通过音频流生成波形图像的包"),de=(0,l._)("h2",{id:"认证和授权",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#认证和授权","aria-hidden":"true"},"#"),(0,l.Uk)(" 认证和授权")],-1),We=(0,l._)("p",null,"用来生成认证授权模板的库_",-1),ve={href:"https://github.com/volatiletech/authboss",target:"_blank",rel:"noopener noreferrer"},we=(0,l.Uk)("authboss"),ye=(0,l.Uk)(" - 用于 web 开发的组件化认证授权系统。它尝试尽可能的移除模板代码以及硬编码，这使你每次新建 web 项目的时候，可以做到即插即用、配置并开始开发你的 web 英语，而不必每次都重新创建一个认证授权系统。"),xe={href:"https://github.com/hsluoyz/casbin",target:"_blank",rel:"noopener noreferrer"},Se=(0,l.Uk)("casbin"),Pe=(0,l.Uk)(" - 一个支持接入控制模型（例如:ACL,RBAC,ABAC）的授权库"),Te={href:"https://github.com/smartystreets/Go-aws-auth",target:"_blank",rel:"noopener noreferrer"},Ae=(0,l.Uk)("Go-AWS-Auth"),ze=(0,l.Uk)(" - AWS 请求签名库"),je={href:"https://github.com/square/Go-jose",target:"_blank",rel:"noopener noreferrer"},Me=(0,l.Uk)("Go-jose"),Ce=(0,l.Uk)(" - Fairly complete implementation of the JOSE working group's JSON Web Token, JSON Web 签名以及JSON Web 加密 specs."),Le={href:"https://github.com/RichardKnop/Go-oauth2-server",target:"_blank",rel:"noopener noreferrer"},Re=(0,l.Uk)("Go-oauth2-server"),Ie=(0,l.Uk)(" - 使用 Go 语言编写的独立、符合标准的 OAuth2 服务器"),qe={href:"https://github.com/bradrydzewski/Go.auth",target:"_blank",rel:"noopener noreferrer"},He=(0,l.Uk)("Go.auth"),De=(0,l.Uk)(" - 为 Go 语言 web 应用提供的授权 API."),Oe={href:"https://github.com/dghubble/Gologin",target:"_blank",rel:"noopener noreferrer"},Ee=(0,l.Uk)("Gologin"),Ne=(0,l.Uk)(" - 可以串连使用OAuth1 和 OAuth2 认证服务"),Be={href:"https://github.com/mikespook/Gorbac",target:"_blank",rel:"noopener noreferrer"},Qe=(0,l.Uk)("Gorbac"),Je=(0,l.Uk)(" - 一个用 Go 语言实现的轻量级RBAC"),Fe={href:"https://github.com/markbates/Goth",target:"_blank",rel:"noopener noreferrer"},Ve=(0,l.Uk)("Goth"),Xe=(0,l.Uk)(" - 提供了一种简洁的、惯用的方式来使用OAuth 和 OAuth2."),Ke={href:"https://github.com/Goji/httpauth",target:"_blank",rel:"noopener noreferrer"},Ye=(0,l.Uk)("httpauth"),Ze=(0,l.Uk)(" - HTTP 认证中间件"),$e={href:"https://github.com/robbert229/jwt",target:"_blank",rel:"noopener noreferrer"},er=(0,l.Uk)("jwt"),rr=(0,l.Uk)(" - 简单易用的一个JSON Web Tokens (JWT)的实现"),or={href:"https://github.com/adam-hanna/jwt-auth",target:"_blank",rel:"noopener noreferrer"},lr=(0,l.Uk)("jwt-auth"),tr=(0,l.Uk)(" - JWT 为 Go 语言 HTTP 服务器编写的 jwt 中间件，有多种配置选项"),nr={href:"https://github.com/golang-jwt/jwt",target:"_blank",rel:"noopener noreferrer"},ar=(0,l.Uk)("jwt-Go"),ir=(0,l.Uk)(" - Go 语言实现的JSON Web Tokens (JWT)."),hr={href:"https://github.com/tarent/loginsrv",target:"_blank",rel:"noopener noreferrer"},kr=(0,l.Uk)("loginsrv"),_r=(0,l.Uk)(" - JWT 登录微服务，可以继承OAuth2 (Github), htpasswd, osiam等后端。"),ur={href:"https://github.com/Golang/oauth2",target:"_blank",rel:"noopener noreferrer"},gr=(0,l.Uk)("oauth2"),pr=(0,l.Uk)(" - Goauth2的继承者。 通用 OAuth 2.0 库，集成了对JWT, Google APIs, Compute Engine 和 App Engine的支持."),mr={href:"https://github.com/RangelReale/osin",target:"_blank",rel:"noopener noreferrer"},sr=(0,l.Uk)("osin"),br=(0,l.Uk)(" - Go 语言 OAuth2 服务器库"),fr={href:"https://github.com/xyproto/permissions2",target:"_blank",rel:"noopener noreferrer"},cr=(0,l.Uk)("permissions2"),Ur=(0,l.Uk)(" - 用于追踪用户，登录状态和许可的库。使用安全 cookies 和 bcrypt."),Gr={href:"https://github.com/icza/session",target:"_blank",rel:"noopener noreferrer"},dr=(0,l.Uk)("session"),Wr=(0,l.Uk)(" - Go 语言会话管理(支持 Google App Engine - GAE)"),vr={href:"https://github.com/adam-hanna/sessions",target:"_blank",rel:"noopener noreferrer"},wr=(0,l.Uk)("sessions"),yr=(0,l.Uk)(" - 为 Go 语言 HTTP 服务器开发的非常简单的、高性能的、高可定制的会话服务"),xr={href:"https://github.com/containous/traefik",target:"_blank",rel:"noopener noreferrer"},Sr=(0,l.Uk)("traefik"),Pr=(0,l.Uk)(" - 反向代理和负载均衡库，支持多种后端"),Tr={href:"https://github.com/GeertJohan/yubiGo",target:"_blank",rel:"noopener noreferrer"},Ar=(0,l.Uk)("yubiGo"),zr=(0,l.Uk)(" - Yubikey 客户端，提供了用于在 Go 语言应用中集成Yubico Yubikey 的 API"),jr=(0,l._)("h2",{id:"命令行",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#命令行","aria-hidden":"true"},"#"),(0,l.Uk)(" 命令行")],-1),Mr=(0,l._)("h3",{id:"标准命令行交互",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#标准命令行交互","aria-hidden":"true"},"#"),(0,l.Uk)(" 标准命令行交互")],-1),Cr=(0,l._)("p",null,"用于构建标准或基础命令行应用的库_",-1),Lr={href:"https://github.com/cosiner/argv",target:"_blank",rel:"noopener noreferrer"},Rr=(0,l.Uk)("argv"),Ir=(0,l.Uk)(" - 用于分隔命令行字符串并将其作为参数的 Go 语言库，使用 bash 的语法"),qr={href:"https://github.com/mkideal/cli",target:"_blank",rel:"noopener noreferrer"},Hr=(0,l.Uk)("cli"),Dr=(0,l.Uk)(" - 功能强大，使用简单的命令行软件包，基于Golang tag"),Or={href:"https://github.com/tcnksm/gcli",target:"_blank",rel:"noopener noreferrer"},Er=(0,l.Uk)("cli-init"),Nr=(0,l.Uk)(" - 提供一种简单、易上手的方式 来使用 Go 语言编写命令行程序"),Br={href:"http://github.com/tucnak/climax",target:"_blank",rel:"noopener noreferrer"},Qr=(0,l.Uk)("climax"),Jr=(0,l.Uk)(" - 一个更为人性化的命令行工具，继承了 Go command 的精神"),Fr={href:"https://github.com/spf13/cobra",target:"_blank",rel:"noopener noreferrer"},Vr=(0,l.Uk)("cobra"),Xr=(0,l.Uk)(" - 用于现代 Go 语言命令行交互的工具"),Kr={href:"https://github.com/posener/complete",target:"_blank",rel:"noopener noreferrer"},Yr=(0,l.Uk)("complete"),Zr=(0,l.Uk)(" - 使用 Go 语言编写的 bash 命令补全工具以及 Go 命令补全工具"),$r={href:"https://github.com/docopt/docopt.Go",target:"_blank",rel:"noopener noreferrer"},eo=(0,l.Uk)("docopt.Go"),ro=(0,l.Uk)(" - 能令你会心一笑的命令行参数解析器"),oo={href:"https://github.com/odeke-em/drive",target:"_blank",rel:"noopener noreferrer"},lo=(0,l.Uk)("drive"),to=(0,l.Uk)(" - 命令行的 Google Drive 客户端"),no={href:"https://github.com/cosiner/flag",target:"_blank",rel:"noopener noreferrer"},ao=(0,l.Uk)("flag"),io=(0,l.Uk)(" - 简单、强大的命令行选项解析库，支持 Go 语言子命令"),ho={href:"https://github.com/alexflint/Go-arg",target:"_blank",rel:"noopener noreferrer"},ko=(0,l.Uk)("Go-arg"),_o=(0,l.Uk)(" - 使用 Go 语言编写的基于结构的命令行参数解析库"),uo={href:"https://github.com/jessevdk/Go-flags",target:"_blank",rel:"noopener noreferrer"},go=(0,l.Uk)("Go-flags"),po=(0,l.Uk)(" - Go 语言命令行选项解析器"),mo={href:"https://github.com/alecthomas/kingpin",target:"_blank",rel:"noopener noreferrer"},so=(0,l.Uk)("kingpin"),bo=(0,l.Uk)(" - 命令行及标记解析器，支持子命令"),fo={href:"https://github.com/peterh/liner",target:"_blank",rel:"noopener noreferrer"},co=(0,l.Uk)("liner"),Uo=(0,l.Uk)(" - 命令行文本编辑器"),Go={href:"https://github.com/mitchellh/cli",target:"_blank",rel:"noopener noreferrer"},Wo=(0,l.Uk)("mitchellh/cli"),vo=(0,l.Uk)(" - 用于实现命令行交互的 Go 语言库"),wo={href:"https://github.com/jawher/mow.cli",target:"_blank",rel:"noopener noreferrer"},yo=(0,l.Uk)("mow.cli"),xo=(0,l.Uk)(" - 用于构建命令行程序的库，支持更加精准的标记及选项解析和验证"),So={href:"https://github.com/spf13/pflag",target:"_blank",rel:"noopener noreferrer"},Po=(0,l.Uk)("pflag"),To=(0,l.Uk)(" - Go flag 软件包的替代品, 实现了POSIX/GNU-风格的 --flags."),Ao={href:"https://github.com/chzyer/readline",target:"_blank",rel:"noopener noreferrer"},zo=(0,l.Uk)("readline"),jo=(0,l.Uk)(" - 纯 Go 语言实现的 GNU-Readline 支持其大部分功能，基于MIT 协议发布。"),Mo={href:"https://github.com/octaGo/sflags",target:"_blank",rel:"noopener noreferrer"},Co=(0,l.Uk)("sflags"),Lo=(0,l.Uk)(" - 基于结构的 flag 生成器，支持flag, urfave/cli, pflag, cobra, kingpin等其他库"),Ro={href:"https://github.com/ukautz/clif",target:"_blank",rel:"noopener noreferrer"},Io=(0,l.Uk)("ukautz/clif"),qo=(0,l.Uk)(" - 一个小型命令行程序开发框架"),Ho={href:"https://github.com/urfave/cli",target:"_blank",rel:"noopener noreferrer"},Do=(0,l.Uk)("urfave/cli"),Oo=(0,l.Uk)(" - 简单、快速、有趣的、用于构建 Go 语言命令行程序的软件包(formerly codegangsta/cli)."),Eo={href:"https://github.com/dixonwille/wlog",target:"_blank",rel:"noopener noreferrer"},No=(0,l.Uk)("wlog"),Bo=(0,l.Uk)(" - 简单的登录接口，支持跨平台颜色和并发"),Qo={href:"https://github.com/dixonwille/wmenu",target:"_blank",rel:"noopener noreferrer"},Jo=(0,l.Uk)("wmenu"),Fo=(0,l.Uk)(" - 为命令行程序提供简单的菜单结构选项，供用户进行选择"),Vo=(0,l._)("h3",{id:"高级控制台界面",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#高级控制台界面","aria-hidden":"true"},"#"),(0,l.Uk)(" 高级控制台界面")],-1),Xo=(0,l._)("p",null,"用于构建命令行程序以及控制台界面的库_",-1),Ko={href:"https://github.com/logrusorgru/aurora",target:"_blank",rel:"noopener noreferrer"},Yo=(0,l.Uk)("aurora"),Zo=(0,l.Uk)(" - ANSI 终端颜色，支持 fmt.Printf/Sprintf"),$o={href:"https://github.com/ttacon/chalk",target:"_blank",rel:"noopener noreferrer"},el=(0,l.Uk)("chalk"),rl=(0,l.Uk)(" - 符合直觉的用于美化命令行输出的库"),ol={href:"http://github.com/gookit/color",target:"_blank",rel:"noopener noreferrer"},ll=(0,l.Uk)("color"),tl=(0,l.Uk)(" - 多功能的用于彩色化命令行输出的库"),nl={href:"https://github.com/TreyBastian/colourize",target:"_blank",rel:"noopener noreferrer"},al=(0,l.Uk)("colourize"),il=(0,l.Uk)(" - 用于实现 ANSI 彩色文本的 Go 语言库"),hl={href:"https://github.com/workanator/Go-ataman",target:"_blank",rel:"noopener noreferrer"},kl=(0,l.Uk)("Go-ataman"),_l=(0,l.Uk)(" - 用于渲染 ANSI 彩色文本模板的库"),ul={href:"https://github.com/mattn/Go-colorable",target:"_blank",rel:"noopener noreferrer"},gl=(0,l.Uk)("Go-colorable"),pl=(0,l.Uk)(" - Windows 上使用的可以输出彩色文本的库"),ml={href:"https://github.com/daviddengcn/Go-colortext",target:"_blank",rel:"noopener noreferrer"},sl=(0,l.Uk)("Go-colortext"),bl=(0,l.Uk)(" - 用于在终端进行多彩文字输出的库"),fl={href:"https://github.com/mattn/Go-isatty",target:"_blank",rel:"noopener noreferrer"},cl=(0,l.Uk)("Go-isatty"),Ul=(0,l.Uk)(" - Go 语言使用的 isatty"),Gl={href:"https://github.com/jroimartin/Gocui",target:"_blank",rel:"noopener noreferrer"},dl=(0,l.Uk)("Gocui"),Wl=(0,l.Uk)(" - 一个用于构建控制台界面的极简的 Go 语言库"),vl={href:"https://github.com/labstack/Gommon/tree/master/color",target:"_blank",rel:"noopener noreferrer"},wl=(0,l.Uk)("Gommon/color"),yl=(0,l.Uk)(" - 多样的命令行文本"),xl={href:"https://github.com/vbauerster/mpb",target:"_blank",rel:"noopener noreferrer"},Sl=(0,l.Uk)("mpb"),Pl=(0,l.Uk)(" - 为命令行提供多个进度条的工具"),Tl={href:"https://github.com/nsf/termbox-Go",target:"_blank",rel:"noopener noreferrer"},Al=(0,l.Uk)("termbox-Go"),zl=(0,l.Uk)(" - Termbox 是一个用于构建跨平台的、与文本的交互界面的库"),jl={href:"https://github.com/apcera/termtables",target:"_blank",rel:"noopener noreferrer"},Ml=(0,l.Uk)("termtables"),Cl=(0,l.Uk)(" - Ruby 库的 Go 语言接口"),Ll={href:"https://github.com/tj/terminal-table",target:"_blank",rel:"noopener noreferrer"},Rl=(0,l.Uk)("terminal-tables"),Il=(0,l.Uk)(" 用于生成简单的 ASCII 表格，同时支持 markdown 和 HTML 输出"),ql={href:"https://github.com/gizak/termui",target:"_blank",rel:"noopener noreferrer"},Hl=(0,l.Uk)("termui"),Dl=(0,l.Uk)(" - Go 终端控制面板，基于 "),Ol=(0,l._)("strong",null,"termbox-Go",-1),El=(0,l.Uk)(" 并受到了"),Nl={href:"https://github.com/yaronn/blessed-contrib",target:"_blank",rel:"noopener noreferrer"},Bl=(0,l.Uk)("blessed-contrib"),Ql=(0,l.Uk)("的启发"),Jl={href:"https://github.com/Gosuri/uilive",target:"_blank",rel:"noopener noreferrer"},Fl=(0,l.Uk)("uilive"),Vl=(0,l.Uk)(" - 用于实时更新终端输出的库"),Xl={href:"https://github.com/Gosuri/uiprogress",target:"_blank",rel:"noopener noreferrer"},Kl=(0,l.Uk)("uiprogress"),Yl=(0,l.Uk)(" - 一个很灵活的用于渲染进度条的库"),Zl={href:"https://github.com/Gosuri/uitable",target:"_blank",rel:"noopener noreferrer"},$l=(0,l.Uk)("uitable"),et=(0,l.Uk)(" - 一个用于改善命令行中表格数据可读性的库"),rt=(0,l._)("h2",{id:"配置",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#配置","aria-hidden":"true"},"#"),(0,l.Uk)(" 配置")],-1),ot=(0,l._)("p",null,[(0,l._)("em",null,"用于进行配置解析的库")],-1),lt={href:"https://github.com/spf13/viper",target:"_blank",rel:"noopener noreferrer"},tt=(0,l.Uk)("viper"),nt=(0,l.Uk)(" - 长牙的（这个库名叫毒蛇）Go 语言配置工具（推荐使用）"),at={href:"https://github.com/olebedev/config",target:"_blank",rel:"noopener noreferrer"},it=(0,l.Uk)("config"),ht=(0,l.Uk)(" - JSON 或 YAML 配置的封装，支持环境变量和标记解析"),kt={href:"https://github.com/paked/configure",target:"_blank",rel:"noopener noreferrer"},_t=(0,l.Uk)("configure"),ut=(0,l.Uk)(" - 可以通过多种途径进行配置，包括 JSON, 标记位以及环境变量"),gt={href:"https://github.com/Go-gcfg/gcfg",target:"_blank",rel:"noopener noreferrer"},pt=(0,l.Uk)("gcfg"),mt=(0,l.Uk)(" - 读取类 INI 类型的配置文件为 Go 语言结构体，支持自定义变量和节"),st={href:"https://github.com/hjson/hjson-Go",target:"_blank",rel:"noopener noreferrer"},bt=(0,l.Uk)("hjson"),ft=(0,l.Uk)(" - 人性化的 JSON，一个便于程序员使用和阅读的配置文件格式。更加轻松的语法，更少的错误和更多的注释"),ct={href:"https://github.com/schachmat/inGo",target:"_blank",rel:"noopener noreferrer"},Ut=(0,l.Uk)("inGo"),Gt=(0,l.Uk)(" - 将配置标记持久化到一个类似 ini 的文件中"),dt={href:"https://github.com/Go-ini/ini",target:"_blank",rel:"noopener noreferrer"},Wt=(0,l.Uk)("ini"),vt=(0,l.Uk)(" - 用于读写INI 文件的库"),wt={href:"https://github.com/joshbetz/config",target:"_blank",rel:"noopener noreferrer"},yt=(0,l.Uk)("joshbetz/config"),xt=(0,l.Uk)(" - 消息配置库，可以解析环境变量、JSON 文件并根据SIGHUP自动重新载入"),St={href:"https://github.com/sasbury/mini",target:"_blank",rel:"noopener noreferrer"},Pt=(0,l.Uk)("mini"),Tt=(0,l.Uk)(" -用于解析类 ini 文件的库"),At={href:"https://github.com/tucnak/store",target:"_blank",rel:"noopener noreferrer"},zt=(0,l.Uk)("store"),jt=(0,l.Uk)(" - 轻量级配置管理"),Mt={href:"https://github.com/OpenPeeDeeP/xdg",target:"_blank",rel:"noopener noreferrer"},Ct=(0,l.Uk)("xdg"),Lt=(0,l.Uk)(" -遵守 "),Rt={href:"https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html",target:"_blank",rel:"noopener noreferrer"},It=(0,l.Uk)("XDG 标准"),qt=(0,l.Uk)(" 的配置工具"),Ht=(0,l._)("h2",{id:"持续集成",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#持续集成","aria-hidden":"true"},"#"),(0,l.Uk)(" 持续集成")],-1),Dt=(0,l._)("p",null,[(0,l._)("em",null,"帮助你进行持续集成的库")],-1),Ot={href:"https://github.com/drone/drone",target:"_blank",rel:"noopener noreferrer"},Et=(0,l.Uk)("drone"),Nt=(0,l.Uk)(" - Drone 是一个基于 Docker的持续集成平台，使用 Go 语言编写"),Bt={href:"https://github.com/mattn/Goveralls",target:"_blank",rel:"noopener noreferrer"},Qt=(0,l.Uk)("Goveralls"),Jt=(0,l.Uk)(" - Coveralls.io 是一个持续代码覆盖率检测系统，这个库提供了 Go 语言的支持"),Ft={href:"https://github.com/Go-playground/overalls",target:"_blank",rel:"noopener noreferrer"},Vt=(0,l.Uk)("overalls"),Xt=(0,l.Uk)(" - 针对多package 的 Go 语言项目，为 Goveralls 这样的工具生成覆盖率报告"),Kt={href:"https://github.com/LawrenceWoodman/roveralls",target:"_blank",rel:"noopener noreferrer"},Yt=(0,l.Uk)("roveralls"),Zt=(0,l.Uk)(" - 回归覆盖测试工具"),$t=(0,l._)("h2",{id:"css-预处理器",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#css-预处理器","aria-hidden":"true"},"#"),(0,l.Uk)(" CSS 预处理器")],-1),en=(0,l._)("p",null,[(0,l._)("em",null,"用于对 CSS 文件预处理的工具")],-1),rn={href:"https://github.com/c9s/c6",target:"_blank",rel:"noopener noreferrer"},on=(0,l.Uk)("c6"),ln=(0,l.Uk)(" - 高性能、兼容 SAAS 的编译器"),tn={href:"https://github.com/yosssi/gcss",target:"_blank",rel:"noopener noreferrer"},nn=(0,l.Uk)("gcss"),an=(0,l.Uk)(" - 纯 Go 语言编写的 CSS 预处理器"),hn={href:"https://github.com/wellington/Go-libsass",target:"_blank",rel:"noopener noreferrer"},kn=(0,l.Uk)("Go-libsass"),_n=(0,l.Uk)(" - 100%兼容 Sass 的库 libsass 的 Go 语言封装"),un=(0,l._)("h2",{id:"数据结构",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#数据结构","aria-hidden":"true"},"#"),(0,l.Uk)(" 数据结构")],-1),gn=(0,l._)("p",null,[(0,l._)("em",null,"通用数据结构及算法")],-1),pn={href:"https://github.com/zhuangsirui/binpacker",target:"_blank",rel:"noopener noreferrer"},mn=(0,l.Uk)("binpacker"),sn=(0,l.Uk)(" - 二进制数据封包拆包工具，帮你构建自定义的二进制数据流"),bn={href:"https://github.com/yourbasic/bit",target:"_blank",rel:"noopener noreferrer"},fn=(0,l.Uk)("bit"),cn=(0,l.Uk)(" - Go 语言集合数据结构。提供了额外的位操作功能"),Un={href:"https://github.com/willf/bitset",target:"_blank",rel:"noopener noreferrer"},Gn=(0,l.Uk)("bitset"),dn=(0,l.Uk)(" - 实现了 bitset 的 Go 语言包."),Wn={href:"https://github.com/zhenjl/bloom",target:"_blank",rel:"noopener noreferrer"},vn=(0,l.Uk)("bloom"),wn=(0,l.Uk)(" - Go 语言实现的布隆过滤器（bloom filter）"),yn={href:"https://github.com/yourbasic/bloom",target:"_blank",rel:"noopener noreferrer"},xn=(0,l.Uk)("bloom"),Sn=(0,l.Uk)(" - Go 语言实现的布隆过滤器"),Pn={href:"https://github.com/tylertreat/BoomFilters",target:"_blank",rel:"noopener noreferrer"},Tn=(0,l.Uk)("boomfilters"),An=(0,l.Uk)(" - 概率统计数据结构，用于处理大量连续的数据。"),zn={href:"https://github.com/seiflotfy/count-min-log",target:"_blank",rel:"noopener noreferrer"},jn=(0,l.Uk)("count-min-log"),Mn=(0,l.Uk)(" - Go 语言实现的 Count-Min-Log sketch 算法(类似 Count-Min sketch 算法，但是使用的内存更少)."),Cn={href:"https://github.com/seiflotfy/cuckoofilter",target:"_blank",rel:"noopener noreferrer"},Ln=(0,l.Uk)("cuckoofilter"),Rn=(0,l.Uk)(" - Cuckoo 过滤器：一个用go语言实现的计数布隆过滤器的替代品"),In={href:"https://github.com/zhenjl/encoding",target:"_blank",rel:"noopener noreferrer"},qn=(0,l.Uk)("encoding"),Hn=(0,l.Uk)(" - 整型压缩库"),Dn={href:"https://github.com/plar/Go-adaptive-radix-tree",target:"_blank",rel:"noopener noreferrer"},On=(0,l.Uk)("Go-adaptive-radix-tree"),En=(0,l.Uk)(" - Go 语言实现的自适应基数树"),Nn={href:"https://github.com/Workiva/Go-datastructures",target:"_blank",rel:"noopener noreferrer"},Bn=(0,l.Uk)("Go-datastructures"),Qn=(0,l.Uk)(" - 一组有用的、高性能的、线程安全的数据结构"),Jn={href:"https://github.com/hailocab/Go-geoindex",target:"_blank",rel:"noopener noreferrer"},Fn=(0,l.Uk)("Go-geoindex"),Vn=(0,l.Uk)(" - 基于内存存储的地理索引"),Xn={href:"https://github.com/aurelien-rainone/Go-rquad",target:"_blank",rel:"noopener noreferrer"},Kn=(0,l.Uk)("Go-rquad"),Yn=(0,l.Uk)(" - 区域四叉树，支持有效点位置和领域发现"),Zn={href:"https://github.com/emirpasic/Gods",target:"_blank",rel:"noopener noreferrer"},$n=(0,l.Uk)("Gods"),ea=(0,l.Uk)(" - Go 语言数据结构、容器、集合、列表、栈、键值对、 BidiMaps、树、HashSet 等"),ra={href:"https://github.com/deckarep/Golang-set",target:"_blank",rel:"noopener noreferrer"},oa=(0,l.Uk)("Golang-set"),la=(0,l.Uk)(" - 线程安全和非线程安全的高性能集合"),ta={href:"https://github.com/ryszard/Goskiplist",target:"_blank",rel:"noopener noreferrer"},na=(0,l.Uk)("Goskiplist"),aa=(0,l.Uk)(" - Go 语言实现的跳跃表"),ia={href:"https://github.com/kniren/Gota",target:"_blank",rel:"noopener noreferrer"},ha=(0,l.Uk)("Gota"),ka=(0,l.Uk)(" - 为go语言实现了数据帧，序列以及数据噪音的方法"),_a={href:"https://github.com/Google/hilbert",target:"_blank",rel:"noopener noreferrer"},ua=(0,l.Uk)("hilbert"),ga=(0,l.Uk)(" - 用于映射空间填充曲线（例如希尔伯特曲线和皮亚诺曲线）和数值的库。"),pa={href:"https://github.com/axiomhq/hyperloglog",target:"_blank",rel:"noopener noreferrer"},ma=(0,l.Uk)("hyperloglog"),sa=(0,l.Uk)(" - HyperLogLog implementation with Sparse, LogLog-Beta bias correction and TailCut space reduction."),ba={href:"https://github.com/agext/levenshtein",target:"_blank",rel:"noopener noreferrer"},fa=(0,l.Uk)("levenshtein"),ca=(0,l.Uk)(" - 编辑距离（levenshtein distance）和相似性度量， 可以自定义编辑代价和and Winkler-like bonus for common prefix."),Ua={href:"https://github.com/agnivade/levenshtein",target:"_blank",rel:"noopener noreferrer"},Ga=(0,l.Uk)("levenshtein"),da=(0,l.Uk)(" - Go 语言实现计算编辑距离"),Wa={href:"https://github.com/smartystreets/mafsa",target:"_blank",rel:"noopener noreferrer"},va=(0,l.Uk)("mafsa"),wa=(0,l.Uk)(" - Go 语言实现的 MA-FSA ，包含最小完美哈希"),ya={href:"https://github.com/cberGoon/merkletree",target:"_blank",rel:"noopener noreferrer"},xa=(0,l.Uk)("merkletree"),Sa=(0,l.Uk)(" - 实现了梅克尔树，提供了一种高效、安全的数据结构内容验证方法"),Pa={href:"https://github.com/RoaringBitmap/roaring",target:"_blank",rel:"noopener noreferrer"},Ta=(0,l.Uk)("roaring"),Aa=(0,l.Uk)(" - 实现了压缩 bitsets 的Go语言库"),za={href:"https://github.com/gansidui/skiplist",target:"_blank",rel:"noopener noreferrer"},ja=(0,l.Uk)("skiplist"),Ma=(0,l.Uk)(" - Go语言实现的跳跃表"),Ca={href:"https://github.com/derekparker/trie",target:"_blank",rel:"noopener noreferrer"},La=(0,l.Uk)("trie"),Ra=(0,l.Uk)(" - Go语言实现的Trie树"),Ia={href:"https://github.com/dieGobernardes/ttlcache",target:"_blank",rel:"noopener noreferrer"},qa=(0,l.Uk)("ttlcache"),Ha=(0,l.Uk)(" - In-memory LRU string-interface{} map with expiration for Golang"),Da={href:"https://github.com/willf/bloom",target:"_blank",rel:"noopener noreferrer"},Oa=(0,l.Uk)("willf/bloom"),Ea=(0,l.Uk)(" - 实现了布隆过滤器的库"),Na=(0,l._)("h2",{id:"数据库",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#数据库","aria-hidden":"true"},"#"),(0,l.Uk)(" 数据库")],-1),Ba=(0,l._)("li",null,"Go 语言实现的数据库*",-1),Qa={href:"https://github.com/allegro/bigcache",target:"_blank",rel:"noopener noreferrer"},Ja=(0,l.Uk)("BigCache"),Fa=(0,l.Uk)(" - 为 gigabytes 量级数据设计的高效键/值缓存"),Va={href:"https://github.com/boltdb/bolt",target:"_blank",rel:"noopener noreferrer"},Xa=(0,l.Uk)("bolt"),Ka=(0,l.Uk)(" - 底层键值数据库"),Ya={href:"https://github.com/tidwall/buntdb",target:"_blank",rel:"noopener noreferrer"},Za=(0,l.Uk)("buntdb"),$a=(0,l.Uk)(" - 快速，可嵌入的，内存键值数据库，可定义索引及 spatial"),ei={href:"https://github.com/muesli/cache2Go",target:"_blank",rel:"noopener noreferrer"},ri=(0,l.Uk)("cache2Go"),oi=(0,l.Uk)(" - 基于内存存储的键值缓存，支持自动基于超时的自动失效"),li={href:"https://github.com/cockroachdb/cockroach",target:"_blank",rel:"noopener noreferrer"},ti=(0,l.Uk)("cockroach"),ni=(0,l.Uk)(" - 可扩展的、一致的事务型数据库"),ai={href:"https://github.com/codingsince1985/couchcache",target:"_blank",rel:"noopener noreferrer"},ii=(0,l.Uk)("couchcache"),hi=(0,l.Uk)(" - RESTful 缓存微服务，基于Couchbase"),ki={href:"https://github.com/dgraph-io/dgraph",target:"_blank",rel:"noopener noreferrer"},_i=(0,l.Uk)("dgraph"),ui=(0,l.Uk)(" - 可扩展的、分布式的、低延时、高吞吐的图数据库"),gi={href:"https://github.com/peterbourGon/diskv",target:"_blank",rel:"noopener noreferrer"},pi=(0,l.Uk)("diskv"),mi=(0,l.Uk)(" - 具有 disk-backed 功能的持久化键值存储"),si={href:"https://github.com/krotik/eliasdb",target:"_blank",rel:"noopener noreferrer"},bi=(0,l.Uk)("eliasdb"),fi=(0,l.Uk)(" - 无依赖、事物型图数据库，支持 REST API、短语搜索以及类 SQL 的查询语言"),ci={href:"https://github.com/couchbase/Goforestdb",target:"_blank",rel:"noopener noreferrer"},Ui=(0,l.Uk)("forestdb"),Gi=(0,l.Uk)(" - ForestDB 的 Go 语言借口"),di={href:"https://github.com/bluele/gcache",target:"_blank",rel:"noopener noreferrer"},Wi=(0,l.Uk)("GCache"),vi=(0,l.Uk)(" - 支持缓存过期、 LFU、 LRU 和 ARC 的缓存库"),wi={href:"https://github.com/melihmucuk/geocache",target:"_blank",rel:"noopener noreferrer"},yi=(0,l.Uk)("geocache"),xi=(0,l.Uk)(" - 基于内存存储的缓存，适用于分布式部署的应用"),Si={href:"https://github.com/pmylund/Go-cache",target:"_blank",rel:"noopener noreferrer"},Pi=(0,l.Uk)("Go-cache"),Ti=(0,l.Uk)(" - 内存键值存储/缓存库，适用于单机程序"),Ai={href:"https://github.com/syndtr/Goleveldb",target:"_blank",rel:"noopener noreferrer"},zi=(0,l.Uk)("Goleveldb"),ji=(0,l.Uk)(" - 使用 Go 语言实现的 "),Mi={href:"https://github.com/Google/leveldb",target:"_blank",rel:"noopener noreferrer"},Ci=(0,l.Uk)("LevelDB"),Li={href:"https://github.com/Golang/groupcache",target:"_blank",rel:"noopener noreferrer"},Ri=(0,l.Uk)("groupcache"),Ii=(0,l.Uk)(" - Groupcache 是一个缓存及缓存填充库，在很多情况下用于替代 memcached."),qi={href:"https://github.com/influxdb/influxdb",target:"_blank",rel:"noopener noreferrer"},Hi=(0,l.Uk)("influxdb"),Di=(0,l.Uk)(" - 用于计量、事件及实时分析的、可扩展的数据库"),Oi={href:"https://github.com/siddontang/ledisdb",target:"_blank",rel:"noopener noreferrer"},Ei=(0,l.Uk)("ledisdb"),Ni=(0,l.Uk)(" - Ledisdb 是一个高性能 NoSQL 数据库，类似 Redi"),Bi={href:"https://github.com/jmhodges/leviGo",target:"_blank",rel:"noopener noreferrer"},Qi=(0,l.Uk)("leviGo"),Ji=(0,l.Uk)(" - LeviGo 是 LevelDB的 Go 语言封装"),Fi={href:"https://github.com/couchbase/moss",target:"_blank",rel:"noopener noreferrer"},Vi=(0,l.Uk)("moss"),Xi=(0,l.Uk)(" - Moss 是一个简单的 LSM 键值存储引擎，100% Go 语言实现"),Ki={href:"https://github.com/fern4lvarez/piladb",target:"_blank",rel:"noopener noreferrer"},Yi=(0,l.Uk)("piladb"),Zi=(0,l.Uk)(" - 轻量级 RESTful 数据库引擎，基于堆栈结构"),$i={href:"https://github.com/prometheus/prometheus",target:"_blank",rel:"noopener noreferrer"},eh=(0,l.Uk)("prometheus"),rh=(0,l.Uk)(" - 监控系统及时间序列数据库"),oh={href:"https://github.com/rqlite/rqlite",target:"_blank",rel:"noopener noreferrer"},lh=(0,l.Uk)("rqlite"),th=(0,l.Uk)(" - 基于 SQLite 的轻量级的、分布式的关系型数据库"),nh={href:"https://github.com/nanobox-io/Golang-scribble",target:"_blank",rel:"noopener noreferrer"},ah=(0,l.Uk)("Scribble"),ih=(0,l.Uk)(" - 小巧的 JSON 文件存储"),hh={href:"https://github.com/rafaeljesus/tempdb",target:"_blank",rel:"noopener noreferrer"},kh=(0,l.Uk)("tempdb"),_h=(0,l.Uk)(" - 临时数据的键值对存储"),uh={href:"https://github.com/pingcap/tidb",target:"_blank",rel:"noopener noreferrer"},gh=(0,l.Uk)("tidb"),ph=(0,l.Uk)(" - TiDB 是一个分布式的 SQL 数据库。受到了 Google F1的启发"),mh={href:"https://github.com/HouzuoGuo/tiedot",target:"_blank",rel:"noopener noreferrer"},sh=(0,l.Uk)("tiedot"),bh=(0,l.Uk)(" - 基于 Go 语言的 NoSQL 数据库"),fh={href:"https://github.com/tidwall/tile38",target:"_blank",rel:"noopener noreferrer"},ch=(0,l.Uk)("Tile38"),Uh=(0,l.Uk)(" - 地理位置数据库及实时地理围栏"),Gh=(0,l._)("p",null,[(0,l._)("em",null,"数据库迁移")],-1),dh={href:"https://github.com/GuiaBolso/darwin",target:"_blank",rel:"noopener noreferrer"},Wh=(0,l.Uk)("darwin"),vh=(0,l.Uk)(" - 数据库模式进化库"),wh={href:"https://github.com/RichardKnop/Go-fixtures",target:"_blank",rel:"noopener noreferrer"},yh=(0,l.Uk)("Go-fixtures"),xh=(0,l.Uk)(" - 类似 DjanGo fixtures，用于 Golang 的內建数据库/sql 库"),Sh={href:"https://github.com/steinbacher/Goose",target:"_blank",rel:"noopener noreferrer"},Ph=(0,l.Uk)("Goose"),Th=(0,l.Uk)(" - 数据库迁移工具。你可以通过编写增量 SQL 或 Go 语言脚本来管理你的数据库"),Ah={href:"https://github.com/Go-Gormigrate/Gormigrate",target:"_blank",rel:"noopener noreferrer"},zh=(0,l.Uk)("Gormigrate"),jh=(0,l.Uk)(" - 数据库模式迁移帮助工具，用于 Gorm ORM."),Mh={href:"https://github.com/mattes/migrate",target:"_blank",rel:"noopener noreferrer"},Ch=(0,l.Uk)("migrate"),Lh=(0,l.Uk)(" - 数据库迁移。命令行及 Go 语言库"),Rh={href:"https://github.com/pravasan/pravasan",target:"_blank",rel:"noopener noreferrer"},Ih=(0,l.Uk)("pravasan"),qh=(0,l.Uk)(" - 简单的迁移，目前支持 MySQL 但是近期打算支持 Postgres, SQLite, MonGoDB 等等"),Hh={href:"https://github.com/markbates/pop/tree/master/soda",target:"_blank",rel:"noopener noreferrer"},Dh=(0,l.Uk)("soda"),Oh=(0,l.Uk)(" - 数据库迁移、创建、 ORM等等，用于 MySQL, PostgreSQL, 以及 SQLite."),Eh={href:"https://github.com/rubenv/sql-migrate",target:"_blank",rel:"noopener noreferrer"},Nh=(0,l.Uk)("sql-migrate"),Bh=(0,l.Uk)(" - 数据库迁移工具，允许利用 Go-bindata 将数据库迁移嵌入应用程序"),Qh=(0,l._)("p",null,[(0,l._)("em",null,"数据库工具")],-1),Jh={href:"https://github.com/siddontang/Go-mysql",target:"_blank",rel:"noopener noreferrer"},Fh=(0,l.Uk)("Go-mysql"),Vh=(0,l.Uk)(" - 用于处理 MySQL 协议及复制的 Go 语言工具集."),Xh={href:"https://github.com/siddontang/Go-mysql-elasticsearch",target:"_blank",rel:"noopener noreferrer"},Kh=(0,l.Uk)("Go-mysql-elasticsearch"),Yh=(0,l.Uk)(" - 将你的 MySQL 数据自动同步到 Elasticsearch"),Zh={href:"https://github.com/flike/kingshard",target:"_blank",rel:"noopener noreferrer"},$h=(0,l.Uk)("kingshard"),ek=(0,l.Uk)(" - kingshard 是一个Go语言编写的高性能 MySQL 数据库代理"),rk={href:"https://github.com/2tvenom/myreplication",target:"_blank",rel:"noopener noreferrer"},ok=(0,l.Uk)("myreplication"),lk=(0,l.Uk)(" - MySql 二进制 log 复制监听器，支持基于语句和基于行的复制"),tk={href:"https://github.com/github/orchestrator",target:"_blank",rel:"noopener noreferrer"},nk=(0,l.Uk)("orchestrator"),ak=(0,l.Uk)(" - MySQL复制拓扑管理器及可视化工具"),ik={href:"https://github.com/sosedoff/pgweb",target:"_blank",rel:"noopener noreferrer"},hk=(0,l.Uk)("pgweb"),kk=(0,l.Uk)(" - 基于 Web 的 PostgreSQL 数据库浏览工具"),_k={href:"https://github.com/nuveo/prest",target:"_blank",rel:"noopener noreferrer"},uk=(0,l.Uk)("pREST"),gk=(0,l.Uk)(" - 通过任何 PostgreSQL 数据库提供 RESTful API"),pk={href:"https://github.com/youtube/vitess",target:"_blank",rel:"noopener noreferrer"},mk=(0,l.Uk)("vitess"),sk=(0,l.Uk)(" - vitess 提供了能够使大型 web 服务 MySQL 数据库的扩展变得更加容易的服务器及工具"),bk=(0,l._)("p",null,[(0,l._)("em",null,"用于创建和使用SQL的库")],-1),fk={href:"https://github.com/mgutz/dat",target:"_blank",rel:"noopener noreferrer"},ck=(0,l.Uk)("dat"),Uk=(0,l.Uk)(" - Go 语言 Postgres 数据库工具集"),Gk={href:"https://github.com/gchaincl/dotsql",target:"_blank",rel:"noopener noreferrer"},dk=(0,l.Uk)("Dotsql"),Wk=(0,l.Uk)(" - 一个Go语言库，帮助你将 sql 文件保存在一个地方并且方便的取用"),vk={href:"https://github.com/doug-martin/Goqu",target:"_blank",rel:"noopener noreferrer"},wk=(0,l.Uk)("Goqu"),yk=(0,l.Uk)(" - 地道的 SQL 语句创建器和查询库"),xk={href:"https://github.com/galeone/iGor",target:"_blank",rel:"noopener noreferrer"},Sk=(0,l.Uk)("iGor"),Pk=(0,l.Uk)(" - PostgreSQL 的抽象层，支持高级功能以及类 Gorm 的语法"),Tk={href:"https://github.com/Go-ozzo/ozzo-dbx",target:"_blank",rel:"noopener noreferrer"},Ak=(0,l.Uk)("ozzo-dbx"),zk=(0,l.Uk)(" - 提供强大的数据恢复功能以及构建不区分数据库类型的查询的能力"),jk={href:"https://github.com/variadico/scaneo",target:"_blank",rel:"noopener noreferrer"},Mk=(0,l.Uk)("scaneo"),Ck=(0,l.Uk)(" - 生成用于将数据库行转换为任意结构体的 Go 代码"),Lk={href:"https://github.com/elgris/sqrl",target:"_blank",rel:"noopener noreferrer"},Rk=(0,l.Uk)("sqrl"),Ik=(0,l.Uk)(" - SQL 查询创建器，是 Squirrel 的一个分叉版本，进行了性能方面的优化"),qk={href:"https://github.com/Masterminds/squirrel",target:"_blank",rel:"noopener noreferrer"},Hk=(0,l.Uk)("Squirrel"),Dk=(0,l.Uk)(" - 一个帮助你构建 SQL 查询的库"),Ok={href:"https://github.com/knq/xo",target:"_blank",rel:"noopener noreferrer"},Ek=(0,l.Uk)("xo"),Nk=(0,l.Uk)(" - 基于已知的数据库表或自定义查询生成地道的 Go 语言代码，支持 PostgreSQL, MySQL, SQLite, Oracle, 以及 Microsoft SQL Server."),Bk=(0,l._)("h2",{id:"数据库驱动",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#数据库驱动","aria-hidden":"true"},"#"),(0,l.Uk)(" 数据库驱动")],-1),Qk=(0,l._)("p",null,[(0,l._)("em",null,"用于连接和操作数据库的库")],-1),Jk=(0,l.Uk)("关系型数据库 "),Fk={href:"https://github.com/Boostport/avatica",target:"_blank",rel:"noopener noreferrer"},Vk=(0,l.Uk)("avatica"),Xk=(0,l.Uk)(" - Apache Phoenix/Avatica SQL 驱动"),Kk={href:"https://github.com/viant/bgc",target:"_blank",rel:"noopener noreferrer"},Yk=(0,l.Uk)("bgc"),Zk=(0,l.Uk)(" - 数据库连接工具包，用于通过 Go 语言访问 BigQuery"),$k={href:"https://github.com/nakagami/firebirdsql",target:"_blank",rel:"noopener noreferrer"},e_=(0,l.Uk)("firebirdsql"),r_=(0,l.Uk)(" - Firebird RDBMS SQL 驱动"),o_={href:"https://github.com/mattn/Go-adodb",target:"_blank",rel:"noopener noreferrer"},l_=(0,l.Uk)("Go-adodb"),t_=(0,l.Uk)(" - Microsoft ActiveX 对象数据库驱动"),n_={href:"https://github.com/rounds/Go-bqstreamer",target:"_blank",rel:"noopener noreferrer"},a_=(0,l.Uk)("Go-bqstreamer"),i_=(0,l.Uk)(" - BigQuery fast and concurrent stream insert."),h_={href:"https://github.com/denisenkom/Go-mssqldb",target:"_blank",rel:"noopener noreferrer"},k_=(0,l.Uk)("Go-mssqldb"),__=(0,l.Uk)(" - Go 语言Microsoft MSSQL 驱动"),u_={href:"https://github.com/mattn/Go-oci8",target:"_blank",rel:"noopener noreferrer"},g_=(0,l.Uk)("Go-oci8"),p_=(0,l.Uk)(" - Oracle 驱动"),m_={href:"https://github.com/Go-sql-driver/mysql",target:"_blank",rel:"noopener noreferrer"},s_=(0,l.Uk)("Go-sql-driver/mysql"),b_=(0,l.Uk)(" - Go 语言 MySQ L驱动"),f_={href:"https://github.com/mattn/Go-sqlite3",target:"_blank",rel:"noopener noreferrer"},c_=(0,l.Uk)("Go-sqlite3"),U_=(0,l.Uk)(" - Go 语言的 SQLite3 驱动"),G_={href:"https://github.com/minus5/Gofreetds",target:"_blank",rel:"noopener noreferrer"},d_=(0,l.Uk)("Gofreetds"),W_=(0,l.Uk)(" Microsoft MSSQL 驱动。 "),v_={href:"http://www.freetds.org",target:"_blank",rel:"noopener noreferrer"},w_=(0,l.Uk)("FreeTDS"),y_=(0,l.Uk)("的go语言封装"),x_={href:"https://github.com/jackc/pgx",target:"_blank",rel:"noopener noreferrer"},S_=(0,l.Uk)("pgx"),P_=(0,l.Uk)(" - PostgreSQL 驱动，支持比 database/sql 更多的特性"),T_={href:"https://github.com/lib/pq",target:"_blank",rel:"noopener noreferrer"},A_=(0,l.Uk)("pq"),z_=(0,l.Uk)(" - 纯 Go 语言编写的 Postgres 驱动"),j_=(0,l.Uk)("NoSQL 数据库 "),M_={href:"https://github.com/aerospike/aerospike-client-Go",target:"_blank",rel:"noopener noreferrer"},C_=(0,l.Uk)("aerospike-client-Go"),L_=(0,l.Uk)(" - Aerospike 客户端"),R_={href:"https://github.com/solher/aranGolite",target:"_blank",rel:"noopener noreferrer"},I_=(0,l.Uk)("aranGolite"),q_=(0,l.Uk)(" - AranGoDB 的轻量级 Go 语言驱动"),H_={href:"https://github.com/viant/asc",target:"_blank",rel:"noopener noreferrer"},D_=(0,l.Uk)("asc"),O_=(0,l.Uk)(" - 用于go语言连接 Aerospike"),E_={href:"https://github.com/Google/cayley",target:"_blank",rel:"noopener noreferrer"},N_=(0,l.Uk)("cayley"),B_=(0,l.Uk)(" - 支持多种后端的图数据库"),Q_={href:"https://github.com/viant/dsc",target:"_blank",rel:"noopener noreferrer"},J_=(0,l.Uk)("dsc"),F_=(0,l.Uk)(" - 数据库连接工具包，支持 SQL, NoSQL 及结构化文件    * "),V_={href:"https://github.com/underarmour/dynaGo",target:"_blank",rel:"noopener noreferrer"},X_=(0,l.Uk)("dynaGo"),K_=(0,l.Uk)(" - DynaGo 是一个符合最小惊奇原则（principle of least surprise）的 DynamoDB 客户端"),Y_={href:"https://github.com/couchbase/Go-couchbase",target:"_blank",rel:"noopener noreferrer"},Z_=(0,l.Uk)("Go-couchbase"),$_=(0,l.Uk)(" - Go 语言 Couchbase 客户的"),eu={href:"https://github.com/fjl/Go-couchdb",target:"_blank",rel:"noopener noreferrer"},ru=(0,l.Uk)("Go-couchdb"),ou=(0,l.Uk)(" - 另一个 CouchDB HTTP API 的 Go 语言封装"),lu={href:"https://github.com/couchbase/Gocb",target:"_blank",rel:"noopener noreferrer"},tu=(0,l.Uk)("Gocb"),nu=(0,l.Uk)(" - 官方 Couchbase 的 Go 语言 SDK"),au={href:"http://Gocql.github.io",target:"_blank",rel:"noopener noreferrer"},iu=(0,l.Uk)("Gocql"),hu=(0,l.Uk)(" - Apache Cassandra 的 Go 语言驱动"),ku={href:"https://github.com/bradfitz/Gomemcache/",target:"_blank",rel:"noopener noreferrer"},_u=(0,l.Uk)("Gomemcache"),uu=(0,l.Uk)(" - memcache 客户端库"),gu={href:"https://github.com/dancannon/Gorethink",target:"_blank",rel:"noopener noreferrer"},pu=(0,l.Uk)("Gorethink"),mu=(0,l.Uk)(" - RethinkDB 的 Go 语言驱动"),su={href:"https://github.com/zegl/Goriak",target:"_blank",rel:"noopener noreferrer"},bu=(0,l.Uk)("Goriak"),fu=(0,l.Uk)(" - Riak KV 的 Go 语言驱动"),cu={href:"https://Godoc.org/labix.org/v2/mGo",target:"_blank",rel:"noopener noreferrer"},Uu=(0,l.Uk)("mGo"),Gu=(0,l.Uk)(" - MonGoDB 驱动，通过简单的 API 实现了丰富的、经过测试的特性，这些 API 遵循 Go 语言的习惯"),du={href:"https://github.com/cihangir/neo4j",target:"_blank",rel:"noopener noreferrer"},Wu=(0,l.Uk)("neo4j"),vu=(0,l.Uk)(" - Neo4j Rest API 的 Go 语言接口"),wu={href:"https://github.com/davemeehan/Neo4j-Go",target:"_blank",rel:"noopener noreferrer"},yu=(0,l.Uk)("Neo4j-Go"),xu=(0,l.Uk)(" - Go 语言实现的 Neo4j REST 客户端"),Su={href:"https://github.com/jmcvetta/neoism",target:"_blank",rel:"noopener noreferrer"},Pu=(0,l.Uk)("neoism"),Tu=(0,l.Uk)(" - Go 语言 Neo4j 客户端"),Au={href:"https://github.com/garyburd/rediGo",target:"_blank",rel:"noopener noreferrer"},zu=(0,l.Uk)("rediGo"),ju=(0,l.Uk)(" - RediGo 是 Redis 数据库的 Go 语言客户端."),Mu={href:"https://github.com/go-redis/redis",target:"_blank",rel:"noopener noreferrer"},Cu=(0,l.Uk)("redis"),Lu=(0,l.Uk)(" - Redis 的 Go 语言客户端"),Ru={href:"https://github.com/hoisie/redis",target:"_blank",rel:"noopener noreferrer"},Iu=(0,l.Uk)("redis"),qu=(0,l.Uk)(" - 简单、强大的 Redis 客户端"),Hu={href:"https://github.com/bsm/redeo",target:"_blank",rel:"noopener noreferrer"},Du=(0,l.Uk)("redis"),Ou=(0,l.Uk)(" - 兼容Redis协议的 TCP 服务器/服务."),Eu={href:"https://github.com/shomali11/xredis",target:"_blank",rel:"noopener noreferrer"},Nu=(0,l.Uk)("xredis"),Bu=(0,l.Uk)(" - 类型安全的、可定制的、简洁易用的 Redis 客户端"),Qu=(0,l.Uk)("搜索及分析数据库 "),Ju={href:"https://github.com/blevesearch/bleve",target:"_blank",rel:"noopener noreferrer"},Fu=(0,l.Uk)("bleve"),Vu=(0,l.Uk)(" - 现代文本索引库"),Xu={href:"https://github.com/olivere/elastic",target:"_blank",rel:"noopener noreferrer"},Ku=(0,l.Uk)("elastic"),Yu=(0,l.Uk)(" - Go 语言的 Elasticsearch 客户端"),Zu={href:"https://github.com/cch123/elasticsql",target:"_blank",rel:"noopener noreferrer"},$u=(0,l.Uk)("elasticsql"),eg=(0,l.Uk)(" - 将 sql 转换为 elasticsearch dsl"),rg={href:"https://github.com/mattbaird/elastiGo",target:"_blank",rel:"noopener noreferrer"},og=(0,l.Uk)("elastiGo"),lg=(0,l.Uk)(" - Elasticsearch 客户端库"),tg={href:"https://github.com/belogik/Goes",target:"_blank",rel:"noopener noreferrer"},ng=(0,l.Uk)("Goes"),ag=(0,l.Uk)(" - 用于和 Elasticsearch 交互的库"),ig={href:"https://github.com/seiflotfy/skizze",target:"_blank",rel:"noopener noreferrer"},hg=(0,l.Uk)("skizze"),kg=(0,l.Uk)(" - 概率相关数据结构服务和存储"),_g=(0,l._)("h2",{id:"日期和时间",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#日期和时间","aria-hidden":"true"},"#"),(0,l.Uk)(" 日期和时间")],-1),ug=(0,l._)("p",null,[(0,l._)("em",null,"处理日期和时间的库")],-1),gg={href:"https://github.com/golang-module/carbon",target:"_blank",rel:"noopener noreferrer"},pg=(0,l.Uk)("carbon"),mg=(0,l.Uk)(" - 简单的时间扩展程序，有很多有用的方法，是 PHP Carbon 库的接口"),sg={href:"https://github.com/hako/durafmt",target:"_blank",rel:"noopener noreferrer"},bg=(0,l.Uk)("durafmt"),fg=(0,l.Uk)(" - 持续时间格式化"),cg={href:"https://github.com/wlbr/feiertage",target:"_blank",rel:"noopener noreferrer"},Ug=(0,l.Uk)("feiertage"),Gg=(0,l.Uk)(" - 一组计算德国公共假期的函数，比如复活节、感恩节等"),dg={href:"https://github.com/yaa110/Go-persian-calendar",target:"_blank",rel:"noopener noreferrer"},Wg=(0,l.Uk)("Go-persian-calendar"),vg=(0,l.Uk)(" - 太阳历"),wg={href:"https://github.com/grsmv/Goweek",target:"_blank",rel:"noopener noreferrer"},yg=(0,l.Uk)("Goweek"),xg=(0,l.Uk)(" - 处理星期的库"),Sg={href:"https://github.com/jinzhu/now",target:"_blank",rel:"noopener noreferrer"},Pg=(0,l.Uk)("now"),Tg=(0,l.Uk)(" - Now 是一个 Go 语言的时间工具集"),Ag={href:"https://github.com/kirillDanshin/nulltime",target:"_blank",rel:"noopener noreferrer"},zg=(0,l.Uk)("NullTime"),jg=(0,l.Uk)(" -时间可以是 NULL 的库"),Mg={href:"https://github.com/leekchan/timeutil",target:"_blank",rel:"noopener noreferrer"},Cg=(0,l.Uk)("timeutil"),Lg=(0,l.Uk)(" - 为 Go 语言时间包扩展了有用的功能，例如时间间隔和格式化"),Rg=(0,l._)("h2",{id:"分布式系统",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#分布式系统","aria-hidden":"true"},"#"),(0,l.Uk)(" 分布式系统")],-1),Ig=(0,l._)("p",null,[(0,l._)("em",null,"用于构建分布式系统的库")],-1),qg={href:"https://github.com/svcavallar/celeriac.v1",target:"_blank",rel:"noopener noreferrer"},Hg=(0,l.Uk)("celeriac"),Dg=(0,l.Uk)(" - 利用 Go 语言对Celery 的 worker，任务，事件进行交互和监控的库"),Og={href:"https://github.com/dgruber/drmaa",target:"_blank",rel:"noopener noreferrer"},Eg=(0,l.Uk)("drmaa"),Ng=(0,l.Uk)(" -集群调度工具的任务提交库，基于标准 DRMAA"),Bg={href:"https://github.com/vectaport/flowgraph",target:"_blank",rel:"noopener noreferrer"},Qg=(0,l.Uk)("flowgraph"),Jg=(0,l.Uk)(" - MPI 风格的读取，发送协同层"),Fg={href:"https://github.com/chrislusf/gleam",target:"_blank",rel:"noopener noreferrer"},Vg=(0,l.Uk)("gleam"),Xg=(0,l.Uk)(" - 快速、可扩展的分布式 map/reduce 系统，使用纯 Go 语言和 Luajit 编写，融合了 Go 语言的高并发能力和 Luajit 的高性能，可以独立或分布式部署运行。"),Kg={href:"https://github.com/chrislusf/glow",target:"_blank",rel:"noopener noreferrer"},Yg=(0,l.Uk)("glow"),Zg=(0,l.Uk)(" - 简单易用、可扩展的大数据处理能力，Map-Reduce 以及执行 DAG(Database Availability Group），所有功能均由Go语言编写."),$g={href:"https://github.com/dgryski/Go-jump",target:"_blank",rel:"noopener noreferrer"},ep=(0,l.Uk)("Go-jump"),rp=(0,l.Uk)(' - Google "Jump" 一致性哈希函数的借口'),op={href:"https://github.com/Go-kit/kit",target:"_blank",rel:"noopener noreferrer"},lp=(0,l.Uk)("Go-kit"),tp=(0,l.Uk)(" - 为服务工具吧，支持服务发现、负载均衡 、可插拔传输以及请求追踪等"),np={href:"https://github.com/valyala/Gorpc",target:"_blank",rel:"noopener noreferrer"},ap=(0,l.Uk)("Gorpc"),ip=(0,l.Uk)(" - 简单、快速、可扩展的 RPC 库，针对高负载场景"),hp={href:"https://github.com/grpc/grpc-Go",target:"_blank",rel:"noopener noreferrer"},kp=(0,l.Uk)("grpc-Go"),_p=(0,l.Uk)(" - Go 语言实现的 gRPC. HTTP/2 基于 RPC."),up={href:"https://github.com/hprose/hprose-Golang",target:"_blank",rel:"noopener noreferrer"},gp=(0,l.Uk)("hprose"),pp=(0,l.Uk)(" - 非常牛逼的 RPC 库，当前支持 25+ 语言。"),mp={href:"https://github.com/osaminGo/jsonrpc",target:"_blank",rel:"noopener noreferrer"},sp=(0,l.Uk)("jsonrpc"),bp=(0,l.Uk)(" - jsonrpc 包实现了 JSON-RPC 2.0."),fp={href:"https://github.com/ybbus/jsonrpc",target:"_blank",rel:"noopener noreferrer"},cp=(0,l.Uk)("jsonrpc"),Up=(0,l.Uk)(" - JSON-RPC 2.0 HTTP 客户端实现"),Gp={href:"https://github.com/devopsfaith/krakend",target:"_blank",rel:"noopener noreferrer"},dp=(0,l.Uk)("KrakenD"),Wp=(0,l.Uk)(" - 带有中间件的，高性能 API 网关框架"),vp={href:"https://github.com/micro/micro",target:"_blank",rel:"noopener noreferrer"},wp=(0,l.Uk)("micro"),yp=(0,l.Uk)(" - 微服务工具套件和分布式系统平台"),xp={href:"https://github.com/nats-io/gnatsd",target:"_blank",rel:"noopener noreferrer"},Sp=(0,l.Uk)("NATS"),Pp=(0,l.Uk)(" - 轻量级、高性能微服务系统，用于微服务、物联网以及云"),Tp={href:"https://github.com/hashicorp/raft",target:"_blank",rel:"noopener noreferrer"},Ap=(0,l.Uk)("raft"),zp=(0,l.Uk)(" - Raft 一致性协议的 Go 语言实现, 作者是 HashiCorp."),jp={href:"https://github.com/coreos/etcd/tree/master/raft#readme",target:"_blank",rel:"noopener noreferrer"},Mp=(0,l.Uk)("raft"),Cp=(0,l.Uk)(" - Raft 一致性协议的 Go 语言实现, 作者是 CoreOS."),Lp={href:"https://github.com/uber/ringpop-Go",target:"_blank",rel:"noopener noreferrer"},Rp=(0,l.Uk)("ringpop-Go"),Ip=(0,l.Uk)(" - 可扩展、容错的应用层分片库"),qp={href:"https://github.com/smallnest/rpcx",target:"_blank",rel:"noopener noreferrer"},Hp=(0,l.Uk)("rpcx"),Dp=(0,l.Uk)(" - rpcx是一个类似阿里巴巴 Dubbo 和微博 Motan 的分布式的 RPC 服务框架"),Op={href:"https://github.com/ursiform/sleuth",target:"_blank",rel:"noopener noreferrer"},Ep=(0,l.Uk)("sleuth"),Np=(0,l.Uk)(" - 在 HTTP 服务之间进行无主 p2p 自动发现和 RPC通信(使用 "),Bp={href:"https://github.com/zeromq/libzmq",target:"_blank",rel:"noopener noreferrer"},Qp=(0,l.Uk)("ZeroMQ"),Jp=(0,l.Uk)(")."),Fp={href:"https://github.com/tendermint/tendermint",target:"_blank",rel:"noopener noreferrer"},Vp=(0,l.Uk)("tendermint"),Xp=(0,l.Uk)(" - 一个高性能的中间件，用于将任何语言编写的状态机转换为一个拜占庭容错状态机，使用Tendermint 一致性及区块链协议"),Kp={href:"https://github.com/anacrolix/torrent",target:"_blank",rel:"noopener noreferrer"},Yp=(0,l.Uk)("torrent"),Zp=(0,l.Uk)(" - BitTorrent 客户端"),$p={href:"https://Godoc.org/github.com/anacrolix/dht",target:"_blank",rel:"noopener noreferrer"},em=(0,l.Uk)("dht"),rm=(0,l.Uk)(" - BitTorrent Kademlia DHT 的实现."),om={href:"https://github.com/Sioro-Neoku/Go-peerflix",target:"_blank",rel:"noopener noreferrer"},lm=(0,l.Uk)("Go-peerflix"),tm=(0,l.Uk)(" - 视频流 torrent 客户端"),nm=(0,l._)("h2",{id:"电子邮件",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#电子邮件","aria-hidden":"true"},"#"),(0,l.Uk)(" 电子邮件")],-1),am=(0,l._)("p",null,[(0,l._)("em",null,"用于创建和发送电子邮件的库")],-1),im={href:"https://github.com/aymerick/douceur",target:"_blank",rel:"noopener noreferrer"},hm=(0,l.Uk)("douceur"),km=(0,l.Uk)(" - HTML 邮件中的内联 CSS"),_m={href:"https://github.com/jordan-wright/email",target:"_blank",rel:"noopener noreferrer"},um=(0,l.Uk)("email"),gm=(0,l.Uk)(" - 一个健壮的、灵活的 email 库"),pm={href:"https://github.com/toorop/Go-dkim",target:"_blank",rel:"noopener noreferrer"},mm=(0,l.Uk)("Go-dkim"),sm=(0,l.Uk)(" - DKIM 库，用于对 email 进行签名和验证"),bm={href:"https://github.com/emersion/Go-imap",target:"_blank",rel:"noopener noreferrer"},fm=(0,l.Uk)("Go-imap"),cm=(0,l.Uk)(" - IMAP 库，用于客户端和服务器"),Um={href:"https://github.com/emersion/Go-message",target:"_blank",rel:"noopener noreferrer"},Gm=(0,l.Uk)("Go-message"),dm=(0,l.Uk)(" - 用于触雷互联网消息格式和邮件的库"),Wm={href:"https://github.com/Go-Gomail/Gomail/",target:"_blank",rel:"noopener noreferrer"},vm=(0,l.Uk)("Gomail"),wm=(0,l.Uk)(" - Gomail 是一个非常简单且强大的库，用于发送电子邮件"),ym={href:"https://github.com/hectane/hectane",target:"_blank",rel:"noopener noreferrer"},xm=(0,l.Uk)("Hectane"),Sm=(0,l.Uk)(" - 轻量级 SMTP 客户端，提供 HTTP API"),Pm={href:"https://github.com/matcornic/hermes",target:"_blank",rel:"noopener noreferrer"},Tm=(0,l.Uk)("hermes"),Am=(0,l.Uk)(" - 一个用于生成干净、响应式 HTML e-mail 的包"),zm={href:"https://github.com/mailhog/MailHog",target:"_blank",rel:"noopener noreferrer"},jm=(0,l.Uk)("MailHog"),Mm=(0,l.Uk)(" - Email 及 SMTP 测试工具，具有 web 及 API 接口"),Cm={href:"https://github.com/sendgrid/sendgrid-Go",target:"_blank",rel:"noopener noreferrer"},Lm=(0,l.Uk)("SendGrid"),Rm=(0,l.Uk)(" - SendGrid 的 Go 语言库，用于发送电子邮件"),Im={href:"https://github.com/mailhog/smtp",target:"_blank",rel:"noopener noreferrer"},qm=(0,l.Uk)("smtp"),Hm=(0,l.Uk)(" - SMTP 服务器协议状态机"),Dm=(0,l._)("h2",{id:"嵌入式脚本语言",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#嵌入式脚本语言","aria-hidden":"true"},"#"),(0,l.Uk)(" 嵌入式脚本语言")],-1),Om=(0,l._)("p",null,[(0,l._)("em",null,"在你的 Go 代码中嵌入其他语言.")],-1),Em={href:"https://github.com/PuerkitoBio/aGora",target:"_blank",rel:"noopener noreferrer"},Nm=(0,l.Uk)("aGora"),Bm=(0,l.Uk)(" - 一种动态类型的可以嵌入 Go 中的编程语言"),Qm={href:"https://github.com/mattn/anko",target:"_blank",rel:"noopener noreferrer"},Jm=(0,l.Uk)("anko"),Fm=(0,l.Uk)(" - Go 语言编写的解释器"),Vm={href:"https://github.com/alexeyco/binder",target:"_blank",rel:"noopener noreferrer"},Xm=(0,l.Uk)("binder"),Km=(0,l.Uk)(" - Lua 接口, 基于 "),Ym={href:"https://github.com/yuin/Gopher-lua",target:"_blank",rel:"noopener noreferrer"},Zm=(0,l.Uk)("Gopher-lua"),$m={href:"https://github.com/jcla1/gisp",target:"_blank",rel:"noopener noreferrer"},es=(0,l.Uk)("gisp"),rs=(0,l.Uk)(" - Simple LISP"),os={href:"https://github.com/olebedev/Go-duktape",target:"_blank",rel:"noopener noreferrer"},ls=(0,l.Uk)("Go-duktape"),ts=(0,l.Uk)(" - Duktape JavaScript 引擎的 Go 语言接口"),ns={href:"https://github.com/Shopify/Go-lua",target:"_blank",rel:"noopener noreferrer"},as=(0,l.Uk)("Go-lua"),is=(0,l.Uk)(" - Lua 5.2 虚拟机的纯 Go 语言接口"),hs={href:"https://github.com/deuill/Go-php",target:"_blank",rel:"noopener noreferrer"},ks=(0,l.Uk)("Go-php"),_s=(0,l.Uk)(" - PHP 的 Go 语言接口"),us={href:"https://github.com/sbinet/Go-python",target:"_blank",rel:"noopener noreferrer"},gs=(0,l.Uk)("Go-python"),ps=(0,l.Uk)(" - CPython C-API 的 Go 语言接口"),ms={href:"https://github.com/aarzilli/Golua",target:"_blank",rel:"noopener noreferrer"},ss=(0,l.Uk)("Golua"),bs=(0,l.Uk)(" - Lua C API。的 Go 语言接口"),fs={href:"https://github.com/yuin/Gopher-lua",target:"_blank",rel:"noopener noreferrer"},cs=(0,l.Uk)("Gopher-lua"),Us=(0,l.Uk)(" - Go 语言编写的 Lua 5.1 虚拟机和编译器"),Gs={href:"https://github.com/db47h/ngaro",target:"_blank",rel:"noopener noreferrer"},ds=(0,l.Uk)("ngaro"),Ws=(0,l.Uk)(" - 可嵌入的 Ngaro 虚拟机实现，支持在 Retro 中使用脚步"),vs={href:"https://github.com/robertkrimen/otto",target:"_blank",rel:"noopener noreferrer"},ws=(0,l.Uk)("otto"),ys=(0,l.Uk)(" - Go 编写的 Javascrip 解释器"),xs={href:"https://github.com/ian-kent/purl",target:"_blank",rel:"noopener noreferrer"},Ss=(0,l.Uk)("purl"),Ps=(0,l.Uk)(" - 嵌入 Go 语言的 Perl 5.18.2"),Ts=(0,l._)("h2",{id:"文件",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#文件","aria-hidden":"true"},"#"),(0,l.Uk)(" 文件")],-1),As=(0,l._)("p",null,[(0,l._)("em",null,"用于处理文件和文件系统的库")],-1),zs={href:"https://github.com/spf13/afero",target:"_blank",rel:"noopener noreferrer"},js=(0,l.Uk)("afero"),Ms=(0,l.Uk)(" - 一个文件系统的抽象系统"),Cs={href:"https://github.com/artonge/Go-csv-tag",target:"_blank",rel:"noopener noreferrer"},Ls=(0,l.Uk)("Go-csv-tag"),Rs=(0,l.Uk)(" - 使用 tag 导入 csv"),Is={href:"https://github.com/artonge/Go-gtfs",target:"_blank",rel:"noopener noreferrer"},qs=(0,l.Uk)("Go-gtfs"),Hs=(0,l.Uk)(" - 加载 gtfs 文件"),Ds={href:"https://github.com/rjeczalik/notify",target:"_blank",rel:"noopener noreferrer"},Os=(0,l.Uk)("notify"),Es=(0,l.Uk)(" - 文件系统提示库，具有简单的 API ，类似 os/signal."),Ns={href:"https://github.com/dixonwille/skywalker",target:"_blank",rel:"noopener noreferrer"},Bs=(0,l.Uk)("skywalker"),Qs=(0,l.Uk)(" - 允许你简单方便的并发浏览文件系统"),Js={href:"https://github.com/posener/tarfs",target:"_blank",rel:"noopener noreferrer"},Fs=(0,l.Uk)("tarfs"),Vs=(0,l.Uk)(" - 为 tar 文件实现的 "),Xs=(0,l._)("code",null,"[FileSystem](https://Godoc.org/github.com/kr/fs#FileSystem)",-1),Ks={href:"https://Godoc.org/github.com/kr/fs#FileSystem",target:"_blank",rel:"noopener noreferrer"},Ys=(0,l.Uk)("接口"),Zs=(0,l._)("h2",{id:"财经",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#财经","aria-hidden":"true"},"#"),(0,l.Uk)(" 财经")],-1),$s=(0,l._)("p",null,[(0,l._)("em",null,"会计及财务库")],-1),eb={href:"https://github.com/leekchan/accounting",target:"_blank",rel:"noopener noreferrer"},rb=(0,l.Uk)("accounting"),ob=(0,l.Uk)(" - 金钱及货币格式"),lb={href:"https://github.com/shopspring/decimal",target:"_blank",rel:"noopener noreferrer"},tb=(0,l.Uk)("decimal"),nb=(0,l.Uk)(" - 任意精度、固定点十进制数"),ab={href:"https://github.com/FlashBoys/Go-finance",target:"_blank",rel:"noopener noreferrer"},ib=(0,l.Uk)("Go-finance"),hb=(0,l.Uk)(" - 使用 Go 语言来理解财务市场数据"),kb={href:"https://github.com/rhymond/Go-money",target:"_blank",rel:"noopener noreferrer"},_b=(0,l.Uk)("Go-money"),ub=(0,l.Uk)(" - "),gb={href:"https://martinfowler.com/eaaCatalog/money.html",target:"_blank",rel:"noopener noreferrer"},pb=(0,l.Uk)("Fowler 金钱模型"),mb=(0,l.Uk)("的实现"),sb={href:"https://github.com/aclindsa/ofxGo",target:"_blank",rel:"noopener noreferrer"},bb=(0,l.Uk)("ofxGo"),fb=(0,l.Uk)(" - 查询 OFX 服务器并解析其响应 (有一个示例的命令行客户端)"),cb={href:"https://github.com/dannyvankooten/vat",target:"_blank",rel:"noopener noreferrer"},Ub=(0,l.Uk)("vat"),Gb=(0,l.Uk)(" - VAT 验证及欧洲增值税率工具"),db=(0,l._)("h2",{id:"表单",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#表单","aria-hidden":"true"},"#"),(0,l.Uk)(" 表单")],-1),Wb=(0,l._)("p",null,[(0,l._)("em",null,"操作表单的库")],-1),vb={href:"https://github.com/robfig/bind",target:"_blank",rel:"noopener noreferrer"},wb=(0,l.Uk)("bind"),yb=(0,l.Uk)(" - 将表单数据绑定到任意的 Go 变量上"),xb={href:"https://github.com/mholt/binding",target:"_blank",rel:"noopener noreferrer"},Sb=(0,l.Uk)("binding"),Pb=(0,l.Uk)(" - 将来自 net/HTTP 请求的表单、JSON 数据绑定到结构体"),Tb={href:"https://github.com/leebenson/conform",target:"_blank",rel:"noopener noreferrer"},Ab=(0,l.Uk)("conform"),zb=(0,l.Uk)(" - 检查用户输入并基于结构标签来清理数据"),jb={href:"https://github.com/Go-playground/form",target:"_blank",rel:"noopener noreferrer"},Mb=(0,l.Uk)("form"),Cb=(0,l.Uk)(" - 解码 url 中的数据到 Go 语言变量中以及将 Go 语言变量编码进 url 支持Dual Array 及 Full map"),Lb={href:"https://github.com/monoculum/formam",target:"_blank",rel:"noopener noreferrer"},Rb=(0,l.Uk)("formam"),Ib=(0,l.Uk)(" - 将表单数据解码到结构体"),qb={href:"https://github.com/albrow/forms",target:"_blank",rel:"noopener noreferrer"},Hb=(0,l.Uk)("forms"),Db=(0,l.Uk)(" - 框架无关的表单/JSON数据解析验证库，支持多部分表单及文件"),Ob={href:"https://github.com/Gorilla/csrf",target:"_blank",rel:"noopener noreferrer"},Eb=(0,l.Uk)("Gorilla/csrf"),Nb=(0,l.Uk)(" - 为 Go 语言 web 应用提供 CSRF 防御"),Bb={href:"https://github.com/justinas/nosurf",target:"_blank",rel:"noopener noreferrer"},Qb=(0,l.Uk)("nosurf"),Jb=(0,l.Uk)(" - CSRF 防御中间件"),Fb=(0,l._)("h2",{id:"游戏开发",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#游戏开发","aria-hidden":"true"},"#"),(0,l.Uk)(" 游戏开发")],-1),Vb=(0,l._)("p",null,[(0,l._)("em",null,"超赞的游戏开发库")],-1),Xb={href:"https://github.com/azul3d/engine",target:"_blank",rel:"noopener noreferrer"},Kb=(0,l.Uk)("Azul3D"),Yb=(0,l.Uk)(" - Go 语言编写的 3D 游戏引擎"),Zb={href:"https://github.com/hajimehoshi/ebiten",target:"_blank",rel:"noopener noreferrer"},$b=(0,l.Uk)("Ebiten"),ef=(0,l.Uk)(" - Go 语言编写的简单的 2D 游戏库"),rf={href:"https://github.com/EnGoEngine/enGo",target:"_blank",rel:"noopener noreferrer"},of=(0,l.Uk)("enGo"),lf=(0,l.Uk)(" - EnGo 是一个开源的 2D 游戏引擎，遵循实体-组件-系统范式"),tf={href:"https://github.com/vova616/GarageEngine",target:"_blank",rel:"noopener noreferrer"},nf=(0,l.Uk)("GarageEngine"),af=(0,l.Uk)(" - 2d 游戏引擎，利用 OpenGL 工作"),hf={href:"https://github.com/runningwild/glop",target:"_blank",rel:"noopener noreferrer"},kf=(0,l.Uk)("glop"),_f=(0,l.Uk)(" - Glop (Game Library Of Power) 是一个很简单的跨平台游戏库"),uf={href:"https://github.com/beefsack/Go-astar",target:"_blank",rel:"noopener noreferrer"},gf=(0,l.Uk)("Go-astar"),pf=(0,l.Uk)(" - Go 语言实现的 A* 寻路算法"),mf={href:"https://github.com/GlenKelley/Go-collada",target:"_blank",rel:"noopener noreferrer"},sf=(0,l.Uk)("Go-collada"),bf=(0,l.Uk)(" - 操作 Collada 文件格式的 Go 语言库"),ff={href:"https://github.com/veandco/Go-sdl2",target:"_blank",rel:"noopener noreferrer"},cf=(0,l.Uk)("Go-sdl2"),Uf=(0,l.Uk)(" - "),Gf={href:"https://www.libsdl.org/",target:"_blank",rel:"noopener noreferrer"},df=(0,l.Uk)("Simple DirectMedia Layer"),Wf=(0,l.Uk)("的 Go 语言接口"),vf={href:"https://github.com/ungerik/Go3d",target:"_blank",rel:"noopener noreferrer"},wf=(0,l.Uk)("Go3d"),yf=(0,l.Uk)(" - 专注性能的 2D/3D 数学库"),xf={href:"https://github.com/xtaci/Gonet",target:"_blank",rel:"noopener noreferrer"},Sf=(0,l.Uk)("Gonet"),Pf=(0,l.Uk)(" - Go 语言实现的游戏服务器框架"),Tf={href:"https://github.com/name5566/leaf",target:"_blank",rel:"noopener noreferrer"},Af=(0,l.Uk)("Leaf"),zf=(0,l.Uk)(" - 轻量级游戏服务器框架"),jf={href:"https://github.com/faiface/pixel",target:"_blank",rel:"noopener noreferrer"},Mf=(0,l.Uk)("Pixel"),Cf=(0,l.Uk)(" - 手工 2D 游戏引擎库"),Lf={href:"https://github.com/gen2brain/raylib-Go",target:"_blank",rel:"noopener noreferrer"},Rf=(0,l.Uk)("raylib-Go"),If=(0,l.Uk)(" - "),qf={href:"http://www.raylib.com/",target:"_blank",rel:"noopener noreferrer"},Hf=(0,l.Uk)("raylib"),Df=(0,l.Uk)("的 Go 语言接口，简单、易用的用于学习游戏编程的库"),Of={href:"https://github.com/JoelOtter/termloop",target:"_blank",rel:"noopener noreferrer"},Ef=(0,l.Uk)("termloop"),Nf=(0,l.Uk)(" - 终端游戏引擎，基于 Termbox"),Bf=(0,l._)("h2",{id:"代码生成与泛型",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#代码生成与泛型","aria-hidden":"true"},"#"),(0,l.Uk)(" 代码生成与泛型")],-1),Qf=(0,l._)("p",null,[(0,l._)("em",null,"一些增强语言的功能的工具例如通过代码生成支持泛型")],-1),Jf={href:"https://github.com/t0pep0/efaceconv",target:"_blank",rel:"noopener noreferrer"},Ff=(0,l.Uk)("efaceconv"),Vf=(0,l.Uk)(" - 代码生成工具，用于高效的将 interface{} 转换为不可变类型，不需要进行任何内存分配"),Xf={href:"https://github.com/clipperhouse/gen",target:"_blank",rel:"noopener noreferrer"},Kf=(0,l.Uk)("gen"),Yf=(0,l.Uk)(" - 代码生成工具,用于提供类似泛型的功能"),Zf={href:"https://github.com/ahmetalpbalkan/Go-linq",target:"_blank",rel:"noopener noreferrer"},$f=(0,l.Uk)("Go-linq"),ec=(0,l.Uk)(" - 类似 .NET LINQ 的查询方法"),rc={href:"https://github.com/rjeczalik/interfaces",target:"_blank",rel:"noopener noreferrer"},oc=(0,l.Uk)("interfaces"),lc=(0,l.Uk)(" - 命令行工具，用于生成接口定义"),tc={href:"https://github.com/dave/jennifer",target:"_blank",rel:"noopener noreferrer"},nc=(0,l.Uk)("jennifer"),ac=(0,l.Uk)(" - 不适用模板生成任意 Go 语言代码"),ic={href:"https://github.com/ungerik/pkgreflect",target:"_blank",rel:"noopener noreferrer"},hc=(0,l.Uk)("pkgreflect"),kc=(0,l.Uk)(" - 用于包作用域反射的 Go 语言预处理器"),_c=(0,l._)("h2",{id:"go-编译器",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#go-编译器","aria-hidden":"true"},"#"),(0,l.Uk)(" Go 编译器")],-1),uc=(0,l._)("p",null,[(0,l._)("em",null,"用于把 Go 语言编译为其他语言的工具")],-1),gc={href:"https://github.com/Gopherjs/Gopherjs",target:"_blank",rel:"noopener noreferrer"},pc=(0,l.Uk)("Gopherjs"),mc=(0,l.Uk)(" - 把 Go 编译为 JavaScript."),sc={href:"https://github.com/Go-llvm/llGo",target:"_blank",rel:"noopener noreferrer"},bc=(0,l.Uk)("llGo"),fc=(0,l.Uk)(" - 基于 LLVM 的 Go 语言编译器"),cc={href:"https://github.com/tardisGo/tardisGo",target:"_blank",rel:"noopener noreferrer"},Uc=(0,l.Uk)("tardisGo"),Gc=(0,l.Uk)(" - Golang 转换为 Haxe 进而转换为 CPP/CSharp/Java/JavaScript 的编译器."),dc=(0,l._)("h2",{id:"协程",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#协程","aria-hidden":"true"},"#"),(0,l.Uk)(" 协程")],-1),Wc=(0,l._)("p",null,[(0,l._)("em",null,"用于管理和处理Go 语言协程的工具")],-1),vc={href:"https://github.com/workanator/Go-floc",target:"_blank",rel:"noopener noreferrer"},wc=(0,l.Uk)("Go-floc"),yc=(0,l.Uk)(" - 轻松编排 Go 语言协程"),xc={href:"https://github.com/kamildrazkiewicz/Go-flow",target:"_blank",rel:"noopener noreferrer"},Sc=(0,l.Uk)("Go-flow"),Pc=(0,l.Uk)(" - 控制 Go 语言协程的执行顺序"),Tc={href:"https://github.com/benmanns/Goworker",target:"_blank",rel:"noopener noreferrer"},Ac=(0,l.Uk)("Goworker"),zc=(0,l.Uk)(" - Goworker 是一个基于 Go 语言的后台worker"),jc={href:"https://github.com/ivpusic/grpool",target:"_blank",rel:"noopener noreferrer"},Mc=(0,l.Uk)("grpool"),Cc=(0,l.Uk)(" - 轻量级 Go 语言协程池"),Lc={href:"https://github.com/Go-playground/pool",target:"_blank",rel:"noopener noreferrer"},Rc=(0,l.Uk)("pool"),Ic=(0,l.Uk)(" - 有限消费者协程或无限协程池，用于简单的处理协程和取消协程"),qc={href:"https://github.com/kamilsk/semaphore",target:"_blank",rel:"noopener noreferrer"},Hc=(0,l.Uk)("semaphore"),Dc=(0,l.Uk)(" - 实现了信号量模式，提供了超时锁定、解锁操作，基于通道和上下文。"),Oc={href:"https://github.com/Jeffail/tunny",target:"_blank",rel:"noopener noreferrer"},Ec=(0,l.Uk)("tunny"),Nc=(0,l.Uk)(" - Go 语言协程池"),Bc=(0,l._)("h2",{id:"gui",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#gui","aria-hidden":"true"},"#"),(0,l.Uk)(" GUI")],-1),Qc=(0,l._)("p",null,[(0,l._)("em",null,"用于构建 GUI 程序的库")],-1),Jc=(0,l._)("p",null,[(0,l._)("em",null,"工具包")],-1),Fc={href:"https://github.com/murlokswarm/app",target:"_blank",rel:"noopener noreferrer"},Vc=(0,l.Uk)("app"),Xc=(0,l.Uk)(" - 使用Go, HTML 和 CSS 进行应用程序开发的库 支持 MacOS, Windows in progress."),Kc={href:"https://github.com/asticode/Go-astilectron",target:"_blank",rel:"noopener noreferrer"},Yc=(0,l.Uk)("Go-astilectron"),Zc=(0,l.Uk)(" - 使用 Go 以及 HTML/JS/CSS 构建应用程序. (基于Electron)"),$c={href:"http://mattn.github.io/Go-gtk/",target:"_blank",rel:"noopener noreferrer"},eU=(0,l.Uk)("Go-gtk"),rU=(0,l.Uk)(" - GTK 的 Go 语言接口"),oU={href:"https://github.com/Go-qml/qml",target:"_blank",rel:"noopener noreferrer"},lU=(0,l.Uk)("Go-qml"),tU=(0,l.Uk)(" - QML 对 Go 语言的支持"),nU={href:"https://github.com/sciter-sdk/Go-sciter",target:"_blank",rel:"noopener noreferrer"},aU=(0,l.Uk)("Go-sciter"),iU=(0,l.Uk)(" - Sciter 的 Go 语言接口 : 支持现代 GUI 程序开发的、嵌入式 HTML/CSS/脚本 引擎。跨平台。"),hU={href:"https://github.com/visualfc/Goqt",target:"_blank",rel:"noopener noreferrer"},kU=(0,l.Uk)("Goqt"),_U=(0,l.Uk)(" - Qt的 Go 语言接口"),uU={href:"https://github.com/Gotk3/Gotk3",target:"_blank",rel:"noopener noreferrer"},gU=(0,l.Uk)("Gotk3"),pU=(0,l.Uk)(" - GTK3 的 Go 语言接口"),mU={href:"https://github.com/dtylman/Gowd",target:"_blank",rel:"noopener noreferrer"},sU=(0,l.Uk)("Gowd"),bU=(0,l.Uk)(" - 使用 Go, HTML, CSS 和 NW.js 语言进行快速、简单的桌面 UI 开发。跨平台"),fU={href:"https://github.com/therecipe/qt",target:"_blank",rel:"noopener noreferrer"},cU=(0,l.Uk)("qt"),UU=(0,l.Uk)(" - Qt 的 Go 语言接口 (支持 Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi)"),GU={href:"https://github.com/andlabs/ui",target:"_blank",rel:"noopener noreferrer"},dU=(0,l.Uk)("ui"),WU=(0,l.Uk)(" - 平台原生 GUI 库。跨平台"),vU={href:"https://github.com/lxn/walk",target:"_blank",rel:"noopener noreferrer"},wU=(0,l.Uk)("walk"),yU=(0,l.Uk)(" - windows 应用程序开发工具包"),xU=(0,l._)("p",null,[(0,l._)("em",null,"交互")],-1),SU={href:"https://github.com/deckarep/Gosx-notifier",target:"_blank",rel:"noopener noreferrer"},PU=(0,l.Uk)("Gosx-notifier"),TU=(0,l.Uk)(" - OSX 桌面提醒库"),AU={href:"https://github.com/Go-vGo/robotGo",target:"_blank",rel:"noopener noreferrer"},zU=(0,l.Uk)("robotGo"),jU=(0,l.Uk)(" - 跨平台 GUI 自动化；控制鼠标、键盘及其他设备"),MU={href:"https://github.com/getlantern/systray",target:"_blank",rel:"noopener noreferrer"},CU=(0,l.Uk)("systray"),LU=(0,l.Uk)(" - 一个跨平台的 Go 语言库，用于在桌面提醒区域放置按钮及菜单"),RU={href:"https://github.com/shurcooL/trayhost",target:"_blank",rel:"noopener noreferrer"},IU=(0,l.Uk)("trayhost"),qU=(0,l.Uk)(" - 一个跨平台的 Go 语言库，用于在主机系统任务条区域放置按钮及菜单"),HU=(0,l._)("h2",{id:"硬件",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#硬件","aria-hidden":"true"},"#"),(0,l.Uk)(" 硬件")],-1),DU=(0,l._)("p",null,[(0,l._)("em",null,"库、工具以及教程，讲解如何操控硬件")],-1),OU=(0,l.Uk)("参见 "),EU={href:"https://github.com/rakyll/Go-hardware",target:"_blank",rel:"noopener noreferrer"},NU=(0,l.Uk)("Go-hardware"),BU=(0,l.Uk)(" 获取更加全面的信息"),QU=(0,l._)("h2",{id:"图像",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#图像","aria-hidden":"true"},"#"),(0,l.Uk)(" 图像")],-1),JU=(0,l._)("p",null,[(0,l._)("em",null,"用于操作图像的库")],-1),FU={href:"https://github.com/anthonynsimon/bild",target:"_blank",rel:"noopener noreferrer"},VU=(0,l.Uk)("bild"),XU=(0,l.Uk)(" - 汇集了使用 Go 语言编写的图像处理算法"),KU={href:"https://github.com/h2non/bimg",target:"_blank",rel:"noopener noreferrer"},YU=(0,l.Uk)("bimg"),ZU=(0,l.Uk)(" - 利用 libvips 进行快速高效的图像处理"),$U={href:"https://github.com/pravj/geopattern",target:"_blank",rel:"noopener noreferrer"},eG=(0,l.Uk)("geopattern"),rG=(0,l.Uk)(" - 从字符串创建优美的图样"),oG={href:"https://github.com/fogleman/gg",target:"_blank",rel:"noopener noreferrer"},lG=(0,l.Uk)("gg"),tG=(0,l.Uk)(" - 使用 Go 编写的 2D 渲染程序"),nG={href:"https://github.com/disintegration/gift",target:"_blank",rel:"noopener noreferrer"},aG=(0,l.Uk)("gift"),iG=(0,l.Uk)(" - 一组图像处理滤波器"),hG={href:"https://github.com/ungerik/Go-cairo",target:"_blank",rel:"noopener noreferrer"},kG=(0,l.Uk)("Go-cairo"),_G=(0,l.Uk)(" - cairo 图形库的 Go 语言接口"),uG={href:"https://github.com/bolknote/Go-gd",target:"_blank",rel:"noopener noreferrer"},gG=(0,l.Uk)("Go-gd"),pG=(0,l.Uk)(" - GD 库的 Go 语言接口"),mG={href:"https://github.com/koyachi/Go-nude",target:"_blank",rel:"noopener noreferrer"},sG=(0,l.Uk)("Go-nude"),bG=(0,l.Uk)(" - 使用 Go 语言进行裸替检测"),fG={href:"https://github.com/lazywei/Go-opencv",target:"_blank",rel:"noopener noreferrer"},cG=(0,l.Uk)("Go-opencv"),UG=(0,l.Uk)(" - OpenCV 的 Go 语言接口"),GG={href:"https://github.com/hybridgroup/gocv",target:"_blank",rel:"noopener noreferrer"},dG=(0,l.Uk)("gocv"),WG=(0,l.Uk)(" - OpenCV 的 Go 语言接口,支持 OpenCV4.x"),vG={href:"https://github.com/jyotiska/Go-webcolors",target:"_blank",rel:"noopener noreferrer"},wG=(0,l.Uk)("Go-webcolors"),yG=(0,l.Uk)(" - webcolors 库的 Go 语言接口"),xG={href:"https://github.com/Gographics/imagick",target:"_blank",rel:"noopener noreferrer"},SG=(0,l.Uk)("imagick"),PG=(0,l.Uk)(" - ImageMagick 的 MagickWand C 语言 API 的 Go 语言接口"),TG={href:"https://github.com/h2non/imaginary",target:"_blank",rel:"noopener noreferrer"},AG=(0,l.Uk)("imaginary"),zG=(0,l.Uk)(" - 快速且简单的 HTTP 微服务，用于图像缩放"),jG={href:"https://github.com/disintegration/imaging",target:"_blank",rel:"noopener noreferrer"},MG=(0,l.Uk)("imaging"),CG=(0,l.Uk)(" - 简单的 Go 语言图像处理包"),LG={href:"https://github.com/hawx/img",target:"_blank",rel:"noopener noreferrer"},RG=(0,l.Uk)("img"),IG=(0,l.Uk)(" - 图像操作工具精选集"),qG={href:"https://github.com/fogleman/ln",target:"_blank",rel:"noopener noreferrer"},HG=(0,l.Uk)("ln"),DG=(0,l.Uk)(" - 3D 图线艺术渲染"),OG={href:"https://github.com/donatj/mpo",target:"_blank",rel:"noopener noreferrer"},EG=(0,l.Uk)("mpo"),NG=(0,l.Uk)(" - MPO 3D 照片解码与转换工具."),BG={href:"https://github.com/thoas/picfit",target:"_blank",rel:"noopener noreferrer"},QG=(0,l.Uk)("picfit"),JG=(0,l.Uk)(" - 一个使用 Go 语言编写的图片缩放服务器"),FG={href:"https://github.com/fogleman/pt",target:"_blank",rel:"noopener noreferrer"},VG=(0,l.Uk)("pt"),XG=(0,l.Uk)(" - 光线追踪引擎"),KG={href:"https://github.com/nfnt/resize",target:"_blank",rel:"noopener noreferrer"},YG=(0,l.Uk)("resize"),ZG=(0,l.Uk)(" - 使用 Go 语言编写的具有常见差值功能的图片缩放工具"),$G={href:"https://github.com/bamiaux/rez",target:"_blank",rel:"noopener noreferrer"},ed=(0,l.Uk)("rez"),rd=(0,l.Uk)(" - 纯 Go 及 SIMD 实现的图像缩放库"),od={href:"https://github.com/muesli/smartcrop",target:"_blank",rel:"noopener noreferrer"},ld=(0,l.Uk)("smartcrop"),td=(0,l.Uk)(" - 为任意图片进行剪裁的工具"),nd={href:"https://github.com/ajstarks/svGo",target:"_blank",rel:"noopener noreferrer"},ad=(0,l.Uk)("svGo"),id=(0,l.Uk)(" - 用于生成 SVG 的 Go 语言库"),hd={href:"https://github.com/ftrvxmtrx/tga",target:"_blank",rel:"noopener noreferrer"},kd=(0,l.Uk)("tga"),_d=(0,l.Uk)(" - tga 是一个 TARGA 图像格式解码/编码器"),ud={href:"https://github.com/skip2/go-qrcode",target:"_blank",rel:"noopener noreferrer"},gd=(0,l.Uk)("go-qrcode"),pd=(0,l.Uk)(" - QR Code 编码器（Go语言实现）"),md=(0,l._)("h2",{id:"物联网",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#物联网","aria-hidden":"true"},"#"),(0,l.Uk)(" 物联网")],-1),sd=(0,l._)("p",null,[(0,l._)("em",null,"用于为物联网设备编程的库.")],-1),bd={href:"https://github.com/connectordb/connectordb",target:"_blank",rel:"noopener noreferrer"},fd=(0,l.Uk)("connectordb"),cd=(0,l.Uk)(" - 开源个人数据及物联网平台"),Ud={href:"https://github.com/Goiot/devices",target:"_blank",rel:"noopener noreferrer"},Gd=(0,l.Uk)("devices"),dd=(0,l.Uk)(" - 物联网设备套件库"),Wd={href:"https://github.com/xcodersun/eywa",target:"_blank",rel:"noopener noreferrer"},vd=(0,l.Uk)("eywa"),wd=(0,l.Uk)(" - Eywa 是一个持续追踪所有连接设备的连接管理器"),yd={href:"https://github.com/tibcosoftware/floGo",target:"_blank",rel:"noopener noreferrer"},xd=(0,l.Uk)("floGo"),Sd=(0,l.Uk)(" - FloGo 是一个用于物联网 Edge App 及集成的开源框架"),Pd={href:"https://github.com/paypal/gatt",target:"_blank",rel:"noopener noreferrer"},Td=(0,l.Uk)("gatt"),Ad=(0,l.Uk)(" - Gatt 是一个用于创建低功耗蓝牙外设的库"),zd={href:"https://github.com/hybridgroup/Gobot/",target:"_blank",rel:"noopener noreferrer"},jd=(0,l.Uk)("Gobot"),Md=(0,l.Uk)(" - Gobot 是一个用于机器人，物理计算以及物联网的库"),Cd={href:"https://github.com/Mainflux/mainflux",target:"_blank",rel:"noopener noreferrer"},Ld=(0,l.Uk)("mainflux"),Rd=(0,l.Uk)(" - 工业网物联网消息及设备管理服务器"),Id={href:"https://github.com/sensorbee/sensorbee",target:"_blank",rel:"noopener noreferrer"},qd=(0,l.Uk)("sensorbee"),Hd=(0,l.Uk)(" - 轻量级物联网流处理引擎"),Dd=(0,l._)("h2",{id:"日志",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#日志","aria-hidden":"true"},"#"),(0,l.Uk)(" 日志")],-1),Od=(0,l._)("p",null,[(0,l._)("em",null,"用于生成和操作日志文件的库.")],-1),Ed={href:"https://github.com/kpanGo/glg",target:"_blank",rel:"noopener noreferrer"},Nd=(0,l.Uk)("glg"),Bd=(0,l.Uk)(" - glg 是一个简单、快速、分级的日志库"),Qd={href:"https://github.com/Golang/glog",target:"_blank",rel:"noopener noreferrer"},Jd=(0,l.Uk)("glog"),Fd=(0,l.Uk)(" - 分级记录日志的库"),Vd={href:"https://github.com/utahta/Go-cronowriter",target:"_blank",rel:"noopener noreferrer"},Xd=(0,l.Uk)("Go-cronowriter"),Kd=(0,l.Uk)(" 对日志文件进行自动循环写入的库基于当前日期和时间，类似 cronolog."),Yd={href:"https://github.com/siddontang/Go-log",target:"_blank",rel:"noopener noreferrer"},Zd=(0,l.Uk)("Go-log"),$d=(0,l.Uk)(" - 支持多处理器及日志分级的库"),eW={href:"https://github.com/ian-kent/Go-log",target:"_blank",rel:"noopener noreferrer"},rW=(0,l.Uk)("Go-log"),oW=(0,l.Uk)(" - Go 语言实现的 Log4j"),lW={href:"https://github.com/apsdehal/Go-logger",target:"_blank",rel:"noopener noreferrer"},tW=(0,l.Uk)("Go-logger"),nW=(0,l.Uk)(" - 支持日志分级的简单的日志工具"),aW={href:"https://github.com/sadlil/Gologger",target:"_blank",rel:"noopener noreferrer"},iW=(0,l.Uk)("Gologger"),hW=(0,l.Uk)(" - 简单易用的日志库，可以在彩色控制台、简易控制的、文件或 Elasticsearch 中记录"),kW={href:"https://github.com/aphistic/Gomol",target:"_blank",rel:"noopener noreferrer"},_W=(0,l.Uk)("Gomol"),uW=(0,l.Uk)(" - 支持多种输出，结构化的日志模块，可以扩展它的输出"),gW={href:"https://github.com/One-com/Gone/tree/master/log#readme",target:"_blank",rel:"noopener noreferrer"},pW=(0,l.Uk)("Gone/log"),mW=(0,l.Uk)(" - 快速、可扩展、全功能、兼容标准库的日志库"),sW={href:"https://github.com/apex/log",target:"_blank",rel:"noopener noreferrer"},bW=(0,l.Uk)("log"),fW=(0,l.Uk)(" - 结构化日志库"),cW={href:"https://github.com/Go-playground/log",target:"_blank",rel:"noopener noreferrer"},UW=(0,l.Uk)("log"),GW=(0,l.Uk)(" - 简单、可配置、可扩展的结构化日志库"),dW={href:"https://github.com/firstrow/logvoyage",target:"_blank",rel:"noopener noreferrer"},WW=(0,l.Uk)("log-voyage"),vW=(0,l.Uk)(" - 全功能日志saas 使用 Go 语言编写"),wW={href:"https://github.com/inconshreveable/log15",target:"_blank",rel:"noopener noreferrer"},yW=(0,l.Uk)("log15"),xW=(0,l.Uk)(" - 简单强大的日志库"),SW={href:"https://github.com/ewwwwwqm/logdump",target:"_blank",rel:"noopener noreferrer"},PW=(0,l.Uk)("logdump"),TW=(0,l.Uk)(" - 支持分级的日志库"),AW={href:"https://github.com/chzyer/logex",target:"_blank",rel:"noopener noreferrer"},zW=(0,l.Uk)("logex"),jW=(0,l.Uk)(" - Go 语言日志库，支持追踪和分级，基于标准库进行了封装"),MW={href:"https://github.com/azer/logger",target:"_blank",rel:"noopener noreferrer"},CW=(0,l.Uk)("logger"),LW=(0,l.Uk)(" - 一个极简的日志库"),RW={href:"https://github.com/Sirupsen/logrus",target:"_blank",rel:"noopener noreferrer"},IW=(0,l.Uk)("logrus"),qW=(0,l.Uk)(" - 支持结构化的日志工具."),HW={href:"https://github.com/sebest/logrusly",target:"_blank",rel:"noopener noreferrer"},DW=(0,l.Uk)("logrusly"),OW=(0,l.Uk)(" - "),EW={href:"https://github.com/sirupsen/logrus",target:"_blank",rel:"noopener noreferrer"},NW=(0,l.Uk)("logrus"),BW=(0,l.Uk)(" 的插件，用于将错误发送到 "),QW={href:"https://www.loggly.com/",target:"_blank",rel:"noopener noreferrer"},JW=(0,l.Uk)("Loggly"),FW=(0,l.Uk)("."),VW={href:"https://github.com/hashicorp/logutils",target:"_blank",rel:"noopener noreferrer"},XW=(0,l.Uk)("logutils"),KW=(0,l.Uk)(" - 对 Go 语言标准日志工具进行了扩展，使其更好用"),YW={href:"https://github.com/mgutz/logxi",target:"_blank",rel:"noopener noreferrer"},ZW=(0,l.Uk)("logxi"),$W=(0,l.Uk)(" - 十二要素 app 日志工具，非常快速，令你开心"),ev={href:"https://github.com/natefinch/lumberjack",target:"_blank",rel:"noopener noreferrer"},rv=(0,l.Uk)("lumberjack"),ov=(0,l.Uk)(" - 简单的循环日志工具，实现了 io.WriteCloser."),lv={href:"https://github.com/jbrodriguez/mlog",target:"_blank",rel:"noopener noreferrer"},tv=(0,l.Uk)("mlog"),nv=(0,l.Uk)(" - 一个简单的日志模块，可以分5级并有一个可选的循环日志文件记录功能，支持 stdout/stderr 输出."),av={href:"https://github.com/Go-ozzo/ozzo-log",target:"_blank",rel:"noopener noreferrer"},iv=(0,l.Uk)("ozzo-log"),hv=(0,l.Uk)(" - 高性能日志库，支持日志严重级别、分类及过滤。可以将过滤后的信息发送到不同的目的地(例如： 控制台、网络、邮箱)."),kv={href:"https://github.com/cihub/seelog",target:"_blank",rel:"noopener noreferrer"},_v=(0,l.Uk)("seelog"),uv=(0,l.Uk)(" - 一个灵活的、解耦的、格式化的日志库"),gv={href:"https://github.com/ventu-io/slf",target:"_blank",rel:"noopener noreferrer"},pv=(0,l.Uk)("slf"),mv=(0,l.Uk)(" - 简单日志门面（The Structured Logging Facade (SLF) ） (类似 SLF4J，但是它是结构化的，并且专为 Go 语言设计)"),sv={href:"https://github.com/ventu-io/slog",target:"_blank",rel:"noopener noreferrer"},bv=(0,l.Uk)("slog"),fv=(0,l.Uk)(" - 为 Go 语言实现的结构化日志门面（Structured Logging Facade (SLF) ）"),cv={href:"https://github.com/davecgh/Go-spew",target:"_blank",rel:"noopener noreferrer"},Uv=(0,l.Uk)("spew"),Gv=(0,l.Uk)(" - 为 Go 语言的数据结构实现了一个整洁的打印功能，有助于调试"),dv={href:"https://github.com/alexcesaro/log",target:"_blank",rel:"noopener noreferrer"},Wv=(0,l.Uk)("stdlog"),vv=(0,l.Uk)(" - Stdlog 是一个面向对象的库，提供了分级日志功能，对于定时任务很有用."),wv={href:"https://github.com/hpcloud/tail",target:"_blank",rel:"noopener noreferrer"},yv=(0,l.Uk)("tail"),xv=(0,l.Uk)(" - 这个 Go 语言软件包力争模拟 BSD tail 的功能"),Sv={href:"https://github.com/xfxdev/xlog",target:"_blank",rel:"noopener noreferrer"},Pv=(0,l.Uk)("xlog"),Tv=(0,l.Uk)(" - 插件架构以及灵活的日志系统，具有日志等级控制，多日志目标以及自定义日志格式功能"),Av={href:"https://github.com/rs/xlog",target:"_blank",rel:"noopener noreferrer"},zv=(0,l.Uk)("xlog"),jv=(0,l.Uk)(" - 结构化日志 for "),Mv=(0,l._)("code",null,"net/context",-1),Cv=(0,l.Uk)(" aware HTTP handlers ，可以灵活的分发"),Lv={href:"https://github.com/uber-Go/zap",target:"_blank",rel:"noopener noreferrer"},Rv=(0,l.Uk)("zap"),Iv=(0,l.Uk)(" - 快速的、结构化的、分级的日志库"),qv={href:"https://github.com/rs/zerolog",target:"_blank",rel:"noopener noreferrer"},Hv=(0,l.Uk)("zerolog"),Dv=(0,l.Uk)(" - 零分配 JSON 日志."),Ov=(0,l._)("h2",{id:"机器学习",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#机器学习","aria-hidden":"true"},"#"),(0,l.Uk)(" 机器学习")],-1),Ev=(0,l._)("p",null,[(0,l._)("em",null,"机器学习库")],-1),Nv={href:"https://github.com/jbrukh/bayesian",target:"_blank",rel:"noopener noreferrer"},Bv=(0,l.Uk)("bayesian"),Qv=(0,l.Uk)(" - 贝叶斯分类器"),Jv={href:"https://github.com/ryanbressler/CloudForest",target:"_blank",rel:"noopener noreferrer"},Fv=(0,l.Uk)("CloudForest"),Vv=(0,l.Uk)(" - 纯 Go 语言编写的快速、灵活、多线程决策树"),Xv={href:"https://github.com/MaxHalford/gaGo",target:"_blank",rel:"noopener noreferrer"},Kv=(0,l.Uk)("gaGo"),Yv=(0,l.Uk)(" - 多种群，灵活的，并行的遗传算法"),Zv={href:"https://github.com/white-pony/Go-fann",target:"_blank",rel:"noopener noreferrer"},$v=(0,l.Uk)("Go-fann"),ew=(0,l.Uk)(" - 快速人工神经网络库(FANN)的 Go 语言借口."),rw={href:"https://github.com/thoj/Go-galib",target:"_blank",rel:"noopener noreferrer"},ow=(0,l.Uk)("Go-galib"),lw=(0,l.Uk)(" - Go 语言编写的遗传算法库"),tw={href:"https://github.com/daviddengcn/Go-pr",target:"_blank",rel:"noopener noreferrer"},nw=(0,l.Uk)("Go-pr"),aw=(0,l.Uk)(" -  Go 语言模式识别库"),iw={href:"https://github.com/Goml/Gobrain",target:"_blank",rel:"noopener noreferrer"},hw=(0,l.Uk)("Gobrain"),kw=(0,l.Uk)(" -  Go 语言编写的神经网络"),_w={href:"https://github.com/e-dard/Godist",target:"_blank",rel:"noopener noreferrer"},uw=(0,l.Uk)("Godist"),gw=(0,l.Uk)(" - 多种概率分布及相关方法"),pw={href:"https://github.com/tomcraven/Goga",target:"_blank",rel:"noopener noreferrer"},mw=(0,l.Uk)("Goga"),sw=(0,l.Uk)(" -  Go 语言遗传算法库"),bw={href:"https://github.com/sjwhitworth/Golearn",target:"_blank",rel:"noopener noreferrer"},fw=(0,l.Uk)("GoLearn"),cw=(0,l.Uk)(" -  Go 语言通用机器学习库"),Uw={href:"https://github.com/danieldk/Golinear",target:"_blank",rel:"noopener noreferrer"},Gw=(0,l.Uk)("Golinear"),dw=(0,l.Uk)(" - liblinear 库的 Go 语言接口"),Ww={href:"https://github.com/cdipaolo/Goml",target:"_blank",rel:"noopener noreferrer"},vw=(0,l.Uk)("Goml"),ww=(0,l.Uk)(" - 即时go语言机器学习库"),yw={href:"https://github.com/timkaye11/GoRecommend",target:"_blank",rel:"noopener noreferrer"},xw=(0,l.Uk)("GoRecommend"),Sw=(0,l.Uk)(" - Go 语言推荐算法库"),Pw={href:"https://github.com/chewxy/GorGonia",target:"_blank",rel:"noopener noreferrer"},Tw=(0,l.Uk)("GorGonia"),Aw=(0,l.Uk)(" - 基于图的计算库，类似于 Theano。提供了一些原型用于构建各种个样的机器学习和神经网络算法"),zw={href:"https://github.com/datastream/libsvm",target:"_blank",rel:"noopener noreferrer"},jw=(0,l.Uk)("libsvm"),Mw=(0,l.Uk)(" - libsvm 的 Go 语言版本，基于 LIBSVM 3.14."),Cw={href:"https://github.com/NullHypothesis/mlGo",target:"_blank",rel:"noopener noreferrer"},Lw=(0,l.Uk)("mlGo"),Rw=(0,l.Uk)(" - 这个项目点目标是在 Go 语言中提供极简的机器学习算法"),Iw={href:"https://github.com/jinyeom/neat",target:"_blank",rel:"noopener noreferrer"},qw=(0,l.Uk)("neat"),Hw=(0,l.Uk)(" - 即插即用的并行 Go 语言框架，用于增强拓扑神经网络 (NEAT)."),Dw={href:"https://github.com/schuyler/neural-Go",target:"_blank",rel:"noopener noreferrer"},Ow=(0,l.Uk)("neural-Go"),Ew=(0,l.Uk)(" - Go 语言实现的多层感知神经网络，通过反向传播算法进行训练."),Nw={href:"https://github.com/ThePaw/probab",target:"_blank",rel:"noopener noreferrer"},Bw=(0,l.Uk)("probab"),Qw=(0,l.Uk)(" -概率分布函数、贝叶斯推理。使用纯 Go 语言编写"),Jw={href:"https://github.com/muesli/reGommend",target:"_blank",rel:"noopener noreferrer"},Fw=(0,l.Uk)("reGommend"),Vw=(0,l.Uk)(" - 推荐系统及协同过滤引擎"),Xw={href:"https://github.com/eaigner/shield",target:"_blank",rel:"noopener noreferrer"},Kw=(0,l.Uk)("shield"),Yw=(0,l.Uk)(" - 贝叶斯文吧分类器，包含灵活的分词器和存储后端"),Zw=(0,l._)("h2",{id:"消息",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#消息","aria-hidden":"true"},"#"),(0,l.Uk)(" 消息")],-1),$w=(0,l._)("p",null,[(0,l._)("em",null,"实现了消息系统的库")],-1),ey={href:"https://github.com/centrifugal/centrifuGo",target:"_blank",rel:"noopener noreferrer"},ry=(0,l.Uk)("CentrifuGo"),oy=(0,l.Uk)(" - 实时消息服务器"),ly={href:"https://github.com/Godbus/dbus",target:"_blank",rel:"noopener noreferrer"},ty=(0,l.Uk)("dbus"),ny=(0,l.Uk)(" - D-Bus的 Go 语言接口"),ay={href:"https://github.com/appleboy/drone-line",target:"_blank",rel:"noopener noreferrer"},iy=(0,l.Uk)("drone-line"),hy=(0,l.Uk)(" - 通过软件包，docker 或是 Drone CI来发送 "),ky={href:"https://business.line.me/en/services/bot",target:"_blank",rel:"noopener noreferrer"},_y=(0,l.Uk)("Line"),uy=(0,l.Uk)(" 通知"),gy={href:"https://github.com/olebedev/emitter",target:"_blank",rel:"noopener noreferrer"},py=(0,l.Uk)("emitter"),my=(0,l.Uk)(" - 通过Go语言的方式发送事件消息，可以使用通配符，断言，取消发送等优秀特性"),sy={href:"https://github.com/asaskevich/EventBus",target:"_blank",rel:"noopener noreferrer"},by=(0,l.Uk)("EventBus"),fy=(0,l.Uk)(" - 轻量级事件库，支持异步"),cy={href:"https://github.com/osaminGo/gaurun-client",target:"_blank",rel:"noopener noreferrer"},Uy=(0,l.Uk)("gaurun-client"),Gy=(0,l.Uk)(" - Go 语言编写的 Gaurun 客户端"),dy={href:"https://github.com/desertbit/glue",target:"_blank",rel:"noopener noreferrer"},Wy=(0,l.Uk)("Glue"),vy=(0,l.Uk)(" - 健壮的 Go 和 Javascript Socket 库 (可以用来替代 Socket.io)."),wy={href:"https://github.com/ventu-io/Go-longpoll",target:"_blank",rel:"noopener noreferrer"},yy=(0,l.Uk)("Go-longpoll"),xy=(0,l.Uk)(" -  支持长轮询的发布与订阅"),Sy={href:"https://github.com/TheCreeper/Go-notify",target:"_blank",rel:"noopener noreferrer"},Py=(0,l.Uk)("Go-notify"),Ty=(0,l.Uk)(" - 原生实现的桌面通知规范"),Ay={href:"https://github.com/nsqio/Go-nsq",target:"_blank",rel:"noopener noreferrer"},zy=(0,l.Uk)("Go-nsq"),jy=(0,l.Uk)(" - NSQ 官方 Go 语言库"),My={href:"https://github.com/GooGollee/Go-socket.io",target:"_blank",rel:"noopener noreferrer"},Cy=(0,l.Uk)("Go-socket.io"),Ly=(0,l.Uk)(" - Go 语言的 socket.io库 ,一个实时应用框架."),Ry={href:"https://github.com/maxatome/Go-vitotrol",target:"_blank",rel:"noopener noreferrer"},Iy=(0,l.Uk)("Go-vitotrol"),qy=(0,l.Uk)(" - Viessmann Vitotrol 服务的 Go 语言客户端"),Hy={href:"https://github.com/trivaGo/Gollum",target:"_blank",rel:"noopener noreferrer"},Dy=(0,l.Uk)("Gollum"),Oy=(0,l.Uk)(" - 一个 n:m 的多路复用器，从不同的源汇聚消息并向目标进行广播"),Ey={href:"https://github.com/jcuga/Golongpoll",target:"_blank",rel:"noopener noreferrer"},Ny=(0,l.Uk)("Golongpoll"),By=(0,l.Uk)(" - HTTP 长轮询服务器库，让 web 发布与订阅变的更简单."),Qy={href:"https://github.com/ian-kent/Goose",target:"_blank",rel:"noopener noreferrer"},Jy=(0,l.Uk)("Goose"),Fy=(0,l.Uk)(" - Go 语言实现的服务器端事件发送"),Vy={href:"https://github.com/Terry-Mao/Gopush-cluster",target:"_blank",rel:"noopener noreferrer"},Xy=(0,l.Uk)("Gopush-cluster"),Ky=(0,l.Uk)(" - Gopush-cluster 是一个 Go 语言实现的支持集群的comet服务（支持 websocket，和tcp协议）"),Yy={href:"https://github.com/appleboy/Gorush",target:"_blank",rel:"noopener noreferrer"},Zy=(0,l.Uk)("Gorush"),$y=(0,l.Uk)(" - 通知推送服务器，使用 "),ex={href:"https://github.com/sideshow/apns2",target:"_blank",rel:"noopener noreferrer"},rx=(0,l.Uk)("APNs2"),ox=(0,l.Uk)(" 和 Google "),lx={href:"https://github.com/Google/Go-gcm",target:"_blank",rel:"noopener noreferrer"},tx=(0,l.Uk)("GCM"),nx=(0,l.Uk)("."),ax={href:"https://github.com/smancke/guble",target:"_blank",rel:"noopener noreferrer"},ix=(0,l.Uk)("guble"),hx=(0,l.Uk)(" - 一个使用通知推送(Google Firebase Cloud Messaging, Apple Push Notification services, SMS)、websockets 、REST API 的消息服务器。提供了分布式操作和消息持久化特性"),kx={href:"https://github.com/RichardKnop/machinery",target:"_blank",rel:"noopener noreferrer"},_x=(0,l.Uk)("machinery"),ux=(0,l.Uk)(" - 异步任务队列，基于分布式消息处理"),gx={href:"https://github.com/Go-manGos/manGos",target:"_blank",rel:"noopener noreferrer"},px=(0,l.Uk)("manGos"),mx=(0,l.Uk)(' - 纯 Go 语言实现的 Nanomsg ("Scalable Protocols")'),sx={href:"https://github.com/olahol/melody",target:"_blank",rel:"noopener noreferrer"},bx=(0,l.Uk)("melody"),fx=(0,l.Uk)(" - 用于处理 websocket 会话的一个极简框架，包括广播和自动 ping/pong 处理"),cx={href:"https://github.com/nats-io/nats",target:"_blank",rel:"noopener noreferrer"},Ux=(0,l.Uk)("NATS Go Client"),Gx=(0,l.Uk)(" - 轻量级高性能发布订阅(publish-subscribe) 以及分布式消息队列系统，这个一个Go语言库."),dx={href:"https://github.com/rafaeljesus/nsq-event-bus",target:"_blank",rel:"noopener noreferrer"},Wx=(0,l.Uk)("nsq-event-bus"),vx=(0,l.Uk)(" - 针对 NSQ 的主题和频道进行了简单的封装"),wx={href:"https://github.com/dailymotion/oplog",target:"_blank",rel:"noopener noreferrer"},yx=(0,l.Uk)("oplog"),xx=(0,l.Uk)(" - 原生的 oplog/replication 系统，用于 REST APIs"),Sx={href:"https://github.com/tuxychandru/pubsub",target:"_blank",rel:"noopener noreferrer"},Px=(0,l.Uk)("pubsub"),Tx=(0,l.Uk)(" - 一个简单的 pubsub 软件包"),Ax={href:"https://github.com/sybrexsys/RapidMQ",target:"_blank",rel:"noopener noreferrer"},zx=(0,l.Uk)("RapidMQ"),jx=(0,l.Uk)(" - RapidMQ 是一个轻量级，可靠的本地消息队列管理库"),Mx={href:"https://github.com/Shopify/sarama",target:"_blank",rel:"noopener noreferrer"},Cx=(0,l.Uk)("sarama"),Lx=(0,l.Uk)(" - 用于 Apache Kafka 的库"),Rx={href:"https://github.com/uniqush/uniqush-push",target:"_blank",rel:"noopener noreferrer"},Ix=(0,l.Uk)("Uniqush-Push"),qx=(0,l.Uk)(" - 基于 Redis 的统一推服务，用于服务器端向移动客户端推送消息"),Hx={href:"https://github.com/pebbe/zmq4",target:"_blank",rel:"noopener noreferrer"},Dx=(0,l.Uk)("zmq4"),Ox=(0,l.Uk)(" - ZeroMQ version 4的 GO 语言接口。也有适用于"),Ex={href:"https://github.com/pebbe/zmq3",target:"_blank",rel:"noopener noreferrer"},Nx=(0,l.Uk)("version 3"),Bx=(0,l.Uk)(" 及 "),Qx={href:"https://github.com/pebbe/zmq2",target:"_blank",rel:"noopener noreferrer"},Jx=(0,l.Uk)("version 2"),Fx=(0,l.Uk)("的"),Vx=(0,l._)("h2",{id:"杂项",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#杂项","aria-hidden":"true"},"#"),(0,l.Uk)(" 杂项")],-1),Xx=(0,l._)("p",null,[(0,l._)("em",null,"一些暂时无法归类的库")],-1),Kx={href:"https://github.com/magic003/alice",target:"_blank",rel:"noopener noreferrer"},Yx=(0,l.Uk)("alice"),Zx=(0,l.Uk)(" -  GO 语言依赖注入容器"),$x={href:"https://github.com/mholt/archiver",target:"_blank",rel:"noopener noreferrer"},eS=(0,l.Uk)("archiver"),rS=(0,l.Uk)(" - 用于制作和解压 .zip 和 .tar.gz 文件的库和命令"),oS={href:"https://github.com/artyom/autoflags",target:"_blank",rel:"noopener noreferrer"},lS=(0,l.Uk)("autoflags"),tS=(0,l.Uk)(" - 通过结构体自动定义命令行标记的go语言软件包"),nS={href:"https://github.com/kirillDanshin/avgRating",target:"_blank",rel:"noopener noreferrer"},aS=(0,l.Uk)("avgRating"),iS=(0,l.Uk)(" - 利用 Wilson Score 方程计算平均分及评级"),hS={href:"https://github.com/dimiro1/banner",target:"_blank",rel:"noopener noreferrer"},kS=(0,l.Uk)("banner"),_S=(0,l.Uk)(" - 在你的go语言应用中添加炫酷的横幅"),uS={href:"https://github.com/distatus/battery",target:"_blank",rel:"noopener noreferrer"},gS=(0,l.Uk)("battery"),pS=(0,l.Uk)(" - 跨平台电源信息库"),mS={href:"https://github.com/icza/bitio",target:"_blank",rel:"noopener noreferrer"},sS=(0,l.Uk)("bitio"),bS=(0,l.Uk)(" - 高度优化的比特级读写"),fS={href:"https://github.com/digitalcrab/browscap_Go",target:"_blank",rel:"noopener noreferrer"},cS=(0,l.Uk)("browscap_Go"),US=(0,l.Uk)(" - "),GS={href:"http://browscap.org/",target:"_blank",rel:"noopener noreferrer"},dS=(0,l.Uk)("Browser Capabilities Project"),WS=(0,l.Uk)("的 GO 语言库"),vS={href:"https://github.com/cstockton/Go-conv",target:"_blank",rel:"noopener noreferrer"},wS=(0,l.Uk)("conv"),yS=(0,l.Uk)(" - conv 提供了一种快速且符合直觉的 GO 语言类型转换"),xS={href:"https://github.com/miolini/datacounter",target:"_blank",rel:"noopener noreferrer"},SS=(0,l.Uk)("datacounter"),PS=(0,l.Uk)(" - Greaders/writer/HTTP.ResponseWriter 计数器"),TS={href:"https://github.com/pkg/errors",target:"_blank",rel:"noopener noreferrer"},AS=(0,l.Uk)("errors"),zS=(0,l.Uk)(" - 提供简单的错误处理"),jS={href:"https://github.com/Go-chat-bot/bot",target:"_blank",rel:"noopener noreferrer"},MS=(0,l.Uk)("Go-chat-bot"),CS=(0,l.Uk)(" - IRC、Slack、Telegram 聊天机器人"),LS={href:"https://github.com/jolestar/Go-commons-pool",target:"_blank",rel:"noopener noreferrer"},RS=(0,l.Uk)("Go-commons-pool"),IS=(0,l.Uk)(" - 通用对象池"),qS={href:"https://github.com/hashicorp/Go-multierror",target:"_blank",rel:"noopener noreferrer"},HS=(0,l.Uk)("Go-multierror"),DS=(0,l.Uk)(" - 这个 Go 语言库用于将一系列的错误作为一个整体来显示"),OS={href:"https://github.com/Go-openapi",target:"_blank",rel:"noopener noreferrer"},ES=(0,l.Uk)("Go-openapi"),NS=(0,l.Uk)(" - 一些用于处理和利用 open-api 的库集合"),BS={href:"https://github.com/eapache/Go-resiliency",target:"_blank",rel:"noopener noreferrer"},QS=(0,l.Uk)("Go-resiliency"),JS=(0,l.Uk)(" - GO 语言弹性模式"),FS={href:"https://github.com/oklahomer/Go-sarah",target:"_blank",rel:"noopener noreferrer"},VS=(0,l.Uk)("Go-sarah"),XS=(0,l.Uk)(" - 用于构建聊天机器人的框架，支持 LINE, Slack, Gitter等等"),KS={href:"https://github.com/ventu-io/Go-shortid",target:"_blank",rel:"noopener noreferrer"},YS=(0,l.Uk)("Go-shortid"),ZS=(0,l.Uk)(" - 超短的、唯一的、非序列的、对 url 友好的 id"),$S={href:"https://github.com/gen2brain/Go-unarr",target:"_blank",rel:"noopener noreferrer"},eP=(0,l.Uk)("Go-unarr"),rP=(0,l.Uk)(" - 解压缩库，可用于 RAR, TAR, ZIP 以及 7z 归档文件."),oP={href:"https://github.com/satori/Go.uuid",target:"_blank",rel:"noopener noreferrer"},lP=(0,l.Uk)("Go.uuid"),tP=(0,l.Uk)(" - 全球唯一标示符的实现(UUID)，同时支持生成和解析"),nP={href:"https://github.com/brianvoe/Gofakeit",target:"_blank",rel:"noopener noreferrer"},aP=(0,l.Uk)("Gofakeit"),iP=(0,l.Uk)(" - Go 语言编写的随机数据生成器"),hP={href:"https://github.com/jakehl/Goid",target:"_blank",rel:"noopener noreferrer"},kP=(0,l.Uk)("Goid"),_P=(0,l.Uk)(" - 生成和解析符合 RFC4122 规定的 V4 UUIDs."),uP={href:"https://github.com/shirou/Gopsutil",target:"_blank",rel:"noopener noreferrer"},gP=(0,l.Uk)("Gopsutil"),pP=(0,l.Uk)(" - 用于获取进程和系统资源利用率（cpu，内存，磁盘）的库，跨平台"),mP={href:"https://github.com/haxpax/Gosms",target:"_blank",rel:"noopener noreferrer"},sP=(0,l.Uk)("Gosms"),bP=(0,l.Uk)(" - 你本地的SMS 网关，可以用来发送 SMS"),fP={href:"https://github.com/pariz/Gountries",target:"_blank",rel:"noopener noreferrer"},cP=(0,l.Uk)("Gountries"),UP=(0,l.Uk)(" - 一个用来展示国家及其行政区划数据的库"),GP={href:"https://github.com/sbstjn/hanu",target:"_blank",rel:"noopener noreferrer"},dP=(0,l.Uk)("hanu"),WP=(0,l.Uk)(" - 用于编写 Slack 聊天机器人的库"),vP={href:"https://github.com/dimiro1/health",target:"_blank",rel:"noopener noreferrer"},wP=(0,l.Uk)("health"),yP=(0,l.Uk)(" - 简单易用、可扩展的健康检查库"),xP={href:"https://github.com/osaminGo/indiGo",target:"_blank",rel:"noopener noreferrer"},SP=(0,l.Uk)("indiGo"),PP=(0,l.Uk)(" - 唯一id生成器，使用 Sonyflake 并通过Base58进行编码"),TP={href:"https://github.com/albrow/jobs",target:"_blank",rel:"noopener noreferrer"},AP=(0,l.Uk)("jobs"),zP=(0,l.Uk)(" - 持久化且灵活的后台任务库"),jP={href:"https://github.com/zhulik/margelet",target:"_blank",rel:"noopener noreferrer"},MP=(0,l.Uk)("margelet"),CP=(0,l.Uk)(" - 用于创建 Telegram 聊天机器人的库"),LP={href:"https://github.com/xor-gate/secdl",target:"_blank",rel:"noopener noreferrer"},RP=(0,l.Uk)("secdl"),IP=(0,l.Uk)(" - Lighttpd ModSecDownload alGorithm ported to Go to secure download urls."),qP={href:"https://github.com/shomali11/slacker",target:"_blank",rel:"noopener noreferrer"},HP=(0,l.Uk)("slacker"),DP=(0,l.Uk)(" - 用于编写 Slack 聊天机器人的库，非常易用"),OP={href:"https://github.com/Go-playground/stats",target:"_blank",rel:"noopener noreferrer"},EP=(0,l.Uk)("stats"),NP=(0,l.Uk)(" - 监控 Go 内存状态及系统状态，通过UDP将数据发送到任何地方"),BP={href:"https://github.com/agext/uuid",target:"_blank",rel:"noopener noreferrer"},QP=(0,l.Uk)("uuid"),JP=(0,l.Uk)(" - 生成，编解码 UUIDs v1 ，具有快速的或或密钥级随机节点标识"),FP={href:"https://github.com/azr/generators/tree/master/varhandler",target:"_blank",rel:"noopener noreferrer"},VP=(0,l.Uk)("VarHandler"),XP=(0,l.Uk)(" - Generate boilerplate HTTP input and ouput handling."),KP={href:"https://github.com/txgruppi/werr",target:"_blank",rel:"noopener noreferrer"},YP=(0,l.Uk)("werr"),ZP=(0,l.Uk)(" - Error Wrapper creates an wrapper for the error type in Go which captures the File, Line and Stack of where it was called."),$P={href:"https://github.com/Go-xkg/xkg",target:"_blank",rel:"noopener noreferrer"},eT=(0,l.Uk)("xkg"),rT=(0,l.Uk)(" - X Keyboard Grabber"),oT={href:"https://github.com/huandu/xstrings",target:"_blank",rel:"noopener noreferrer"},lT=(0,l.Uk)("xstrings"),tT=(0,l.Uk)(" - 一些有用的字符串函数的集合"),nT=(0,l._)("h2",{id:"自然语言处理",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#自然语言处理","aria-hidden":"true"},"#"),(0,l.Uk)(" 自然语言处理")],-1),aT=(0,l._)("p",null,[(0,l._)("em",null,"用于处理人类语言的库")],-1),iT={href:"https://github.com/danieldk/dpar/",target:"_blank",rel:"noopener noreferrer"},hT=(0,l.Uk)("dpar"),kT=(0,l.Uk)(" - 基于变换的统计依赖关系解析器"),_T={href:"https://github.com/ThePaw/Go-eco",target:"_blank",rel:"noopener noreferrer"},uT=(0,l.Uk)("Go-eco"),gT=(0,l.Uk)(" - 相似性，相异性及距离度量；差异性，均匀度和不均匀度测量；物种多样性估计；群落线模型"),pT={href:"https://github.com/nicksnyder/Go-i18n/",target:"_blank",rel:"noopener noreferrer"},mT=(0,l.Uk)("Go-i18n"),sT=(0,l.Uk)(" - 软件包及相关工具，用于处理本地化文本"),bT={href:"https://github.com/dveselov/mystem",target:"_blank",rel:"noopener noreferrer"},fT=(0,l.Uk)("Go-mystem"),cT=(0,l.Uk)(" - Yandex.Mystem 的  CGo 接口， Yandex.Mystem 是一个俄语词汇形态学分析器"),UT={href:"https://github.com/nuance/Go-nlp",target:"_blank",rel:"noopener noreferrer"},GT=(0,l.Uk)("Go-nlp"),dT=(0,l.Uk)(" - 在进行自然语言工作时用于处理离散概率分布一些工具，以及其他的一些有用的工具"),WT={href:"https://github.com/aGonopol/Go-stem",target:"_blank",rel:"noopener noreferrer"},vT=(0,l.Uk)("Go-stem"),wT=(0,l.Uk)(" - 波特词干算法的一个实现"),yT={href:"https://github.com/mozillazg/Go-unidecode",target:"_blank",rel:"noopener noreferrer"},xT=(0,l.Uk)("Go-unidecode"),ST=(0,l.Uk)(" - Unicode 文本音译为 ASCII 文本"),PT={href:"https://github.com/danieldk/Go2vec",target:"_blank",rel:"noopener noreferrer"},TT=(0,l.Uk)("Go2vec"),AT=(0,l.Uk)(" - 利用 Go 语言读取和处理 word2vec"),zT={href:"https://github.com/yanyiwu/Gojieba",target:"_blank",rel:"noopener noreferrer"},jT=(0,l.Uk)("Gojieba"),MT=(0,l.Uk)(" - 结巴分词的 Go 语言实现的 "),CT={href:"https://github.com/fxsjy/jieba",target:"_blank",rel:"noopener noreferrer"},LT=(0,l.Uk)("jieba"),RT=(0,l.Uk)(" ，结巴分词是一个用于中文的分词算法"),IT={href:"https://github.com/rjohnsondev/Golibstemmer",target:"_blank",rel:"noopener noreferrer"},qT=(0,l.Uk)("Golibstemmer"),HT=(0,l.Uk)(" -  snowball libstemmer 库的 Go 语言接口，包括了对 porter 2 的支持"),DT={href:"https://github.com/fiam/Gounidecode",target:"_blank",rel:"noopener noreferrer"},OT=(0,l.Uk)("Gounidecode"),ET=(0,l.Uk)(" - Go 语言的 Unicode 直译器 (通常称之为 unidecode)"),NT={href:"https://github.com/Goodsign/icu",target:"_blank",rel:"noopener noreferrer"},BT=(0,l.Uk)("icu"),QT=(0,l.Uk)(" - icu4c C 库的 CGo 接口，包括了检测和转换函数。保证了 version 50.1 版本的兼容性"),JT={href:"https://github.com/Goodsign/libtextcat",target:"_blank",rel:"noopener noreferrer"},FT=(0,l.Uk)("libtextcat"),VT=(0,l.Uk)(" - libtextcat C 库的 CGo 接口。保证了version 2.2 版本的兼容性"),XT={href:"https://github.com/awsong/MMSEGo",target:"_blank",rel:"noopener noreferrer"},KT=(0,l.Uk)("MMSEGo"),YT=(0,l.Uk)(" -  Go 语言实现的 "),ZT={href:"http://technology.chtsai.org/mmseg/",target:"_blank",rel:"noopener noreferrer"},$T=(0,l.Uk)("MMSEG"),eA=(0,l.Uk)(" （一个中文分词算法）"),rA={href:"https://github.com/Shixzie/nlp",target:"_blank",rel:"noopener noreferrer"},oA=(0,l.Uk)("nlp"),lA=(0,l.Uk)(" - 从字符串中提取特定的值并填充结构体"),tA={href:"https://github.com/rookii/paicehusk",target:"_blank",rel:"noopener noreferrer"},nA=(0,l.Uk)("paicehusk"),aA=(0,l.Uk)(" - Go 语言实现的  Paice/Husk 词干算法"),iA={href:"https://github.com/a2800276/porter",target:"_blank",rel:"noopener noreferrer"},hA=(0,l.Uk)("porter"),kA=(0,l.Uk)(" - Martin Porter 实现的 C 语言版本的 Porter 词干算法的 Go 语言接口，非常直观"),_A={href:"https://github.com/zhenjl/porter2",target:"_blank",rel:"noopener noreferrer"},uA=(0,l.Uk)("porter2"),gA=(0,l.Uk)(" - 非常快速的 Porter 2 stemmer."),pA={href:"https://github.com/jdkato/prose",target:"_blank",rel:"noopener noreferrer"},mA=(0,l.Uk)("prose"),sA=(0,l.Uk)(" - 文本处理库，支持词语切分、词性标记、命名实体提取等功能"),bA={href:"https://github.com/Obaied/RAKE.Go",target:"_blank",rel:"noopener noreferrer"},fA=(0,l.Uk)("RAKE.Go"),cA=(0,l.Uk)(" -  快速自动关键字提取算法(Rapid Automatic Keyword Extraction：RAKE)的 Go 语言接口"),UA={href:"https://github.com/blevesearch/segment",target:"_blank",rel:"noopener noreferrer"},GA=(0,l.Uk)("segment"),dA=(0,l.Uk)(" - 一个用于进行 Unicode 文本分割的库，实现了 "),WA={href:"http://www.unicode.org/reports/tr29/",target:"_blank",rel:"noopener noreferrer"},vA=(0,l.Uk)("Unicode Standard Annex #29"),wA=(0,l.Uk)("中描述的功能"),yA={href:"https://github.com/neurosnap/sentences",target:"_blank",rel:"noopener noreferrer"},xA=(0,l.Uk)("sentences"),SA=(0,l.Uk)(" - 语句标记器：将文字段落转换为语句列表"),PA={href:"https://github.com/osaminGo/shamoji",target:"_blank",rel:"noopener noreferrer"},TA=(0,l.Uk)("shamoji"),AA=(0,l.Uk)(" -  shamoji 是一个Go语言编写的词过滤软件包"),zA={href:"https://github.com/Goodsign/snowball",target:"_blank",rel:"noopener noreferrer"},jA=(0,l.Uk)("snowball"),MA=(0,l.Uk)(" - Snowball 分词器的Go语言接口，提供了分词提取的功能 "),CA={href:"http://snowball.tartarus.org/",target:"_blank",rel:"noopener noreferrer"},LA=(0,l.Uk)("Snowball native"),RA=(0,l.Uk)("."),IA={href:"https://github.com/dchest/stemmer",target:"_blank",rel:"noopener noreferrer"},qA=(0,l.Uk)("stemmer"),HA=(0,l.Uk)(" -  Go 语言分词器软件包，包括了英语和德语分词器"),DA={href:"https://github.com/pebbe/textcat",target:"_blank",rel:"noopener noreferrer"},OA=(0,l.Uk)("textcat"),EA=(0,l.Uk)(" - 基于 n-gram 的 Go 语言文本分类软件包，支持utf-8 和 raw 文本"),NA={href:"https://github.com/abadojack/whatlangGo",target:"_blank",rel:"noopener noreferrer"},BA=(0,l.Uk)("whatlangGo"),QA=(0,l.Uk)(" - Go 语言的自然语言检测包。支持84种语言和24种书写 (如拉丁，西里尔等书写系统)。"),JA={href:"https://github.com/olebedev/when",target:"_blank",rel:"noopener noreferrer"},FA=(0,l.Uk)("when"),VA=(0,l.Uk)(" - 英语、俄语的自然语言日期、时间表达解析器，可以插入规则"),XA=(0,l._)("h2",{id:"网络",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#网络","aria-hidden":"true"},"#"),(0,l.Uk)(" 网络")],-1),KA=(0,l._)("p",null,[(0,l._)("em",null,"用于在不同网络层工作的库")],-1),YA={href:"https://github.com/mdlayher/arp",target:"_blank",rel:"noopener noreferrer"},ZA=(0,l.Uk)("arp"),$A=(0,l.Uk)(" - 实现了 ARP 协议，遵循 RFC 826."),ez={href:"https://github.com/stabbycutyou/buffstreams",target:"_blank",rel:"noopener noreferrer"},rz=(0,l.Uk)("buffstreams"),oz=(0,l.Uk)(" - 简单易用的 protocolbuffer 数据流，基于 TCP"),lz={href:"https://github.com/zubairhamed/canopus",target:"_blank",rel:"noopener noreferrer"},tz=(0,l.Uk)("canopus"),nz=(0,l.Uk)(" - CoAP 客户端/服务器实现 (RFC 7252)"),az={href:"https://github.com/mdlayher/dhcp6",target:"_blank",rel:"noopener noreferrer"},iz=(0,l.Uk)("dhcp6"),hz=(0,l.Uk)(" - dhcp6 实现了一个DHCPv6 服务器，遵循RFC 3315."),kz={href:"https://github.com/miekg/dns",target:"_blank",rel:"noopener noreferrer"},_z=(0,l.Uk)("dns"),uz=(0,l.Uk)(" - 用于处理 DNS 的 Go 语言库"),gz={href:"https://github.com/songgao/ether",target:"_blank",rel:"noopener noreferrer"},pz=(0,l.Uk)("ether"),mz=(0,l.Uk)(" - 跨平台 Go 语言库，用于发送和接收以太帧"),sz={href:"https://github.com/mdlayher/ethernet",target:"_blank",rel:"noopener noreferrer"},bz=(0,l.Uk)("ethernet"),fz=(0,l.Uk)(" - ethernet 实现了IEEE 802.3 Ethernet II 帧以及IEEE 802.1Q VLAN 标签的组装和剥离."),cz={href:"https://github.com/valyala/fasthttp",target:"_blank",rel:"noopener noreferrer"},Uz=(0,l.Uk)("fasthttp"),Gz=(0,l.Uk)(" - fasthttp 是一个快速的 HTTP 实现，是 net/http的10倍性能"),dz={href:"https://github.com/jlaffaye/ftp",target:"_blank",rel:"noopener noreferrer"},Wz=(0,l.Uk)("ftp"),vz=(0,l.Uk)(" - ftp 实现了一个 FTP 客户端，遵循 "),wz={href:"http://tools.ietf.org/html/rfc959",target:"_blank",rel:"noopener noreferrer"},yz=(0,l.Uk)("RFC 959"),xz=(0,l.Uk)("."),Sz={href:"https://github.com/Allenxuxu/gev",target:"_blank",rel:"noopener noreferrer"},Pz=(0,l.Uk)("gev"),Tz=(0,l.Uk)(" - 一个轻量、比标准库更快的基于 Reactor 模式的非阻塞 TCP 网络库，支持自定义协议，轻松快速搭建高性能服务器。"),Az={href:"https://github.com/hashicorp/Go-getter",target:"_blank",rel:"noopener noreferrer"},zz=(0,l.Uk)("Go-getter"),jz=(0,l.Uk)(" - 一个用于通过 URL 从多种源下载文件或目录的 Go 语言库"),Mz={href:"https://github.com/ccding/Go-stun",target:"_blank",rel:"noopener noreferrer"},Cz=(0,l.Uk)("Go-stun"),Lz=(0,l.Uk)(" - Go 语言实现的 STUN 客户端 (RFC 3489 及 RFC 5389)."),Rz={href:"https://github.com/osrg/Gobgp",target:"_blank",rel:"noopener noreferrer"},Iz=(0,l.Uk)("Gobgp"),qz=(0,l.Uk)(" - Go 语言实现的BGP"),Hz={href:"https://github.com/sunwxg/Golibwireshark",target:"_blank",rel:"noopener noreferrer"},Dz=(0,l.Uk)("Golibwireshark"),Oz=(0,l.Uk)(" - Golibwireshark 使用 libwireshark 库来解析 pcap 文件并且分析数据"),Ez={href:"https://github.com/Google/Gopacket",target:"_blank",rel:"noopener noreferrer"},Nz=(0,l.Uk)("Gopacket"),Bz=(0,l.Uk)(" - 用于报文处理的库"),Qz={href:"https://github.com/akrennmair/Gopcap",target:"_blank",rel:"noopener noreferrer"},Jz=(0,l.Uk)("Gopcap"),Fz=(0,l.Uk)(" - libpcap的 Go 语言封装"),Vz={href:"https://github.com/sunwxg/Goshark",target:"_blank",rel:"noopener noreferrer"},Xz=(0,l.Uk)("Goshark"),Kz=(0,l.Uk)(" - Goshark 使用 tshark 来对 IP 报文进行解码并创建数据结构用于分析报文"),Yz={href:"https://github.com/soniah/Gosnmp",target:"_blank",rel:"noopener noreferrer"},Zz=(0,l.Uk)("Gosnmp"),$z=(0,l.Uk)(" -用于执行 SNMP 操作的库"),ej={href:"https://github.com/gansidui/Gotcp",target:"_blank",rel:"noopener noreferrer"},rj=(0,l.Uk)("Gotcp"),oj=(0,l.Uk)(" - 用于快速编写 tcp 应用的库"),lj={href:"https://github.com/cavaliercoder/grab",target:"_blank",rel:"noopener noreferrer"},tj=(0,l.Uk)("grab"),nj=(0,l.Uk)(" - 管理文件下载的 Go 语言库"),aj={href:"https://github.com/koofr/graval",target:"_blank",rel:"noopener noreferrer"},ij=(0,l.Uk)("graval"),hj=(0,l.Uk)(" - 试验性的 FTP 服务器框架"),kj={href:"https://github.com/udhos/jaziGo",target:"_blank",rel:"noopener noreferrer"},_j=(0,l.Uk)("jaziGo"),uj=(0,l.Uk)(" - JaziGo 是一个 Go 语言编写的工具，用于获取多种网络设备的配置."),gj={href:"https://github.com/xtaci/kcp-Go",target:"_blank",rel:"noopener noreferrer"},pj=(0,l.Uk)("kcp-Go"),mj=(0,l.Uk)(" - KCP - 快速可靠的 ARQ 协议."),sj={href:"https://github.com/xtaci/kcptun",target:"_blank",rel:"noopener noreferrer"},bj=(0,l.Uk)("kcptun"),fj=(0,l.Uk)(" - 超级简单、快速的 udp 通道，基于KCP 协议"),cj={href:"https://github.com/fanux/lhttp",target:"_blank",rel:"noopener noreferrer"},Uj=(0,l.Uk)("lhttp"),Gj=(0,l.Uk)(" - 强大的 websocket 框架，可以更简单的构建你自己的 IM 服务器*"),dj={href:"https://github.com/ian-kent/linkio",target:"_blank",rel:"noopener noreferrer"},Wj=(0,l.Uk)("linkio"),vj=(0,l.Uk)(" - 接口读写速度模拟器"),wj={href:"https://github.com/kirillDanshin/llb",target:"_blank",rel:"noopener noreferrer"},yj=(0,l.Uk)("llb"),xj=(0,l.Uk)(" - 一个非常简单但快速的后端代理服务器。对于快速重定向到预定义域名很有用，无内存分配，响应速度快"),Sj={href:"https://github.com/hashicorp/mdns",target:"_blank",rel:"noopener noreferrer"},Pj=(0,l.Uk)("mdns"),Tj=(0,l.Uk)(" - 简单的 mDNS (组播 DNS) 客户端/服务器库"),Aj={href:"https://eclipse.org/paho/clients/Golang/",target:"_blank",rel:"noopener noreferrer"},zj=(0,l.Uk)("mqttPaho"),jj=(0,l.Uk)(" - Paho 客户端提供了一个 MQTT 客户端库，用于通过TCP, TLS 或 WebSockets 和 MQTT broker 建立连接"),Mj={href:"https://github.com/aybabtme/portproxy",target:"_blank",rel:"noopener noreferrer"},Cj=(0,l.Uk)("portproxy"),Lj=(0,l.Uk)(" - 简单的 TCP 代理，加入了对CORS 的支持"),Rj={href:"https://github.com/polera/publicip",target:"_blank",rel:"noopener noreferrer"},Ij=(0,l.Uk)("publicip"),qj=(0,l.Uk)(" - publicip 库会返回你的公网 ip 地址 (互联网出口)."),Hj={href:"https://github.com/mdlayher/raw",target:"_blank",rel:"noopener noreferrer"},Dj=(0,l.Uk)("raw"),Oj=(0,l.Uk)(" - raw 允许你在设备驱动层读写网络接口的数据"),Ej={href:"https://github.com/pkg/sftp",target:"_blank",rel:"noopener noreferrer"},Nj=(0,l.Uk)("sftp"),Bj=(0,l.Uk)(" - sftp 实现了"),Qj={href:"https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt.",target:"_blank",rel:"noopener noreferrer"},Jj=(0,l.Uk)("https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt."),Fj=(0,l.Uk)("中描述的 SSH 文件传输协议"),Vj={href:"https://github.com/gliderlabs/ssh",target:"_blank",rel:"noopener noreferrer"},Xj=(0,l.Uk)("ssh"),Kj=(0,l.Uk)(" - 用于创建 SSH 服务器的高级 API (封装crypto/ssh)."),Yj={href:"https://github.com/eduardonunesp/sslb",target:"_blank",rel:"noopener noreferrer"},Zj=(0,l.Uk)("sslb"),$j=(0,l.Uk)(" - 一个超简单的负载均衡库，仅仅是一个为了获取一些性能目标的小项目"),eM={href:"https://github.com/firstrow/tcp_server",target:"_blank",rel:"noopener noreferrer"},rM=(0,l.Uk)("tcp_server"),oM=(0,l.Uk)(" - 一个用于快速创建 tcp 服务器的库"),lM={href:"https://github.com/anacrolix/utp",target:"_blank",rel:"noopener noreferrer"},tM=(0,l.Uk)("utp"),nM=(0,l.Uk)(" - Go uTP 微传输协议的实现"),aM={href:"https://github.com/songgao/water",target:"_blank",rel:"noopener noreferrer"},iM=(0,l.Uk)("water"),hM=(0,l.Uk)(" - 简单的 TUN/TAP 库"),kM={href:"https://github.com/masterzen/winrm",target:"_blank",rel:"noopener noreferrer"},_M=(0,l.Uk)("winrm"),uM=(0,l.Uk)(" - Go WinRM 客户端，用于在 Windows 设备上远程执行命令"),gM={href:"https://github.com/xfxdev/xtcp",target:"_blank",rel:"noopener noreferrer"},pM=(0,l.Uk)("xtcp"),mM=(0,l.Uk)(" - TCP 服务器框架，支持同时全双工通信。可以优雅的关闭，自定义协议"),sM=(0,l._)("h2",{id:"opengl",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#opengl","aria-hidden":"true"},"#"),(0,l.Uk)(" OpenGL")],-1),bM=(0,l._)("p",null,[(0,l._)("em",null,"用于操作OpenGL的库.")],-1),fM={href:"https://github.com/Go-gl/gl",target:"_blank",rel:"noopener noreferrer"},cM=(0,l.Uk)("gl"),UM=(0,l.Uk)(" - OpenGL的 Go 语言接口"),GM={href:"https://github.com/Go-gl/glfw",target:"_blank",rel:"noopener noreferrer"},dM=(0,l.Uk)("glfw"),WM=(0,l.Uk)(" - GLFW 3 的 Go 语言接口"),vM={href:"https://github.com/Goxjs/gl",target:"_blank",rel:"noopener noreferrer"},wM=(0,l.Uk)("Goxjs/gl"),yM=(0,l.Uk)(" - Go 语言跨平台 OpenGL 接口(OS X, Linux, Windows, browsers, iOS, Android)."),xM={href:"https://github.com/Goxjs/glfw",target:"_blank",rel:"noopener noreferrer"},SM=(0,l.Uk)("Goxjs/glfw"),PM=(0,l.Uk)(" - Go 语言跨平台 glfw 库，用于创建 OpenGL 上下文并接收事件"),TM={href:"https://github.com/Go-gl/mathgl",target:"_blank",rel:"noopener noreferrer"},AM=(0,l.Uk)("mathgl"),zM=(0,l.Uk)(" - Go 语言 3D 数学库，专注于3D，受到 GLM 启发"),jM=(0,l._)("h2",{id:"orm",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#orm","aria-hidden":"true"},"#"),(0,l.Uk)(" ORM")],-1),MM=(0,l._)("p",null,[(0,l._)("em",null,"实现对象关系映射或数据映射技术的库")],-1),CM={href:"https://github.com/astaxie/beeGo/tree/master/orm",target:"_blank",rel:"noopener noreferrer"},LM=(0,l.Uk)("beeGo orm"),RM=(0,l.Uk)(" - 一个强大的 Go 语言 orm 框架，支持 pq/mysql/sqlite3."),IM={href:"https://github.com/Go-pg/pg",target:"_blank",rel:"noopener noreferrer"},qM=(0,l.Uk)("Go-pg"),HM=(0,l.Uk)(" - PostgreSQL ORM ，专注PostgreSQL 特定功能及性能"),DM={href:"https://github.com/Gosuri/Go-store",target:"_blank",rel:"noopener noreferrer"},OM=(0,l.Uk)("Go-store"),EM=(0,l.Uk)(" - 简单快速的基于Redis 的键值对存储库"),NM={href:"https://github.com/cosiner/Gomodel",target:"_blank",rel:"noopener noreferrer"},BM=(0,l.Uk)("Gomodel"),QM=(0,l.Uk)(" - 轻量级、快速的、类 orm 库，帮助你和数据库进行交互"),JM={href:"https://gorm.io/zh_CN/",target:"_blank",rel:"noopener noreferrer"},FM=(0,l.Uk)("gorm"),VM=(0,l.Uk)(" - 超棒的 Go 语言 ORM 库，对开发者非常友好"),XM={href:"https://github.com/Go-Gorp/Gorp",target:"_blank",rel:"noopener noreferrer"},KM=(0,l.Uk)("Gorp"),YM=(0,l.Uk)(" - 关系持久的、类 orm 的 Go 语言库"),ZM={href:"https://github.com/markbates/pop",target:"_blank",rel:"noopener noreferrer"},$M=(0,l.Uk)("pop/soda"),eC=(0,l.Uk)(" - 数据库迁移、创建、ORM 等等，支持 MySQL, PostgreSQL, 以及 SQLite."),rC={href:"https://github.com/coocood/qbs",target:"_blank",rel:"noopener noreferrer"},oC=(0,l.Uk)("QBS"),lC=(0,l.Uk)(" - 利用结构体进行标准查询，是一个 Go 语言 ORM"),tC={href:"https://github.com/Go-reform/reform",target:"_blank",rel:"noopener noreferrer"},nC=(0,l.Uk)("reform"),aC=(0,l.Uk)(" - 一个更优秀的 ORM，基于非空接口和代码生成"),iC={href:"https://github.com/volatiletech/sqlboiler",target:"_blank",rel:"noopener noreferrer"},hC=(0,l.Uk)("SQLBoiler"),kC=(0,l.Uk)(" - ORM 生成器。为你的数据库表单生成一个功能全面、快速的 ORM"),_C={href:"https://github.com/upper/db",target:"_blank",rel:"noopener noreferrer"},uC=(0,l.Uk)("upper.io/db"),gC=(0,l.Uk)(" - 通过使用封装了成熟的数据库驱动的适配器，来使用单一接口与不同的数据源进行交互"),pC={href:"https://github.com/Go-xorm/xorm",target:"_blank",rel:"noopener noreferrer"},mC=(0,l.Uk)("Xorm"),sC=(0,l.Uk)(" - 简单、强大的 Go 语言 orm"),bC={href:"https://github.com/albrow/zoom",target:"_blank",rel:"noopener noreferrer"},fC=(0,l.Uk)("Zoom"),cC=(0,l.Uk)(" - 超快的数据存储于查询引擎，基于 Redis 构建"),UC=(0,l._)("h2",{id:"包管理",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#包管理","aria-hidden":"true"},"#"),(0,l.Uk)(" 包管理")],-1),GC=(0,l._)("p",null,[(0,l._)("em",null,"用于进行包和依赖管理的库")],-1),dC={href:"https://github.com/Golang/dep",target:"_blank",rel:"noopener noreferrer"},WC=(0,l.Uk)("dep"),vC=(0,l.Uk)(" - Go 语言依赖工具."),wC={href:"https://github.com/LyricalSecurity/giGo",target:"_blank",rel:"noopener noreferrer"},yC=(0,l.Uk)("giGo"),xC=(0,l.Uk)(" - 类似 PIP 的依赖管理工具。支持私有仓库和哈希"),SC={href:"https://github.com/Masterminds/glide",target:"_blank",rel:"noopener noreferrer"},PC=(0,l.Uk)("glide"),TC=(0,l.Uk)(" - 轻松管理你的 GO 语言包发布者以及发布包。 受到类似 Maven, Bundler, 和 Pip 这些工具的的启发"),AC={href:"https://github.com/tools/Godep",target:"_blank",rel:"noopener noreferrer"},zC=(0,l.Uk)("Godep"),jC=(0,l.Uk)(" - Go 语言依赖工具，Godep 可以帮助开发者修复库的依赖关系"),MC={href:"https://github.com/mattn/Gom",target:"_blank",rel:"noopener noreferrer"},CC=(0,l.Uk)("Gom"),LC=(0,l.Uk)(" - Go Manager"),RC={href:"https://github.com/nitrous-io/Goop",target:"_blank",rel:"noopener noreferrer"},IC=(0,l.Uk)("Goop"),qC=(0,l.Uk)(" - 简单的依赖管理工具，手到 Bundler 的启发"),HC={href:"https://github.com/gpmGo/Gopm",target:"_blank",rel:"noopener noreferrer"},DC=(0,l.Uk)("Gopm"),OC=(0,l.Uk)(" - Go 包管理器"),EC={href:"https://github.com/kardianos/Govendor",target:"_blank",rel:"noopener noreferrer"},NC=(0,l.Uk)("Govendor"),BC=(0,l.Uk)(" - Go 包管理器。 Go 语言 vendor 工具，兼容标准 vendor 文件"),QC={href:"https://github.com/pote/gpm",target:"_blank",rel:"noopener noreferrer"},JC=(0,l.Uk)("gpm"),FC=(0,l.Uk)(" -  Go 语言包管理工具"),VC={href:"https://github.com/FiloSottile/gvt",target:"_blank",rel:"noopener noreferrer"},XC=(0,l.Uk)("gvt"),KC=(0,l.Uk)(" - "),YC=(0,l._)("code",null,"gvt",-1),ZC=(0,l.Uk)(" 是一个简单的发布管理工具(aka Go15VENDOREXPERIMENT), 基于 gb-vendor."),$C={href:"https://github.com/VividCortex/johnny-deps",target:"_blank",rel:"noopener noreferrer"},eL=(0,l.Uk)("johnny-deps"),rL=(0,l.Uk)(" - 极简的依赖版本管理工具，使用 git"),oL={href:"https://github.com/jingweno/nut",target:"_blank",rel:"noopener noreferrer"},lL=(0,l.Uk)("nut"),tL=(0,l.Uk)(" - Go 语言依赖管理"),nL={href:"https://github.com/DamnWidget/VenGo",target:"_blank",rel:"noopener noreferrer"},aL=(0,l.Uk)("VenGo"),iL=(0,l.Uk)(" - 创建并管理可以导出的，隔离的 Go 语言虚拟环境"),hL=(0,l._)("h2",{id:"查询语言",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#查询语言","aria-hidden":"true"},"#"),(0,l.Uk)(" 查询语言")],-1),kL={href:"https://github.com/tmc/graphql",target:"_blank",rel:"noopener noreferrer"},_L=(0,l.Uk)("graphql"),uL=(0,l.Uk)(" - graphql 解析器 + 实用工具"),gL={href:"https://github.com/sevki/graphql",target:"_blank",rel:"noopener noreferrer"},pL=(0,l.Uk)("graphql"),mL=(0,l.Uk)(" - Go 语言实现的 GraphQL"),sL={href:"https://github.com/neelance/graphql-Go",target:"_blank",rel:"noopener noreferrer"},bL=(0,l.Uk)("graphql"),fL=(0,l.Uk)(" - 专注于易用性的 GraphQL 服务器"),cL={href:"https://github.com/graphql-Go/graphql",target:"_blank",rel:"noopener noreferrer"},UL=(0,l.Uk)("graphql-Go"),GL=(0,l.Uk)(" - 为 Go 语言实现的 GraphQL"),dL={href:"https://github.com/elgs/jsonql",target:"_blank",rel:"noopener noreferrer"},WL=(0,l.Uk)("jsonql"),vL=(0,l.Uk)(" - JSON 查询表达式库"),wL=(0,l._)("h2",{id:"资源嵌入",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#资源嵌入","aria-hidden":"true"},"#"),(0,l.Uk)(" 资源嵌入")],-1),yL={href:"https://github.com/mjibson/esc",target:"_blank",rel:"noopener noreferrer"},xL=(0,l.Uk)("esc"),SL=(0,l.Uk)(" - 在 Go 语言程序中嵌入文件并为其提供 HTTP.FileSystem 接口"),PL={href:"https://github.com/UnnoTed/fileb0x",target:"_blank",rel:"noopener noreferrer"},TL=(0,l.Uk)("fileb0x"),AL=(0,l.Uk)(" - 一个用于在 Go 语言程序中嵌入文件的工具，专注于可定制化和易用性"),zL={href:"https://github.com/jteeuwen/Go-bindata",target:"_blank",rel:"noopener noreferrer"},jL=(0,l.Uk)("Go-bindata"),ML=(0,l.Uk)(" - 一个用于将文件转换为可管理的 Go 语言代码的工具"),CL={href:"https://github.com/pyros2097/Go-embed",target:"_blank",rel:"noopener noreferrer"},LL=(0,l.Uk)("Go-embed"),RL=(0,l.Uk)(" - 生成用于嵌入资源文件到库或可执行文件的 Go 语言代码"),IL={href:"https://github.com/omeid/Go-resources",target:"_blank",rel:"noopener noreferrer"},qL=(0,l.Uk)("Go-resources"),HL=(0,l.Uk)(" - 一个简洁的 Go 语言资源嵌入工具"),DL={href:"https://github.com/GeertJohan/Go.rice",target:"_blank",rel:"noopener noreferrer"},OL=(0,l.Uk)("Go.rice"),EL=(0,l.Uk)(" - Go.rice 是一个让你轻松使用 html,js,css,图片以及模板这类资源的库"),NL={href:"https://github.com/Go-playground/statics",target:"_blank",rel:"noopener noreferrer"},BL=(0,l.Uk)("statics"),QL=(0,l.Uk)(" - 将静态资源嵌入到 Go 文件中，用于单独二进制编译+使用http.FileSystem + symlinks."),JL={href:"https://github.com/rakyll/statik",target:"_blank",rel:"noopener noreferrer"},FL=(0,l.Uk)("statik"),VL=(0,l.Uk)(" - 将静态文件嵌入到 Go 语言可执行文件中"),XL={href:"https://github.com/wlbr/templify",target:"_blank",rel:"noopener noreferrer"},KL=(0,l.Uk)("templify"),YL=(0,l.Uk)(" - 将外部目标文件嵌入到 Go 代码中来创建单独的二进制文件"),ZL={href:"https://github.com/shurcooL/vfsgen",target:"_blank",rel:"noopener noreferrer"},$L=(0,l.Uk)("vfsgen"),eR=(0,l.Uk)(" - 生成一个 vfsdata.Go 文件，静态实现了一个虚拟文件系统"),rR=(0,l._)("h2",{id:"科学及数据分析",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#科学及数据分析","aria-hidden":"true"},"#"),(0,l.Uk)(" 科学及数据分析")],-1),oR=(0,l._)("p",null,[(0,l._)("em",null,"用于科学计算和数据分析的库")],-1),lR={href:"https://github.com/ziutek/blas",target:"_blank",rel:"noopener noreferrer"},tR=(0,l.Uk)("blas"),nR=(0,l.Uk)(" - BLAS (基础线性代数子程序 Linear Algebra Subprograms)的 Go 语言实现"),aR={href:"https://github.com/vdobler/chart",target:"_blank",rel:"noopener noreferrer"},iR=(0,l.Uk)("chart"),hR=(0,l.Uk)(" - 简单的图表绘图库。支持多种图表类型"),kR={href:"https://github.com/soniah/evaler",target:"_blank",rel:"noopener noreferrer"},_R=(0,l.Uk)("evaler"),uR=(0,l.Uk)(" - 简单浮点算数表达式求值器"),gR={href:"https://github.com/VividCortex/ewma",target:"_blank",rel:"noopener noreferrer"},pR=(0,l.Uk)("ewma"),mR=(0,l.Uk)(" - 指数移动加权平均值"),sR={href:"https://github.com/skelterjohn/geom",target:"_blank",rel:"noopener noreferrer"},bR=(0,l.Uk)("geom"),fR=(0,l.Uk)(" - 2D 几何"),cR={href:"https://github.com/mjibson/Go-dsp",target:"_blank",rel:"noopener noreferrer"},UR=(0,l.Uk)("Go-dsp"),GR=(0,l.Uk)(" - 数字信号处理"),dR={href:"https://github.com/ematvey/Go-fn",target:"_blank",rel:"noopener noreferrer"},WR=(0,l.Uk)("Go-fn"),vR=(0,l.Uk)(" - 一些没有包含在 math pkg 中的数学函数"),wR={href:"https://github.com/ThePaw/Go-gt",target:"_blank",rel:"noopener noreferrer"},yR=(0,l.Uk)("Go-gt"),xR=(0,l.Uk)(" - 图论算法"),SR={href:"https://github.com/skelterjohn/Go.matrix",target:"_blank",rel:"noopener noreferrer"},PR=(0,l.Uk)("Go.matrix"),TR=(0,l.Uk)(" - 线性代数"),AR={href:"https://github.com/varver/Gocomplex",target:"_blank",rel:"noopener noreferrer"},zR=(0,l.Uk)("Gocomplex"),jR=(0,l.Uk)(" - 复数库"),MR={href:"https://github.com/anschelsc/Gofrac",target:"_blank",rel:"noopener noreferrer"},CR=(0,l.Uk)("Gofrac"),LR=(0,l.Uk)(" - Go 语言分数库，支持基本算术"),RR={href:"https://github.com/VividCortex/Gohistogram",target:"_blank",rel:"noopener noreferrer"},IR=(0,l.Uk)("Gohistogram"),qR=(0,l.Uk)(" - 数据流的近似直方图"),HR={href:"https://github.com/Gonum/matrix",target:"_blank",rel:"noopener noreferrer"},DR=(0,l.Uk)("Gonum/mat64"),OR=(0,l.Uk)(" - 矩阵计算通用包。 mat64 提供了用于进行64位浮点基础线性代数操作的功能"),ER={href:"https://github.com/Gonum/plot",target:"_blank",rel:"noopener noreferrer"},NR=(0,l.Uk)("Gonum/plot"),BR=(0,l.Uk)(" - Gonum/plot 提供了用于创建和绘制图表的 API"),QR={href:"https://github.com/gyuho/Goraph",target:"_blank",rel:"noopener noreferrer"},JR=(0,l.Uk)("Goraph"),FR=(0,l.Uk)(" - 纯 Go 语言编写的图论库（数据结构，算法可视化）"),VR={href:"https://github.com/ematvey/Gostat",target:"_blank",rel:"noopener noreferrer"},XR=(0,l.Uk)("Gostat"),KR=(0,l.Uk)(" - 统计库"),YR={href:"https://github.com/yourbasic/graph",target:"_blank",rel:"noopener noreferrer"},ZR=(0,l.Uk)("graph"),$R=(0,l.Uk)(" - 包含基础图算法的库"),eI={href:"https://github.com/ChristopherRabotin/ode",target:"_blank",rel:"noopener noreferrer"},rI=(0,l.Uk)("ode"),oI=(0,l.Uk)(" - 普通微分方程 (ODE) 求解器。支持扩展状态及基于通道的迭代算法终止条件"),lI={href:"https://github.com/alixaxel/pagerank",target:"_blank",rel:"noopener noreferrer"},tI=(0,l.Uk)("pagerank"),nI=(0,l.Uk)(" - Go 语言实现的加权网页排名（ PageRank）算法"),aI={href:"https://github.com/clayGod/PiHex",target:"_blank",rel:"noopener noreferrer"},iI=(0,l.Uk)("PiHex"),hI=(0,l.Uk)(' - 贝利-波尔温-普劳夫公式（"Bailey-Borwein-Plouffe"）算法的实现，用于计算十六进制π'),kI={href:"https://github.com/montanaflynn/stats",target:"_blank",rel:"noopener noreferrer"},_I=(0,l.Uk)("stats"),uI=(0,l.Uk)(" - 统计库，包含一些 Go 语言标准库中漏掉的常用函数"),gI={href:"https://github.com/nytlabs/streamtools",target:"_blank",rel:"noopener noreferrer"},pI=(0,l.Uk)("streamtools"),mI=(0,l.Uk)(" - 通用图形化工具，用于处理流数据"),sI={href:"https://github.com/spate/vectormath",target:"_blank",rel:"noopener noreferrer"},bI=(0,l.Uk)("vectormath"),fI=(0,l.Uk)(" - 给 Go 语言用的 Vectormath , 是对索尼的矢量数学库中 C 语言函数的改写,可以在 Bullet-2.79 源码中找到 (当前不活跃)"),cI=(0,l._)("h2",{id:"安全",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#安全","aria-hidden":"true"},"#"),(0,l.Uk)(" 安全")],-1),UI=(0,l._)("p",null,[(0,l._)("em",null,"可以帮助你增强应用程序安全性的库")],-1),GI={href:"https://github.com/hlandau/acme",target:"_blank",rel:"noopener noreferrer"},dI=(0,l.Uk)("acmetool"),WI=(0,l.Uk)(" — ACME (Let's Encrypt) 客户端工具，有自动延长功能."),vI={href:"https://github.com/jaredfolkins/badactor",target:"_blank",rel:"noopener noreferrer"},wI=(0,l.Uk)("BadActor"),yI=(0,l.Uk)(" - 一个驻留在内存中的，应用驱动的监控程序，受 fail2ban 的启发"),xI={href:"https://github.com/hillu/Go-yara",target:"_blank",rel:"noopener noreferrer"},SI=(0,l.Uk)("Go-yara"),PI=(0,l.Uk)(" - "),TI={href:"https://github.com/plusvic/yara",target:"_blank",rel:"noopener noreferrer"},AI=(0,l.Uk)("YARA"),zI=(0,l.Uk)('的 Go 语言接口，号称是 "对于恶意软件研究者（以及其他人）来说是模式匹配的瑞士军刀'),jI={href:"https://github.com/xenolf/leGo",target:"_blank",rel:"noopener noreferrer"},MI=(0,l.Uk)("leGo"),CI=(0,l.Uk)(" - 纯 Go ACME 客户端库及命令行工具"),LI={href:"https://github.com/awnumar/memguard",target:"_blank",rel:"noopener noreferrer"},RI=(0,l.Uk)("memguard"),II=(0,l.Uk)(" - 一个用于处理内存中敏感数据的 Go 语言库"),qI={href:"https://github.com/hlandau/passlib",target:"_blank",rel:"noopener noreferrer"},HI=(0,l.Uk)("passlib"),DI=(0,l.Uk)(" - 不过时的密码哈希库"),OI={href:"https://github.com/unrolled/secure",target:"_blank",rel:"noopener noreferrer"},EI=(0,l.Uk)("secure"),NI=(0,l.Uk)(" - Go 语言 HTTP 中间件，为 Go 提供了一些安全功能"),BI={href:"https://github.com/elithrar/simple-scrypt",target:"_blank",rel:"noopener noreferrer"},QI=(0,l.Uk)("simple-scrypt"),JI=(0,l.Uk)(" - Scrypt 库，具有简单、易懂的 API，同时具有内置的自动校准功能"),FI={href:"https://github.com/ssh-vault/ssh-vault",target:"_blank",rel:"noopener noreferrer"},VI=(0,l.Uk)("ssh-vault"),XI=(0,l.Uk)(" - 利用 ssh 秘钥加解密"),KI=(0,l._)("h2",{id:"序列化",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#序列化","aria-hidden":"true"},"#"),(0,l.Uk)(" 序列化")],-1),YI=(0,l._)("p",null,[(0,l._)("em",null,"用于进行二进制序列化的库和工具")],-1),ZI={href:"https://github.com/PromonLogicalis/asn1",target:"_blank",rel:"noopener noreferrer"},$I=(0,l.Uk)("asn1"),eq=(0,l.Uk)(" - Asn.1 BER 及 DER 编码库"),rq={href:"https://github.com/pascaldekloe/colfer",target:"_blank",rel:"noopener noreferrer"},oq=(0,l.Uk)("colfer"),lq=(0,l.Uk)(" - 用于生成 Colfer 二进制格式代码"),tq={href:"https://github.com/glycerine/Go-capnproto",target:"_blank",rel:"noopener noreferrer"},nq=(0,l.Uk)("Go-capnproto"),aq=(0,l.Uk)(" - Go 语言用的 Cap'n Proto 库及解析器"),iq={href:"https://github.com/glycerine/bambam",target:"_blank",rel:"noopener noreferrer"},hq=(0,l.Uk)("bambam"),kq=(0,l.Uk)(" - 用于 Go 语言生成 Cap'n Proto schemas 的生成器"),_q={href:"https://github.com/uGorji/Go",target:"_blank",rel:"noopener noreferrer"},uq=(0,l.Uk)("Go-codec"),gq=(0,l.Uk)(" - 高性能、多功能、规范化编码解码以及 rpc 库， 用于 msgpack, cbor 和 json，支持基于运行时的 OR 码生成"),pq={href:"https://github.com/GoGo/protobuf",target:"_blank",rel:"noopener noreferrer"},mq=(0,l.Uk)("GoGoprotobuf"),sq=(0,l.Uk)(" - Go 语言的 Protocol Buffer 库"),bq={href:"https://github.com/Golang/protobuf",target:"_blank",rel:"noopener noreferrer"},fq=(0,l.Uk)("Goprotobuf"),cq=(0,l.Uk)(" - 通过库和协议编译器插件使 Go 语言支持 Google的 protocol buffers."),Uq={href:"https://github.com/json-iterator/Go",target:"_blank",rel:"noopener noreferrer"},Gq=(0,l.Uk)("jsoniter"),dq=(0,l.Uk)(' -高性能，100% 兼容的"encoding/json" 替代品'),Wq={href:"https://github.com/mitchellh/mapstructure",target:"_blank",rel:"noopener noreferrer"},vq=(0,l.Uk)("mapstructure"),wq=(0,l.Uk)(" - 用于对原生键值对进行解码生成 Go 语言结构体"),yq={href:"https://github.com/yvasiyarov/php_session_decoder",target:"_blank",rel:"noopener noreferrer"},xq=(0,l.Uk)("php_session_decoder"),Sq=(0,l.Uk)(" - 用于协同 PHP session 格式数据和 PHP 序列化／反序列化函数工作的go语言库"),Pq={href:"https://github.com/tuvistavie/structomap",target:"_blank",rel:"noopener noreferrer"},Tq=(0,l.Uk)("structomap"),Aq=(0,l.Uk)(" - 用于从静态结构体简单、动态的生成键值对的库"),zq=(0,l._)("h2",{id:"服务器程序",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#服务器程序","aria-hidden":"true"},"#"),(0,l.Uk)(" 服务器程序")],-1),jq={href:"https://github.com/xyproto/algernon",target:"_blank",rel:"noopener noreferrer"},Mq=(0,l.Uk)("algernon"),Cq=(0,l.Uk)(" - HTTP/2 web 服务器，支持 Lua、Markdown、GCSS 和 Amber."),Lq={href:"https://github.com/mholt/caddy",target:"_blank",rel:"noopener noreferrer"},Rq=(0,l.Uk)("Caddy"),Iq=(0,l.Uk)(" - Caddy 是一个备选的 HTTP/2 web 服务器，配置简单，使用方便。"),qq={href:"https://www.consul.io/",target:"_blank",rel:"noopener noreferrer"},Hq=(0,l.Uk)("consul"),Dq=(0,l.Uk)(" - Consul 是一个用于服务发现、监控和配置的工具"),Oq={href:"https://github.com/cortesi/devd",target:"_blank",rel:"noopener noreferrer"},Eq=(0,l.Uk)("devd"),Nq=(0,l.Uk)(" - 开发者使用的本地 web 服务器"),Bq={href:"https://github.com/coreos/etcd",target:"_blank",rel:"noopener noreferrer"},Qq=(0,l.Uk)("etcd"),Jq=(0,l.Uk)(" - 高可用性的键值存储，用于分享配置和服务发现"),Fq={href:"https://github.com/minio/minio",target:"_blank",rel:"noopener noreferrer"},Vq=(0,l.Uk)("minio"),Xq=(0,l.Uk)(" - Minio 是一个分布式对象存储服务器"),Kq={href:"http://nsq.io/",target:"_blank",rel:"noopener noreferrer"},Yq=(0,l.Uk)("nsq"),Zq=(0,l.Uk)(" - 一个实时的分布式消息平台"),$q={href:"https://github.com/sci4me/yakvs",target:"_blank",rel:"noopener noreferrer"},eH=(0,l.Uk)("yakvs"),rH=(0,l.Uk)(" - 小型化、网络化、基于内存的键值存储"),oH=(0,l._)("h2",{id:"模板引擎",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#模板引擎","aria-hidden":"true"},"#"),(0,l.Uk)(" 模板引擎")],-1),lH=(0,l._)("p",null,[(0,l._)("em",null,"模板库及工具")],-1),tH={href:"https://github.com/yosssi/ace",target:"_blank",rel:"noopener noreferrer"},nH=(0,l.Uk)("ace"),aH=(0,l.Uk)(" - Ace 是一个 Go 语言的 HTML 模板引擎，受到了 Slim 和 Jade 的启发。 Ace 是对Gold的一种改进。"),iH={href:"https://github.com/eknkc/amber",target:"_blank",rel:"noopener noreferrer"},hH=(0,l.Uk)("amber"),kH=(0,l.Uk)(" - Amber 是一个优雅的模板引擎，受到 HAML 和 Jade的启发"),_H={href:"https://github.com/dskinner/damsel",target:"_blank",rel:"noopener noreferrer"},uH=(0,l.Uk)("damsel"),gH=(0,l.Uk)(" - 标记语言，通过css选择器实现了 html 框架 ，并可以通过 pkg html/template 等进行扩展"),pH={href:"https://github.com/benbjohnson/eGo",target:"_blank",rel:"noopener noreferrer"},mH=(0,l.Uk)("eGo"),sH=(0,l.Uk)(" - 轻量级模板语言，让你可以使用 Go 语言来创建模板。模板会被转化为 Go 语言并编译"),bH={href:"https://github.com/valyala/fasttemplate",target:"_blank",rel:"noopener noreferrer"},fH=(0,l.Uk)("fasttemplate"),cH=(0,l.Uk)(" - 简单快速的模板引擎。进行模板元素替换时，速度是"),UH={href:"http://Golang.org/pkg/text/template/",target:"_blank",rel:"noopener noreferrer"},GH=(0,l.Uk)("text/template"),dH=(0,l.Uk)("的十倍"),WH={href:"https://github.com/jung-kurt/Gofpdf",target:"_blank",rel:"noopener noreferrer"},vH=(0,l.Uk)("Gofpdf"),wH=(0,l.Uk)(" - PDF 文档生成器，支持文本，绘图和图片"),yH={href:"https://github.com/dannyvankooten/grender",target:"_blank",rel:"noopener noreferrer"},xH=(0,l.Uk)("grender"),SH=(0,l.Uk)(" - 对 html/template 进行了简单的封装，支持基于文件的模板可以利用其他模板文件进行扩展"),PH={href:"https://github.com/shiyanhui/hero",target:"_blank",rel:"noopener noreferrer"},TH=(0,l.Uk)("hero"),AH=(0,l.Uk)(" Hero 是一个趁手的、快速的、强大的 Go 语言模板引擎"),zH={href:"https://github.com/CloudyKit/jet",target:"_blank",rel:"noopener noreferrer"},jH=(0,l.Uk)("jet"),MH=(0,l.Uk)(" - Jet 模板引擎"),CH={href:"https://github.com/ziutek/kasia.Go",target:"_blank",rel:"noopener noreferrer"},LH=(0,l.Uk)("kasia.Go"),RH=(0,l.Uk)(" - 一个用于HTML 和其他文本文件的模板系统，使用go语言实现"),IH={href:"https://github.com/osteele/liquid",target:"_blank",rel:"noopener noreferrer"},qH=(0,l.Uk)("liquid"),HH=(0,l.Uk)(" - Go 语言实现的 Shopify Liquid 模板."),DH={href:"https://github.com/hoisie/mustache",target:"_blank",rel:"noopener noreferrer"},OH=(0,l.Uk)("mustache"),EH=(0,l.Uk)(" - Go 语言实现的 Mustache 模板语言"),NH={href:"https://github.com/flosch/ponGo2",target:"_blank",rel:"noopener noreferrer"},BH=(0,l.Uk)("ponGo2"),QH=(0,l.Uk)(" - 类似 DjanGo 的模板引擎"),JH={href:"https://github.com/valyala/quicktemplate",target:"_blank",rel:"noopener noreferrer"},FH=(0,l.Uk)("quicktemplate"),VH=(0,l.Uk)(" - 快速、强大且易用的模板引擎。将模板转化为 Go 语言并进行编译"),XH={href:"https://github.com/aymerick/raymond",target:"_blank",rel:"noopener noreferrer"},KH=(0,l.Uk)("raymond"),YH=(0,l.Uk)(" - 使用 Go 语言实现的完整的 handlebars"),ZH={href:"https://github.com/sipin/Gorazor",target:"_blank",rel:"noopener noreferrer"},$H=(0,l.Uk)("GoRazor"),eD=(0,l.Uk)(" - Go 语言的 Razor 视图引擎"),rD={href:"https://github.com/robfig/soy",target:"_blank",rel:"noopener noreferrer"},oD=(0,l.Uk)("Soy"),lD=(0,l.Uk)(" -  Go 语言实现的谷歌闭包模板(也就是 Soy templates) , 参见"),tD={href:"https://developers.Google.com/closure/templates/",target:"_blank",rel:"noopener noreferrer"},nD=(0,l.Uk)("official spec"),aD={href:"https://github.com/Gobuffalo/velvet",target:"_blank",rel:"noopener noreferrer"},iD=(0,l.Uk)("velvet"),hD=(0,l.Uk)(" - 使用 Go 语言实现的完整的 handlebars"),kD=(0,l._)("h2",{id:"测试",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#测试","aria-hidden":"true"},"#"),(0,l.Uk)(" 测试")],-1),_D=(0,l._)("p",null,[(0,l._)("em",null,"测试及用于生成测试数据的库.")],-1),uD=(0,l.Uk)("测试框架 "),gD={href:"https://github.com/Go-playground/assert",target:"_blank",rel:"noopener noreferrer"},pD=(0,l.Uk)("assert"),mD=(0,l.Uk)(" - 基础断言库，用于对 Go 语言程序进行测试，提供了一些用于自定义断言的代码块"),sD={href:"https://github.com/cavaliercoder/badio",target:"_blank",rel:"noopener noreferrer"},bD=(0,l.Uk)("badio"),fD=(0,l.Uk)(" - Go 语言 "),cD=(0,l._)("code",null,"testing/iotest",-1),UD=(0,l.Uk)(" 包的扩展"),GD={href:"https://github.com/h2non/baloo",target:"_blank",rel:"noopener noreferrer"},dD=(0,l.Uk)("baloo"),WD=(0,l.Uk)(" - 表达性强、多功能的、端到端的HTTP API 测试工具"),vD={href:"https://github.com/marioidival/bro",target:"_blank",rel:"noopener noreferrer"},wD=(0,l.Uk)("bro"),yD=(0,l.Uk)(" - 监控目录中的文件并对其进行测试"),xD={href:"https://github.com/khaiql/dbcleaner",target:"_blank",rel:"noopener noreferrer"},SD=(0,l.Uk)("dbcleaner"),PD=(0,l.Uk)(" - 清空数据库用于测试，受到"),TD=(0,l._)("code",null,"database_cleaner",-1),AD=(0,l.Uk)(" 的启发"),zD={href:"https://github.com/viant/dsunit",target:"_blank",rel:"noopener noreferrer"},jD=(0,l.Uk)("dsunit"),MD=(0,l.Uk)(" - 数据库测试，针对 SQL、 NoSQL、 结构化文件."),CD={href:"https://github.com/verdverm/frisby",target:"_blank",rel:"noopener noreferrer"},LD=(0,l.Uk)("frisby"),RD=(0,l.Uk)(" - REST API 测试框架"),ID={href:"http://onsi.github.io/ginkGo/",target:"_blank",rel:"noopener noreferrer"},qD=(0,l.Uk)("ginkGo"),HD=(0,l.Uk)(" - BDD 测试框架"),DD={href:"https://github.com/msoap/Go-carpet",target:"_blank",rel:"noopener noreferrer"},OD=(0,l.Uk)("Go-carpet"),ED=(0,l.Uk)(" - 用于在终端中查看测试覆盖率的工具"),ND={href:"https://github.com/zimmski/Go-mutesting",target:"_blank",rel:"noopener noreferrer"},BD=(0,l.Uk)("Go-mutesting"),QD=(0,l.Uk)(" - Go 语言源代码突变测试（Mutation testing ）"),JD={href:"https://github.com/dnaeon/Go-vcr",target:"_blank",rel:"noopener noreferrer"},FD=(0,l.Uk)("Go-vcr"),VD=(0,l.Uk)(" - 记录并重放 HTTP 交互，用于快速的、确定性的、准确的测试"),XD={href:"https://github.com/franela/Goblin",target:"_blank",rel:"noopener noreferrer"},KD=(0,l.Uk)("Goblin"),YD=(0,l.Uk)(" - 类似 Mocha 的测试框架"),ZD={href:"http://labix.org/Gocheck",target:"_blank",rel:"noopener noreferrer"},$D=(0,l.Uk)("Gocheck"),eO=(0,l.Uk)(" - 更加高级的测试框架，用于替换 Gotest."),rO={href:"https://github.com/smartystreets/Goconvey/",target:"_blank",rel:"noopener noreferrer"},oO=(0,l.Uk)("GoConvey"),lO=(0,l.Uk)(" - BDD 风格的测试框架，具有 web 界面和计时刷新功能"),tO={href:"https://github.com/DATA-DOG/Godog",target:"_blank",rel:"noopener noreferrer"},nO=(0,l.Uk)("Godog"),aO=(0,l.Uk)(" - 类似 Cucumber 或 Behat 的 BDD 框架"),iO={href:"https://github.com/appleboy/Gofight",target:"_blank",rel:"noopener noreferrer"},hO=(0,l.Uk)("Gofight"),kO=(0,l.Uk)(" - 对 Go 语言的路由框架进行 API 测试"),_O={href:"http://onsi.github.io/Gomega/",target:"_blank",rel:"noopener noreferrer"},uO=(0,l.Uk)("Gomega"),gO=(0,l.Uk)(" - 类似 Rspec 的 matcher/assertion 库"),pO={href:"https://github.com/orfjackal/Gospec",target:"_blank",rel:"noopener noreferrer"},mO=(0,l.Uk)("GoSpec"),sO=(0,l.Uk)(" - BDD 风格的测试框架"),bO={href:"https://github.com/stesla/Gospecify",target:"_blank",rel:"noopener noreferrer"},fO=(0,l.Uk)("Gospecify"),cO=(0,l.Uk)(" - 支持 BDD 语法 。对于任何使用过 rspec 等库的人来说应该非常熟悉"),UO={href:"https://github.com/pavlo/Gosuite",target:"_blank",rel:"noopener noreferrer"},GO=(0,l.Uk)("Gosuite"),dO=(0,l.Uk)(" - 轻量级测试套，为 Go1.7's Subtests 带来了setup/teardown 功能"),WO={href:"https://github.com/rdrdr/hamcrest",target:"_blank",rel:"noopener noreferrer"},vO=(0,l.Uk)("Hamcrest"),wO=(0,l.Uk)(" - fluent framework for declarative Matcher objects that, when applied to input values, produce self-describing results."),yO={href:"https://github.com/gavv/httpexpect",target:"_blank",rel:"noopener noreferrer"},xO=(0,l.Uk)("httpexpect"),SO=(0,l.Uk)(" - 简洁的、声明式的、易用的端到端HTTP 及 REST API 测试"),PO={href:"https://github.com/yookoala/restit",target:"_blank",rel:"noopener noreferrer"},TO=(0,l.Uk)("restit"),AO=(0,l.Uk)(" - 帮助编写 RESTful API 集成测试的 Go 语言微型框架."),zO={href:"https://github.com/Go-testfixtures/testfixtures",target:"_blank",rel:"noopener noreferrer"},jO=(0,l.Uk)("testfixtures"),MO=(0,l.Uk)(" - 类似 Rails 的测试工具，用于测试数据库应用"),CO={href:"https://github.com/stretchr/testify",target:"_blank",rel:"noopener noreferrer"},LO=(0,l.Uk)("Testify"),RO=(0,l.Uk)(" - 对标准测试包的扩展"),IO={href:"https://github.com/posener/wstest",target:"_blank",rel:"noopener noreferrer"},qO=(0,l.Uk)("wstest"),HO=(0,l.Uk)(" - Websocket 客户端，用于对于 websocket HTTP.Handler 进行单元测试"),DO=(0,l.Uk)("Mock "),OO={href:"https://github.com/maxbrunsfeld/counterfeiter",target:"_blank",rel:"noopener noreferrer"},EO=(0,l.Uk)("counterfeiter"),NO=(0,l.Uk)(" - 用于生成自包含 mock 对象的工具"),BO={href:"https://github.com/DATA-DOG/Go-sqlmock",target:"_blank",rel:"noopener noreferrer"},QO=(0,l.Uk)("Go-sqlmock"),JO=(0,l.Uk)(" - Mock SQL ，用于测试数据库交互"),FO={href:"https://github.com/DATA-DOG/Go-txdb",target:"_blank",rel:"noopener noreferrer"},VO=(0,l.Uk)("Go-txdb"),XO=(0,l.Uk)(" - 基于单事物的数据库驱动，主要用于测试目的"),KO={href:"https://github.com/h2non/Gock",target:"_blank",rel:"noopener noreferrer"},YO=(0,l.Uk)("Gock"),ZO=(0,l.Uk)(" - 多功能、易用 HTTP mock"),$O={href:"https://github.com/Golang/mock",target:"_blank",rel:"noopener noreferrer"},eE=(0,l.Uk)("Gomock"),rE=(0,l.Uk)(" - 给 Go 语言用的 Mock框架"),oE={href:"https://github.com/seborama/Govcr",target:"_blank",rel:"noopener noreferrer"},lE=(0,l.Uk)("Govcr"),tE=(0,l.Uk)(" - HTTP mock : 离线测试时记录和重放浏览器的动作"),nE={href:"https://github.com/Gojuno/minimock",target:"_blank",rel:"noopener noreferrer"},aE=(0,l.Uk)("minimock"),iE=(0,l.Uk)(" - Mock 生成器"),hE={href:"https://github.com/tv42/mockhttp",target:"_blank",rel:"noopener noreferrer"},kE=(0,l.Uk)("mockhttp"),_E=(0,l.Uk)(" - Go HTTP.ResponseWriter 使用的 Mock 对象"),uE=(0,l.Uk)("Fuzzing and delta-debugging/reducing/shrinking "),gE={href:"https://github.com/dvyukov/Go-fuzz",target:"_blank",rel:"noopener noreferrer"},pE=(0,l.Uk)("Go-fuzz"),mE=(0,l.Uk)(" - 随机化测试系统"),sE={href:"https://github.com/Google/Gofuzz",target:"_blank",rel:"noopener noreferrer"},bE=(0,l.Uk)("Gofuzz"),fE=(0,l.Uk)(" - 用于生成随机值来初始化 Go 语言对象的库"),cE={href:"https://github.com/zimmski/tavor",target:"_blank",rel:"noopener noreferrer"},UE=(0,l.Uk)("Tavor"),GE=(0,l.Uk)(" - 通用模糊测试框架"),dE=(0,l.Uk)("Selenium 及浏览器控制工具 "),WE={href:"https://github.com/mafredri/cdp",target:"_blank",rel:"noopener noreferrer"},vE=(0,l.Uk)("cdp"),wE=(0,l.Uk)(" - 类型安全的 Chrome debug协议的 Go 语言接口，可以用于浏览器或任何实现了该协议的其他待调试对象"),yE={href:"https://github.com/knq/chromedp",target:"_blank",rel:"noopener noreferrer"},xE=(0,l.Uk)("chromedp"),SE=(0,l.Uk)(" - 用于驱动和测试 Chrome, Safari, Edge, Android Webviews, 以及其他支持 Chrome 调试协议的产品"),PE={href:"https://github.com/aandryashin/ggr",target:"_blank",rel:"noopener noreferrer"},TE=(0,l.Uk)("ggr"),AE=(0,l.Uk)(" - 一个轻量级服务器，可以将 Selenium Wedriver 的请求路由或代理到多个 Selenium hubs."),zE={href:"https://github.com/aandryashin/selenoid",target:"_blank",rel:"noopener noreferrer"},jE=(0,l.Uk)("selenoid"),ME=(0,l.Uk)(" - Selenium hub 服务器的替代品，在容器中启动浏览器"),CE=(0,l._)("h2",{id:"文本处理",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#文本处理","aria-hidden":"true"},"#"),(0,l.Uk)(" 文本处理")],-1),LE=(0,l._)("p",null,[(0,l._)("em",null,"解析和操作文本的库")],-1),RE=(0,l.Uk)("特殊格式 "),IE={href:"https://github.com/sbstjn/allot",target:"_blank",rel:"noopener noreferrer"},qE=(0,l.Uk)("allot"),HE=(0,l.Uk)(" - 占位符及通配符文本解析"),DE={href:"https://github.com/CalebQ42/bbConvert",target:"_blank",rel:"noopener noreferrer"},OE=(0,l.Uk)("bbConvert"),EE=(0,l.Uk)(" - 将 bbCode 转换为 HTML"),NE={href:"https://github.com/russross/blackfriday",target:"_blank",rel:"noopener noreferrer"},BE=(0,l.Uk)("blackfriday"),QE=(0,l.Uk)(" - Markdown 解析器"),JE={href:"https://github.com/microcosm-cc/bluemonday",target:"_blank",rel:"noopener noreferrer"},FE=(0,l.Uk)("bluemonday"),VE=(0,l.Uk)(" - HTML 清理工具"),XE={href:"https://github.com/editorconfig/editorconfig-core-Go",target:"_blank",rel:"noopener noreferrer"},KE=(0,l.Uk)("editorconfig-core-Go"),YE=(0,l.Uk)(" - Go 语言用的Editorconfig 文件解析和操作库"),ZE={href:"https://github.com/endeveit/enca",target:"_blank",rel:"noopener noreferrer"},$E=(0,l.Uk)("enca"),eN=(0,l.Uk)(" - "),rN={href:"http://cihar.com/software/enca/",target:"_blank",rel:"noopener noreferrer"},oN=(0,l.Uk)("libenca"),lN=(0,l.Uk)("的极简的 cGo 接口"),tN={href:"https://github.com/alixaxel/genex",target:"_blank",rel:"noopener noreferrer"},nN=(0,l.Uk)("genex"),aN=(0,l.Uk)(" - 计算并展开正则表达式为所有匹配的字符串"),iN={href:"https://Godoc.org/github.com/shurcooL/github_flavored_markdown",target:"_blank",rel:"noopener noreferrer"},hN=(0,l.Uk)("github_flavored_markdown"),kN=(0,l.Uk)(" - GitHub 风格的 Markdown 渲染器 (使用 blackfriday) ，支持代码块高亮以及可点击的锚点"),_N={href:"https://github.com/dustin/Go-humanize",target:"_blank",rel:"noopener noreferrer"},uN=(0,l.Uk)("Go-humanize"),gN=(0,l.Uk)(" - 时间、数字及内存大小格式化工具"),pN={href:"https://github.com/adrianmo/Go-nmea",target:"_blank",rel:"noopener noreferrer"},mN=(0,l.Uk)("Go-nmea"),sN=(0,l.Uk)(" - NMEA 解析库"),bN={href:"https://github.com/jteeuwen/Go-pkg-rss",target:"_blank",rel:"noopener noreferrer"},fN=(0,l.Uk)("Go-pkg-rss"),cN=(0,l.Uk)(" - 这个库可以读取 RSS 以及 Atom feeds，并且提供了一种缓存机制，遵守 feed 标准。"),UN={href:"https://github.com/mattn/Go-runewidth",target:"_blank",rel:"noopener noreferrer"},GN=(0,l.Uk)("Go-runewidth"),dN=(0,l.Uk)(" - 用于获取字符或字符串固定宽度的函数"),WN={href:"https://github.com/mozillazg/Go-slugify",target:"_blank",rel:"noopener noreferrer"},vN=(0,l.Uk)("Go-slugify"),wN=(0,l.Uk)(" - 生成漂亮的固定链接地址（slug），支持多种语言"),yN={href:"https://github.com/emersion/Go-vcard",target:"_blank",rel:"noopener noreferrer"},xN=(0,l.Uk)("Go-vcard"),SN=(0,l.Uk)(" - 解析并且格式化vCard"),PN={href:"https://github.com/mmcdole/Gofeed",target:"_blank",rel:"noopener noreferrer"},TN=(0,l.Uk)("Gofeed"),AN=(0,l.Uk)(" - 使用 Go 语言解析RSS 和 Atom"),zN={href:"https://github.com/awalterschulze/Gographviz",target:"_blank",rel:"noopener noreferrer"},jN=(0,l.Uk)("Gographviz"),MN=(0,l.Uk)(" - 用以解析 Graphviz DOT 语言"),CN={href:"https://github.com/labstack/Gommon/tree/master/bytes",target:"_blank",rel:"noopener noreferrer"},LN=(0,l.Uk)("Gommon/bytes"),RN=(0,l.Uk)(" - 格式化二进制为字符串"),IN={href:"https://github.com/polera/Gonameparts",target:"_blank",rel:"noopener noreferrer"},qN=(0,l.Uk)("Gonameparts"),HN=(0,l.Uk)(" - 将人名解析为几个独立的部分"),DN={href:"https://github.com/andrewstuart/Goq",target:"_blank",rel:"noopener noreferrer"},ON=(0,l.Uk)("Goq"),EN=(0,l.Uk)(" - 声明式 HTML 编组，使用结构标签和 jQuery 语法 (使用 GoQuery)."),NN={href:"https://github.com/PuerkitoBio/Goquery",target:"_blank",rel:"noopener noreferrer"},BN=(0,l.Uk)("GoQuery"),QN=(0,l.Uk)(" - GoQuery 为 Go 语言带来了一组类似 jQuery 的语法和功能"),JN={href:"https://github.com/zach-klippenstein/Goregen",target:"_blank",rel:"noopener noreferrer"},FN=(0,l.Uk)("Goregen"),VN=(0,l.Uk)(" - 根据正则表达式生成随机字符串"),XN={href:"https://github.com/leonelquinteros/Gotext",target:"_blank",rel:"noopener noreferrer"},KN=(0,l.Uk)("Gotext"),YN=(0,l.Uk)(" - GNU gettext 工具"),ZN={href:"https://github.com/endeveit/guesslanguage",target:"_blank",rel:"noopener noreferrer"},$N=(0,l.Uk)("guesslanguage"),eB=(0,l.Uk)(" - 通过一个 unicode 文本来猜测该文本使用的语言"),rB={href:"https://github.com/facebookGo/inject",target:"_blank",rel:"noopener noreferrer"},oB=(0,l.Uk)("inject"),lB=(0,l.Uk)(" - inject 提供来一个基于反射对注入器"),tB={href:"https://github.com/clbanning/mxj",target:"_blank",rel:"noopener noreferrer"},nB=(0,l.Uk)("mxj"),aB=(0,l.Uk)(" - 将 XML 编解码为 JSON 或 map[string]interface{}; 通过点分路径和通配符来提取值。用于替代Replaces x2j 和 j2x 包."),iB={href:"https://github.com/mvdan/sh",target:"_blank",rel:"noopener noreferrer"},hB=(0,l.Uk)("sh"),kB=(0,l.Uk)(" - Shell 解析器及格式化工具"),_B={href:"https://github.com/Gosimple/slug",target:"_blank",rel:"noopener noreferrer"},uB=(0,l.Uk)("slug"),gB=(0,l.Uk)(" - URL 友好的 slug 化工具，支持多种语言"),pB={href:"https://github.com/avelino/slugify",target:"_blank",rel:"noopener noreferrer"},mB=(0,l.Uk)("Slugify"),sB=(0,l.Uk)(" - Go 语言静态地址生成器，可以处理字符串"),bB={href:"https://github.com/BurntSushi/toml",target:"_blank",rel:"noopener noreferrer"},fB=(0,l.Uk)("toml"),cB=(0,l.Uk)(" - TOML 配置格式 format (encoder/decoder with reflection).(弃用）"),UB=(0,l.Uk)("工具 "),GB={href:"https://github.com/bndr/Gotabulate",target:"_blank",rel:"noopener noreferrer"},dB=(0,l.Uk)("Gotabulate"),WB=(0,l.Uk)(" - 使用 Go 语言简单、美观的打印表格数据"),vB={href:"https://github.com/codemodus/kace",target:"_blank",rel:"noopener noreferrer"},wB=(0,l.Uk)("kace"),yB=(0,l.Uk)(" - 通用大小写转换工具"),xB={href:"https://github.com/nproc/parseargs-Go",target:"_blank",rel:"noopener noreferrer"},SB=(0,l.Uk)("parseargs-Go"),PB=(0,l.Uk)(" - 字符串参数解析器，能够理解引用及反斜杠"),TB={href:"https://github.com/codemodus/parth",target:"_blank",rel:"noopener noreferrer"},AB=(0,l.Uk)("parth"),zB=(0,l.Uk)(" - URL 路径分割解析"),jB={href:"https://github.com/yourbasic/radix",target:"_blank",rel:"noopener noreferrer"},MB=(0,l.Uk)("radix"),CB=(0,l.Uk)(" - 快速的字符串排序算法"),LB={href:"https://github.com/mvdan/xurls",target:"_blank",rel:"noopener noreferrer"},RB=(0,l.Uk)("xurls"),IB=(0,l.Uk)(" - 从文本中提取 URL"),qB=(0,l._)("h2",{id:"第三方-apis",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#第三方-apis","aria-hidden":"true"},"#"),(0,l.Uk)(" 第三方 APIs")],-1),HB=(0,l._)("p",null,[(0,l._)("em",null,"用于访问第三方 APIs 的库")],-1),DB={href:"https://github.com/ngs/Go-amazon-product-advertising-api",target:"_blank",rel:"noopener noreferrer"},OB=(0,l.Uk)("amazon-product-advertising-api"),EB=(0,l.Uk)(" - "),NB={href:"https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html",target:"_blank",rel:"noopener noreferrer"},BB=(0,l.Uk)("Amazon Product Advertising API"),QB=(0,l.Uk)(" 的 go 语言客户端"),JB={href:"https://github.com/ChimeraCoder/anaconda",target:"_blank",rel:"noopener noreferrer"},FB=(0,l.Uk)("anaconda"),VB=(0,l.Uk)(" - Twitter 1.1 API 的 go 语言客户端"),XB={href:"https://github.com/aws/aws-sdk-Go",target:"_blank",rel:"noopener noreferrer"},KB=(0,l.Uk)("aws-sdk-Go"),YB=(0,l.Uk)(" - AWS 提供的官方go语言 SDK"),ZB={href:"https://github.com/naegelejd/brewerydb",target:"_blank",rel:"noopener noreferrer"},$B=(0,l.Uk)("brewerydb"),eQ=(0,l.Uk)(" - 用于访问 BreweryDB API的 Go 语言库"),rQ={href:"https://github.com/andygrunwald/cachet",target:"_blank",rel:"noopener noreferrer"},oQ=(0,l.Uk)("cachet"),lQ=(0,l.Uk)(" - "),tQ={href:"https://cachethq.io/",target:"_blank",rel:"noopener noreferrer"},nQ=(0,l.Uk)("Cachet (open source status page system)"),aQ=(0,l.Uk)("的 Go 语言客户端"),iQ={href:"https://github.com/jszwedko/Go-circleci",target:"_blank",rel:"noopener noreferrer"},hQ=(0,l.Uk)("circleci"),kQ=(0,l.Uk)(" - 用于和 with CircleCI's API 进行交互的 Go 语言客户端"),_Q={href:"https://github.com/samuelcouch/clarifai",target:"_blank",rel:"noopener noreferrer"},uQ=(0,l.Uk)("clarifai"),gQ=(0,l.Uk)(" - 用语和 Clarifai API 交互的 Go 语言库"),pQ={href:"https://github.com/bwmarrin/discordGo",target:"_blank",rel:"noopener noreferrer"},mQ=(0,l.Uk)("discordGo"),sQ=(0,l.Uk)(" - Discord Chat API 的 Go 语言接口"),bQ={href:"https://github.com/huandu/facebook",target:"_blank",rel:"noopener noreferrer"},fQ=(0,l.Uk)("facebook"),cQ=(0,l.Uk)(" - 支持 Facebook Graph API 的库"),UQ={href:"https://github.com/maddevsio/fcm",target:"_blank",rel:"noopener noreferrer"},GQ=(0,l.Uk)("fcm"),dQ=(0,l.Uk)(" - Firebase Cloud Messaging 的 Go 语言库"),WQ={href:"https://github.com/emiddleton/gads",target:"_blank",rel:"noopener noreferrer"},vQ=(0,l.Uk)("gads"),wQ=(0,l.Uk)(" - Google Adwords 非官方 API"),yQ={href:"https://github.com/bit4bit/gami",target:"_blank",rel:"noopener noreferrer"},xQ=(0,l.Uk)("gami"),SQ=(0,l.Uk)(" - Asterisk Manager Interface 的 Go 语言库"),PQ={href:"https://github.com/Aorioli/gcm",target:"_blank",rel:"noopener noreferrer"},TQ=(0,l.Uk)("gcm"),AQ=(0,l.Uk)(" - Google Cloud Messaging 库"),zQ={href:"https://github.com/codingsince1985/geo-Golang",target:"_blank",rel:"noopener noreferrer"},jQ=(0,l.Uk)("geo-Golang"),MQ=(0,l.Uk)(" - 用于与 "),CQ={href:"https://developers.Google.com/maps/documentation/geocoding/intro",target:"_blank",rel:"noopener noreferrer"},LQ=(0,l.Uk)("Google Maps"),RQ=(0,l.Uk)(", "),IQ={href:"http://open.mapquestapi.com/geocoding/",target:"_blank",rel:"noopener noreferrer"},qQ=(0,l.Uk)("MapQuest"),HQ=(0,l.Uk)(", "),DQ={href:"http://open.mapquestapi.com/nominatim/",target:"_blank",rel:"noopener noreferrer"},OQ=(0,l.Uk)("Nominatim"),EQ=(0,l.Uk)(", "),NQ={href:"http://geocoder.opencagedata.com/api.html",target:"_blank",rel:"noopener noreferrer"},BQ=(0,l.Uk)("OpenCage"),QQ=(0,l.Uk)(", "),JQ={href:"https://developer.here.com/rest-apis/documentation/geocoder",target:"_blank",rel:"noopener noreferrer"},FQ=(0,l.Uk)("HERE"),VQ=(0,l.Uk)(", "),XQ={href:"https://msdn.microsoft.com/en-us/library/ff701715.aspx",target:"_blank",rel:"noopener noreferrer"},KQ=(0,l.Uk)("Bing"),YQ=(0,l.Uk)(", "),ZQ={href:"https://www.mapbox.com/developers/api/geocoding/",target:"_blank",rel:"noopener noreferrer"},$Q=(0,l.Uk)("Mapbox"),eJ=(0,l.Uk)(", 及 "),rJ={href:"https://wiki.openstreetmap.org/wiki/Nominatim",target:"_blank",rel:"noopener noreferrer"},oJ=(0,l.Uk)("OpenStreetMap"),lJ=(0,l.Uk)(" 地理编码 / 反编码 APIs 交互的库"),tJ={href:"https://github.com/neuegram/ghost",target:"_blank",rel:"noopener noreferrer"},nJ=(0,l.Uk)("ghost"),aJ=(0,l.Uk)(" - 用于和 Snapchat API 交互的库"),iJ={href:"https://github.com/Google/Go-github",target:"_blank",rel:"noopener noreferrer"},hJ=(0,l.Uk)("github"),kJ=(0,l.Uk)(" - 用于和 GitHub REST API v3 交互的库"),_J={href:"https://github.com/shurcooL/githubql",target:"_blank",rel:"noopener noreferrer"},uJ=(0,l.Uk)("githubql"),gJ=(0,l.Uk)(" - 用于和GitHub GraphQL API v4 交互的库"),pJ={href:"https://github.com/koffeinsource/Go-imgur",target:"_blank",rel:"noopener noreferrer"},mJ=(0,l.Uk)("Go-imgur"),sJ=(0,l.Uk)(" - "),bJ={href:"https://imgur.com",target:"_blank",rel:"noopener noreferrer"},fJ=(0,l.Uk)("imgur"),cJ=(0,l.Uk)(" 的 Go 语言客户端"),UJ={href:"https://github.com/andygrunwald/Go-jira",target:"_blank",rel:"noopener noreferrer"},GJ=(0,l.Uk)("Go-jira"),dJ=(0,l.Uk)(" - "),WJ={href:"https://www.atlassian.com/software/jira",target:"_blank",rel:"noopener noreferrer"},vJ=(0,l.Uk)("Atlassian JIRA"),wJ=(0,l.Uk)(" 的 Go 语言客户端"),yJ={href:"https://github.com/gambol99/Go-marathon",target:"_blank",rel:"noopener noreferrer"},xJ=(0,l.Uk)("Go-marathon"),SJ=(0,l.Uk)(" - 用于和 Mesosphere's Marathon PAAS 交互的 Go 语言库"),PJ={href:"https://github.com/nstratos/Go-myanimelist",target:"_blank",rel:"noopener noreferrer"},TJ=(0,l.Uk)("Go-myanimelist"),AJ=(0,l.Uk)(" - 用于和 "),zJ={href:"http://myanimelist.net/modules.php?Go=api",target:"_blank",rel:"noopener noreferrer"},jJ=(0,l.Uk)("MyAnimeList API"),MJ=(0,l.Uk)("交互的库"),CJ={href:"https://github.com/toby3d/Go-telegraph",target:"_blank",rel:"noopener noreferrer"},LJ=(0,l.Uk)("Go-telegraph"),RJ=(0,l.Uk)(" - Telegraph 发布平台 API 客户端"),IJ={href:"https://github.com/olebedev/Go-tgbot",target:"_blank",rel:"noopener noreferrer"},qJ=(0,l.Uk)("Go-tgbot"),HJ=(0,l.Uk)(" - 纯 Go 语言的Telegram 机器人 API 封装，通过 swagger 文件，基会话的路由和中间件"),DJ={href:"https://github.com/andygrunwald/Go-trending",target:"_blank",rel:"noopener noreferrer"},OJ=(0,l.Uk)("Go-trending"),EJ=(0,l.Uk)(" - 用于获取 Github 上面 "),NJ={href:"https://github.com/trending",target:"_blank",rel:"noopener noreferrer"},BJ=(0,l.Uk)("当前流行的代码库"),QJ=(0,l.Uk)(" 及 "),JJ={href:"https://github.com/trending/developers",target:"_blank",rel:"noopener noreferrer"},FJ=(0,l.Uk)("开发者"),VJ={href:"https://github.com/knspriggs/Go-twitch",target:"_blank",rel:"noopener noreferrer"},XJ=(0,l.Uk)("Go-twitch"),KJ=(0,l.Uk)(" - 用于和推特v3 API 进行交互的 Go 语言客户端"),YJ={href:"https://github.com/dghubble/Go-twitter",target:"_blank",rel:"noopener noreferrer"},ZJ=(0,l.Uk)("Go-twitter"),$J=(0,l.Uk)(" - 用于和推特v1.1 API 进行交互的 Go 语言客户端"),eF={href:"https://github.com/hbagdi/Go-unsplash",target:"_blank",rel:"noopener noreferrer"},rF=(0,l.Uk)("Go-unsplash"),oF=(0,l.Uk)(" - "),lF={href:"https://unsplash.com",target:"_blank",rel:"noopener noreferrer"},tF=(0,l.Uk)("Unsplash.com"),nF=(0,l.Uk)(" API 的 Go 语言客户端"),aF={href:"https://github.com/nishanths/Go-xkcd",target:"_blank",rel:"noopener noreferrer"},iF=(0,l.Uk)("Go-xkcd"),hF=(0,l.Uk)(" - xkcd API 的 Go 语言客户端"),kF={href:"https://github.com/mitchellh/Goamz",target:"_blank",rel:"noopener noreferrer"},_F=(0,l.Uk)("Goamz"),uF=(0,l.Uk)(" - "),gF={href:"https://launchpad.net/Goamz",target:"_blank",rel:"noopener noreferrer"},pF=(0,l.Uk)("Goamz"),mF=(0,l.Uk)(" 的一个fork分支，添加了一些缺失的 API，用于调用特定的软件包。"),sF={href:"https://github.com/mamal72/Golyrics",target:"_blank",rel:"noopener noreferrer"},bF=(0,l.Uk)("Golyrics"),fF=(0,l.Uk)(" - Golyrics 是一个 Go 语言库，用于从 Wikia 上获取歌词"),cF={href:"https://github.com/michiwend/Gomusicbrainz",target:"_blank",rel:"noopener noreferrer"},UF=(0,l.Uk)("GoMusicBrainz"),GF=(0,l.Uk)(" - Go MusicBrainz WS2 客户端"),dF={href:"https://github.com/Google/Google-api-Go-client",target:"_blank",rel:"noopener noreferrer"},WF=(0,l.Uk)("Google"),vF=(0,l.Uk)(" - 为go语言自动生成 Google api"),wF={href:"https://github.com/chonthu/Go-Google-analytics",target:"_blank",rel:"noopener noreferrer"},yF=(0,l.Uk)("Google-analytics"),xF=(0,l.Uk)(" - Google 分析报告的一个简单的封装"),SF={href:"https://github.com/GoogleCloudPlatform/gcloud-Golang",target:"_blank",rel:"noopener noreferrer"},PF=(0,l.Uk)("Google-cloud"),TF=(0,l.Uk)(" - Google Cloud APIs Go 语言客户端库"),AF={href:"https://github.com/ngs/Go-Google-email-audit-api",target:"_blank",rel:"noopener noreferrer"},zF=(0,l.Uk)("Google-email-audit-api"),jF=(0,l.Uk)(" - "),MF={href:"https://developers.Google.com/admin-sdk/email-audit/",target:"_blank",rel:"noopener noreferrer"},CF=(0,l.Uk)("Google G Suite Email Audit API"),LF=(0,l.Uk)("的 Go 语言客户端库"),RF={href:"https://github.com/jsgilmore/Gostorm",target:"_blank",rel:"noopener noreferrer"},IF=(0,l.Uk)("Gostorm"),qF=(0,l.Uk)(" - GoStorm 是一个 Go 语言库，实现了在 Go 语言里面编写 Spout 和 Bolt 的协议，用于和 Storm  shells 进行通信"),HF={href:"https://github.com/nikepan/Govkbot",target:"_blank",rel:"noopener noreferrer"},DF=(0,l.Uk)("Govkbot"),OF=(0,l.Uk)(" - 简单的 Go "),EF={href:"https://vk.com",target:"_blank",rel:"noopener noreferrer"},NF=(0,l.Uk)("VK"),BF=(0,l.Uk)(" 机器人库"),QF={href:"https://github.com/andybons/hipchat",target:"_blank",rel:"noopener noreferrer"},JF=(0,l.Uk)("hipchat"),FF=(0,l.Uk)(" - 这个项目实行了Hipchat API 的 Go 语言客户端"),VF={href:"https://github.com/daneharrigan/hipchat",target:"_blank",rel:"noopener noreferrer"},XF=(0,l.Uk)("hipchat (xmpp)"),KF=(0,l.Uk)(" - 通过使用 XMPP 与 HipChat 进行通信的库"),YF={href:"https://github.com/Medium/medium-sdk-Go",target:"_blank",rel:"noopener noreferrer"},ZF=(0,l.Uk)("Medium"),$F=(0,l.Uk)(" - Medium OAuth2 API 的 sdk"),eV={href:"https://github.com/andygrunwald/meGos",target:"_blank",rel:"noopener noreferrer"},rV=(0,l.Uk)("meGos"),oV=(0,l.Uk)(" - 用于访问 "),lV={href:"http://mesos.apache.org/",target:"_blank",rel:"noopener noreferrer"},tV=(0,l.Uk)("Apache Mesos"),nV=(0,l.Uk)(" 集群的客户端"),aV={href:"https://github.com/onrik/micha",target:"_blank",rel:"noopener noreferrer"},iV=(0,l.Uk)("micha"),hV=(0,l.Uk)(" - 用于"),kV={href:"https://core.telegram.org/bots/api",target:"_blank",rel:"noopener noreferrer"},_V=(0,l.Uk)("Telegram bot api"),uV=(0,l.Uk)("的go语言库"),gV={href:"https://github.com/minio/minio-Go",target:"_blank",rel:"noopener noreferrer"},pV=(0,l.Uk)("minio-Go"),mV=(0,l.Uk)(" - go 语言 Minio 客户端，用于 Amazon S3 兼容的云存储"),sV={href:"https://github.com/dukex/mixpanel",target:"_blank",rel:"noopener noreferrer"},bV=(0,l.Uk)("mixpanel"),fV=(0,l.Uk)(" - Mixpanel 是一个用于追踪事件并发送 Mixpanel profile 的更新到 Mixpanel 的库"),cV={href:"https://github.com/mxpv/patreon-Go",target:"_blank",rel:"noopener noreferrer"},UV=(0,l.Uk)("patreon-Go"),GV=(0,l.Uk)(" - Patreon API."),dV={href:"https://github.com/logpacker/paypalsdk",target:"_blank",rel:"noopener noreferrer"},WV=(0,l.Uk)("paypal"),vV=(0,l.Uk)(" - PayPal 支付 API"),wV={href:"https://github.com/playlyfe/playlyfe-Go-sdk",target:"_blank",rel:"noopener noreferrer"},yV=(0,l.Uk)("playlyfe"),xV=(0,l.Uk)(" - Playlyfe Rest API 的 Go 语言 SDK"),SV={href:"https://github.com/gregdel/pushover",target:"_blank",rel:"noopener noreferrer"},PV=(0,l.Uk)("pushover"),TV=(0,l.Uk)(" - Pushover API 的 Go 语言封装"),AV={href:"https://github.com/Omie/rrdaclient",target:"_blank",rel:"noopener noreferrer"},zV=(0,l.Uk)("rrdaclient"),jV=(0,l.Uk)(" - 用于接入 statdns.com API 的库——RRDA API。通过HTTP协议进行 DNS查询"),MV={href:"https://github.com/rapito/Go-shopify",target:"_blank",rel:"noopener noreferrer"},CV=(0,l.Uk)("shopify"),LV=(0,l.Uk)(" - 一个用于通过 Shopify API 进行增删改查的 Go 语言库"),RV={href:"https://github.com/nlopes/slack",target:"_blank",rel:"noopener noreferrer"},IV=(0,l.Uk)("slack"),qV=(0,l.Uk)(" - Slack API"),HV={href:"https://github.com/sergiotapia/smiteGo",target:"_blank",rel:"noopener noreferrer"},DV=(0,l.Uk)("smite"),OV=(0,l.Uk)(" - 对 Smite game API 的封装"),EV={href:"https://github.com/rapito/Go-spotify",target:"_blank",rel:"noopener noreferrer"},NV=(0,l.Uk)("spotify"),BV=(0,l.Uk)(" - 用于接入 Spotify WEB API 的 Go 语言库"),QV={href:"https://github.com/sostronk/Go-steam",target:"_blank",rel:"noopener noreferrer"},JV=(0,l.Uk)("steam"),FV=(0,l.Uk)(" - 用于与Steam服务器进行交互的库"),VV={href:"https://github.com/stripe/stripe-Go",target:"_blank",rel:"noopener noreferrer"},XV=(0,l.Uk)("stripe"),KV=(0,l.Uk)(" - Stripe API 的 Go 语言客户端"),YV={href:"https://github.com/yanzay/tbot",target:"_blank",rel:"noopener noreferrer"},ZV=(0,l.Uk)("tbot"),$V=(0,l.Uk)(" - Telegram bot 服务器，有类似 net/http 的 api"),eX={href:"https://github.com/tucnak/telebot",target:"_blank",rel:"noopener noreferrer"},rX=(0,l.Uk)("telebot"),oX=(0,l.Uk)(" - go语言编写的 Telegram bot 框架"),lX={href:"https://github.com/Syfaro/telegram-bot-api",target:"_blank",rel:"noopener noreferrer"},tX=(0,l.Uk)("telegram-bot-api"),nX=(0,l.Uk)(" - 简洁的 Telegram bot 客户端."),aX={href:"https://github.com/dietsche/textbelt",target:"_blank",rel:"noopener noreferrer"},iX=(0,l.Uk)("textbelt"),hX=(0,l.Uk)(" - textbelt.com txt messaging API 的go语言客户端"),kX={href:"https://github.com/jbrodriguez/Go-tmdb",target:"_blank",rel:"noopener noreferrer"},_X=(0,l.Uk)("TheMovieDb"),uX=(0,l.Uk)(" - 用于和 "),gX={href:"https://themoviedb.org",target:"_blank",rel:"noopener noreferrer"},pX=(0,l.Uk)("themoviedb.org"),mX=(0,l.Uk)(" 通信的一个简单的 Go 语言软件包"),sX={href:"https://github.com/poorny/translate",target:"_blank",rel:"noopener noreferrer"},bX=(0,l.Uk)("translate"),fX=(0,l.Uk)(" - Go 在线翻译包"),cX={href:"https://github.com/adlio/trello",target:"_blank",rel:"noopener noreferrer"},UX=(0,l.Uk)("Trello"),GX=(0,l.Uk)(" - Trello API的 Go 语言封装"),dX={href:"https://github.com/mattcunningham/gumblr",target:"_blank",rel:"noopener noreferrer"},WX=(0,l.Uk)("tumblr"),vX=(0,l.Uk)(" - Tumblr v2 API 的 Go 语言封装"),wX={href:"https://github.com/Go-playground/webhooks",target:"_blank",rel:"noopener noreferrer"},yX=(0,l.Uk)("webhooks"),xX=(0,l.Uk)(" - GitHub 和 Bitbucket 的Webhook接收器"),SX={href:"https://github.com/Gojuno/Go-zooz",target:"_blank",rel:"noopener noreferrer"},PX=(0,l.Uk)("zooz"),TX=(0,l.Uk)(" - Zooz API 的 Go 语言客户端"),AX=(0,l._)("h2",{id:"实用工具",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#实用工具","aria-hidden":"true"},"#"),(0,l.Uk)(" 实用工具")],-1),zX=(0,l._)("p",null,[(0,l._)("em",null,"可以让你的生活变得更简单的实用工具.")],-1),jX={href:"https://github.com/bahlo/abutil",target:"_blank",rel:"noopener noreferrer"},MX=(0,l.Uk)("abutil"),CX=(0,l.Uk)(" - 常用 Go 语言工具的集合（已弃用）"),LX={href:"https://github.com/topfreegames/apm",target:"_blank",rel:"noopener noreferrer"},RX=(0,l.Uk)("apm"),IX=(0,l.Uk)(" - Go 语言进程管理工具具有HTTP API （已弃用）"),qX={href:"https://github.com/tmrts/boilr",target:"_blank",rel:"noopener noreferrer"},HX=(0,l.Uk)("boilr"),DX=(0,l.Uk)(" - 一个超快的命令行工具，用于从模板文件生成项目"),OX={href:"https://github.com/rubyist/circuitbreaker",target:"_blank",rel:"noopener noreferrer"},EX=(0,l.Uk)("circuitbreaker"),NX=(0,l.Uk)(" - Go 语言断路器模式"),BX={href:"http://github.com/onatm/clockwerk",target:"_blank",rel:"noopener noreferrer"},QX=(0,l.Uk)("clockwerk"),JX=(0,l.Uk)(" - 使用简单、流畅的语法来调度周期性任务"),FX={href:"https://github.com/txgruppi/command",target:"_blank",rel:"noopener noreferrer"},VX=(0,l.Uk)("command"),XX=(0,l.Uk)(" - 命令模式，支持线程安全的串行、并行调度"),KX={href:"https://github.com/rakyll/coop",target:"_blank",rel:"noopener noreferrer"},YX=(0,l.Uk)("coop"),ZX=(0,l.Uk)(" - Go 语言中常见的并发流程速查表"),$X={href:"https://github.com/jutkko/copy-pasta",target:"_blank",rel:"noopener noreferrer"},eK=(0,l.Uk)("copy-pasta"),rK=(0,l.Uk)(" - 通用多工作站剪切板，使用类似 S3 的后端作为存储"),oK={href:"https://github.com/bcicen/ctop",target:"_blank",rel:"noopener noreferrer"},lK=(0,l.Uk)("ctop"),tK=(0,l.Uk)(" - "),nK={href:"http://ctop.sh",target:"_blank",rel:"noopener noreferrer"},aK=(0,l.Uk)("类似Top"),iK=(0,l.Uk)("的接口 (例如 htop) ，用于容器数据收集"),hK={href:"https://github.com/vrecan/death",target:"_blank",rel:"noopener noreferrer"},kK=(0,l.Uk)("Death"),_K=(0,l.Uk)(" - 利用信号管理应用程序的关闭"),uK={href:"https://github.com/ulule/deepcopier",target:"_blank",rel:"noopener noreferrer"},gK=(0,l.Uk)("Deepcopier"),pK=(0,l.Uk)(" - 结构体拷贝"),mK={href:"https://github.com/derekparker/delve",target:"_blank",rel:"noopener noreferrer"},sK=(0,l.Uk)("delve"),bK=(0,l.Uk)(" - Go 语言调试器"),fK={href:"https://github.com/kirillDanshin/dlog",target:"_blank",rel:"noopener noreferrer"},cK=(0,l.Uk)("dlog"),UK=(0,l.Uk)(" - 编译时控制的日志，让你的 release 包变得更小而不需移除 debug 调用"),GK={href:"https://github.com/Luxurioust/excelize",target:"_blank",rel:"noopener noreferrer"},dK=(0,l.Uk)("excelize"),WK=(0,l.Uk)(" - 用于读写 Microsoft Excel (XLSX) 文件的库"),vK={href:"https://github.com/digitalcrab/fastlz",target:"_blank",rel:"noopener noreferrer"},wK=(0,l.Uk)("fastlz"),yK=(0,l.Uk)(" - "),xK={href:"http://fastlz.org/",target:"_blank",rel:"noopener noreferrer"},SK=(0,l.Uk)("FastLz"),PK=(0,l.Uk)(" (免费，开源，可移植实时压缩库) 的一个封装"),TK={href:"https://github.com/h2non/filetype",target:"_blank",rel:"noopener noreferrer"},AK=(0,l.Uk)("filetype"),zK=(0,l.Uk)(" - 通过数字签名来推测文件类型"),jK={href:"https://github.com/yaronsumel/filler",target:"_blank",rel:"noopener noreferrer"},MK=(0,l.Uk)("filler"),CK=(0,l.Uk)(' - 使用 "fill" 标记来填充结构体的小工具'),LK={href:"https://github.com/junegunn/fzf",target:"_blank",rel:"noopener noreferrer"},RK=(0,l.Uk)("fzf"),IK=(0,l.Uk)(" - 命令行模糊查找工具"),qK={href:"https://github.com/Go-playground/generate",target:"_blank",rel:"noopener noreferrer"},HK=(0,l.Uk)("generate"),DK=(0,l.Uk)(" - 针对一个路径或环境变量，递归的执行 Go generate，可以通过正则表达式来进行过滤"),OK={href:"https://github.com/h2non/gentleman",target:"_blank",rel:"noopener noreferrer"},EK=(0,l.Uk)("gentleman"),NK=(0,l.Uk)(" - 全功能、插件驱动的 HTTP 客户端库"),BK={href:"https://github.com/git-time-metric/gtm",target:"_blank",rel:"noopener noreferrer"},QK=(0,l.Uk)("git-time-metric"),JK=(0,l.Uk)(" - 简单、无缝、轻量级的 Git 时间追踪工具"),FK={href:"https://github.com/tidwall/gjson",target:"_blank",rel:"noopener noreferrer"},VK=(0,l.Uk)("GJSON"),XK=(0,l.Uk)(" - 一行代码获取 JSON"),KK={href:"https://github.com/asticode/Go-astitodo",target:"_blank",rel:"noopener noreferrer"},YK=(0,l.Uk)("Go-astitodo"),ZK=(0,l.Uk)(" - 解析你 Go 语言代码中的 TODOs（待办事项）"),$K={href:"https://github.com/wendiGo/Go-bind-plugin",target:"_blank",rel:"noopener noreferrer"},eY=(0,l.Uk)("Go-bind-plugin"),rY=(0,l.Uk)(" - Go:generate 工具，用于构建 Go 语言插件(1.8 only)，并对导出的符号进行包装"),oY={href:"https://github.com/rk/Go-cron",target:"_blank",rel:"noopener noreferrer"},lY=(0,l.Uk)("Go-cron"),tY=(0,l.Uk)(" - 简单的 Go 语言 Cron 库，可以以不同的时间间隔来执行闭包或函数，从一秒到某年某月某日都可以。主要针对的是 Web 应用或者长期运行的守护进程"),nY={href:"https://github.com/tj/Go-debug",target:"_blank",rel:"noopener noreferrer"},aY=(0,l.Uk)("Go-debug"),iY=(0,l.Uk)(" - 条件调试日志，用于 Go 语言库和应用程序"),hY={href:"https://github.com/ungerik/Go-dry",target:"_blank",rel:"noopener noreferrer"},kY=(0,l.Uk)("Go-dry"),_Y=(0,l.Uk)(" - DRY (don't repeat yourself)"),uY={href:"https://github.com/thoas/Go-funk",target:"_blank",rel:"noopener noreferrer"},gY=(0,l.Uk)("Go-funk"),pY=(0,l.Uk)(" - 现代 Go 语言工具库，提供了很多有用的工具 (map, find, contains, filter, chunk, reverse, ...)"),mY={href:"https://github.com/mozillazg/Go-httpheader",target:"_blank",rel:"noopener noreferrer"},sY=(0,l.Uk)("Go-httpheader"),bY=(0,l.Uk)(" - 用于将结构体编码进 http 头的 Go 语言库"),fY={href:"https://github.com/beefsack/Go-rate",target:"_blank",rel:"noopener noreferrer"},cY=(0,l.Uk)("Go-rate"),UY=(0,l.Uk)(" - Go 语言版本的限速器"),GY={href:"https://github.com/nicklaw5/Go-respond",target:"_blank",rel:"noopener noreferrer"},dY=(0,l.Uk)("Go-respond"),WY=(0,l.Uk)(" - 用于处理常见 HTTP JSON 响应的库."),vY={href:"https://github.com/ikeikeikeike/Go-sitemap-generator",target:"_blank",rel:"noopener noreferrer"},wY=(0,l.Uk)("Go-sitemap-generator"),yY=(0,l.Uk)(" - XML 网站地图生成器"),xY={href:"https://github.com/uber/Go-torch",target:"_blank",rel:"noopener noreferrer"},SY=(0,l.Uk)("Go-torch"),PY=(0,l.Uk)(" - 为 Go 语言程序生成火焰图"),TY={href:"https://github.com/sadlil/Go-trigger",target:"_blank",rel:"noopener noreferrer"},AY=(0,l.Uk)("Go-trigger"),zY=(0,l.Uk)(" - Go 语言全局事件触发器，通过 id 和触发器，在程序的任何地方注册事件"),jY={href:"https://github.com/tobyhede/Go-underscore",target:"_blank",rel:"noopener noreferrer"},MY=(0,l.Uk)("Go-underscore"),CY=(0,l.Uk)(" - 一些有用的 Go 语言工具的集合"),LY={href:"https://github.com/carlescere/Goback",target:"_blank",rel:"noopener noreferrer"},RY=(0,l.Uk)("Goback"),IY=(0,l.Uk)(" - 一个 Go 语言的简单的指数补偿包"),qY={href:"https://github.com/VividCortex/Godaemon",target:"_blank",rel:"noopener noreferrer"},HY=(0,l.Uk)("Godaemon"),DY=(0,l.Uk)(" - 用于编写守护进程的工具"),OY={href:"https://github.com/dropbox/Godropbox",target:"_blank",rel:"noopener noreferrer"},EY=(0,l.Uk)("Godropbox"),NY=(0,l.Uk)(" - 用于编写 Go 语言服务／应用的库，来自 Dropbox."),BY={href:"https://github.com/cosiner/Gohper",target:"_blank",rel:"noopener noreferrer"},QY=(0,l.Uk)("Gohper"),JY=(0,l.Uk)(" - 多种能够帮助你进行软件开发的工具和模块"),FY={href:"https://github.com/elgs/Gojq",target:"_blank",rel:"noopener noreferrer"},VY=(0,l.Uk)("Gojq"),XY=(0,l.Uk)(" - 通过 Go 语言进行 JSON 查询"),KY={href:"https://github.com/ChimeraCoder/Gojson",target:"_blank",rel:"noopener noreferrer"},YY=(0,l.Uk)("Gojson"),ZY=(0,l.Uk)(" - 通过 JSON 自动生成 Go 语言结构体"),$Y={href:"https://github.com/msempere/Golarm",target:"_blank",rel:"noopener noreferrer"},eZ=(0,l.Uk)("Golarm"),rZ=(0,l.Uk)(" - 告警（支持系统事件）"),oZ={href:"https://github.com/mlimaloureiro/Golog",target:"_blank",rel:"noopener noreferrer"},lZ=(0,l.Uk)("Golog"),tZ=(0,l.Uk)(" - 简单、轻量级的命令后工具，用于对你的计划任务进行跟踪"),nZ={href:"https://github.com/bndr/Gopencils",target:"_blank",rel:"noopener noreferrer"},aZ=(0,l.Uk)("Gopencils"),iZ=(0,l.Uk)(" - 简单小巧的 Go 语言库，能够很容易的使用各种 REST APIs."),hZ={href:"https://github.com/michiwend/Goplaceholder",target:"_blank",rel:"noopener noreferrer"},kZ=(0,l.Uk)("Goplaceholder"),_Z=(0,l.Uk)(" - 一个小巧的 Go 语言库用于生成占位图片"),uZ={href:"https://github.com/Goreleaser/Goreleaser",target:"_blank",rel:"noopener noreferrer"},gZ=(0,l.Uk)("Goreleaser"),pZ=(0,l.Uk)(" - 尽可能快速的发布 Go 语言二进制文件"),mZ={href:"https://github.com/wgliang/Goreporter",target:"_blank",rel:"noopener noreferrer"},sZ=(0,l.Uk)("Goreporter"),bZ=(0,l.Uk)(" - 进行代码静态分析，单元测试，代码检视并生成代码质量报告的工具"),fZ={href:"https://github.com/franela/Goreq",target:"_blank",rel:"noopener noreferrer"},cZ=(0,l.Uk)("Goreq"),UZ=(0,l.Uk)(" - 简洁的 Go 语言 http 请求库（已弃用）"),GZ={href:"https://github.com/smallnest/Goreq",target:"_blank",rel:"noopener noreferrer"},dZ=(0,l.Uk)("Goreq"),WZ=(0,l.Uk)(" - 更加简化的 http客户端，基于 Gorequest.（已弃用）"),vZ={href:"https://github.com/parnurzeal/Gorequest",target:"_blank",rel:"noopener noreferrer"},wZ=(0,l.Uk)("Gorequest"),yZ=(0,l.Uk)(" - 简化的 http 客户端，具有丰富的特性"),xZ={href:"https://github.com/linxGnu/Goseaweedfs",target:"_blank",rel:"noopener noreferrer"},SZ=(0,l.Uk)("Goseaweedfs"),PZ=(0,l.Uk)(" - conseilSeaweedFS 客户端，几乎具有全部的特性"),TZ={href:"https://github.com/subosito/Gotenv",target:"_blank",rel:"noopener noreferrer"},AZ=(0,l.Uk)("Gotenv"),zZ=(0,l.Uk)(" - 从 "),jZ=(0,l._)("code",null,".env",-1),MZ=(0,l.Uk)(" 或者任何 "),CZ=(0,l._)("code",null,"io.Reader",-1),LZ=(0,l.Uk)("中加载环境变量"),RZ={href:"https://github.com/fterrag/Goxlsxwriter",target:"_blank",rel:"noopener noreferrer"},IZ=(0,l.Uk)("Goxlsxwriter"),qZ=(0,l.Uk)(" - 用于操作 XLSX (Microsoft Excel) 文件的 libxlsxwriter 库的 Go 语言接口"),HZ={href:"https://github.com/levigross/grequests",target:"_blank",rel:"noopener noreferrer"},DZ=(0,l.Uk)("grequests"),OZ=(0,l.Uk)(" - 简单优雅的 "),EZ=(0,l._)("code",null,"net/HTTP",-1),NZ=(0,l.Uk)(" 封装，紧随 Python 的 requests 的步伐 （已弃用）"),BZ={href:"https://github.com/roylee0704/gron",target:"_blank",rel:"noopener noreferrer"},QZ=(0,l.Uk)("gron"),JZ=(0,l.Uk)(" - 使用简单的 Go 语言 API 和 Gron 调度器创建定时任务"),FZ={href:"https://github.com/facebookGo/httpcontrol",target:"_blank",rel:"noopener noreferrer"},VZ=(0,l.Uk)("httpcontrol"),XZ=(0,l.Uk)(" - httpcontrol 包，运行进行 HTTP 传输层超时和重传控制"),KZ={href:"https://github.com/github/hub",target:"_blank",rel:"noopener noreferrer"},YZ=(0,l.Uk)("hub"),ZZ=(0,l.Uk)(" - 封装了 git 命令，提供了额外的功能用于在终端中和 Github 进行交互"),$Z={href:"https://github.com/afex/hystrix-Go",target:"_blank",rel:"noopener noreferrer"},e$=(0,l.Uk)("hystrix-Go"),r$=(0,l.Uk)(" - 实现 Hystrix 风格的、程序员预定义的 fallback 机制（熔断）"),o$={href:"https://github.com/immortal/immortal",target:"_blank",rel:"noopener noreferrer"},l$=(0,l.Uk)("immortal"),t$=(0,l.Uk)(" - *nix 跨平台 (与操作系统无关的)监控程序"),n$={href:"https://github.com/mengzhuo/intrinsic",target:"_blank",rel:"noopener noreferrer"},a$=(0,l.Uk)("intrinsic"),i$=(0,l.Uk)(" - 不需要编写任何汇编代码就能使用 x86 SIMD"),h$={href:"https://github.com/bamzi/jobrunner",target:"_blank",rel:"noopener noreferrer"},k$=(0,l.Uk)("JobRunner"),_$=(0,l.Uk)(" - 智能的、多功能的定时任务调度器，具有任务队列和实时监控功能"),u$={href:"https://github.com/AmuzaTkts/jsonapi-errors",target:"_blank",rel:"noopener noreferrer"},g$=(0,l.Uk)("jsonapi-errors"),p$=(0,l.Uk)(" -  JSON API errors 的 Go 语言接口."),m$={href:"https://github.com/miolini/jsonf",target:"_blank",rel:"noopener noreferrer"},s$=(0,l.Uk)("jsonf"),b$=(0,l.Uk)(" - 控制台工具，用于高亮及 JSON 查询功能"),f$={href:"https://github.com/ricardolonga/jsonGo",target:"_blank",rel:"noopener noreferrer"},c$=(0,l.Uk)("jsonGo"),U$=(0,l.Uk)(" - 用于更加方便的构建 JSON 对象的 API"),G$={href:"https://github.com/RichardKnop/jsonhal",target:"_blank",rel:"noopener noreferrer"},d$=(0,l.Uk)("jsonhal"),W$=(0,l.Uk)(" - 一个简单的 Go 语言软件包，用于将自定义结构体转换为 HAL 兼容的 JSON 响应"),v$={href:"https://github.com/Qntfy/kazaam",target:"_blank",rel:"noopener noreferrer"},w$=(0,l.Uk)("kazaam"),y$=(0,l.Uk)(" - 用于传输任意 JSON 文件的 API"),x$={href:"https://github.com/jaschaephraim/lrserver",target:"_blank",rel:"noopener noreferrer"},S$=(0,l.Uk)("lrserver"),P$=(0,l.Uk)(" - LiveReload 服务器"),T$={href:"https://github.com/minio/mc",target:"_blank",rel:"noopener noreferrer"},A$=(0,l.Uk)("mc"),z$=(0,l.Uk)(" - Minio Client 提供了一组工具，用于操作 Amazon S3 兼容云存储和文件系统"),j$={href:"https://github.com/imdario/merGo",target:"_blank",rel:"noopener noreferrer"},M$=(0,l.Uk)("merGo"),C$=(0,l.Uk)(" - 用于将结构体和map合并进 Go 语言的工具。对于配置默认值，避免杂乱的if语句很有帮助"),L$={href:"https://github.com/tdewolff/minify",target:"_blank",rel:"noopener noreferrer"},R$=(0,l.Uk)("minify"),I$=(0,l.Uk)(" - 快速压缩 HTML, CSS, JS, XML, JSON 以及 SVG 文件格式"),q$={href:"https://github.com/tj/mmake",target:"_blank",rel:"noopener noreferrer"},H$=(0,l.Uk)("mmake"),D$=(0,l.Uk)(" - 现代 Make 工具"),O$={href:"https://github.com/StabbyCutyou/moldova",target:"_blank",rel:"noopener noreferrer"},E$=(0,l.Uk)("moldova"),N$=(0,l.Uk)(" - 基于输入目标生成随机数据的工具"),B$={href:"https://github.com/sanbornm/mp",target:"_blank",rel:"noopener noreferrer"},Q$=(0,l.Uk)("mp"),J$=(0,l.Uk)(" - 简单的命令行邮件解析器，当前支持标准输入并输出JSON."),F$={href:"https://github.com/linxGnu/mssqlx",target:"_blank",rel:"noopener noreferrer"},V$=(0,l.Uk)("mssqlx"),X$=(0,l.Uk)(" - HA 客户端，用于主-从 (或主-主) 数据库，集成了简单的、轻量级的轮询调度负载均衡。基于 sqlx."),K$={href:"https://github.com/VividCortex/multitick",target:"_blank",rel:"noopener noreferrer"},Y$=(0,l.Uk)("multitick"),Z$=(0,l.Uk)(" - 用于 aligned tickers 的多路复用"),$$={href:"https://github.com/e-dard/netbug",target:"_blank",rel:"noopener noreferrer"},e0=(0,l.Uk)("netbug"),r0=(0,l.Uk)(" - 远程对你的服务进行性能分析"),o0={href:"https://github.com/inconshreveable/ngrok",target:"_blank",rel:"noopener noreferrer"},l0=(0,l.Uk)("ngrok"),t0=(0,l.Uk)(" - 创建到 localhost 的隧道"),n0={href:"https://github.com/xta/okrun",target:"_blank",rel:"noopener noreferrer"},a0=(0,l.Uk)("okrun"),i0=(0,l.Uk)(" - 当 Go 文件运行报错时尝试修复并运行"),h0={href:"https://github.com/adelowo/onecache",target:"_blank",rel:"noopener noreferrer"},k0=(0,l.Uk)("onecache"),_0=(0,l.Uk)(" - 支持多种后端存储的缓存库(Redis, Memcached, 文件系统等)"),u0={href:"https://github.com/maruel/panicparse",target:"_blank",rel:"noopener noreferrer"},g0=(0,l.Uk)("panicparse"),p0=(0,l.Uk)(" - 将类似的协程分组并对调用栈进行着色"),m0={href:"https://github.com/peco/peco",target:"_blank",rel:"noopener noreferrer"},s0=(0,l.Uk)("peco"),b0=(0,l.Uk)(" - 简单的交互式过滤工具"),f0={href:"https://github.com/sethgrid/pester",target:"_blank",rel:"noopener noreferrer"},c0=(0,l.Uk)("pester"),U0=(0,l.Uk)(" - Go HTTP 客户端，具有重传，补偿和并发功能"),G0={href:"https://github.com/VividCortex/pm",target:"_blank",rel:"noopener noreferrer"},d0=(0,l.Uk)("pm"),W0=(0,l.Uk)(" - 基于 HTTP API 的进程管理 (i.e. Goroutine)"),v0={href:"https://github.com/pkg/profile",target:"_blank",rel:"noopener noreferrer"},w0=(0,l.Uk)("profile"),y0=(0,l.Uk)(" - 一个简单的性能分析软件包"),x0={href:"https://github.com/zpatrick/rclient",target:"_blank",rel:"noopener noreferrer"},S0=(0,l.Uk)("rclient"),P0=(0,l.Uk)(" - 可读性良好、灵活、易用的 REST APIs 客户端"),T0={href:"https://github.com/tockins/realize",target:"_blank",rel:"noopener noreferrer"},A0=(0,l.Uk)("realize"),z0=(0,l.Uk)(" - Go 语言构建系统，可以监控文件变化并重新加载。运行，构建，监控文件并支持自定义路径"),j0={href:"https://github.com/mozillazg/request",target:"_blank",rel:"noopener noreferrer"},M0=(0,l.Uk)("request"),C0=(0,l.Uk)(" - Go 语言版的 HTTP Requests for Humans™."),L0={href:"https://github.com/abo/rerate",target:"_blank",rel:"noopener noreferrer"},R0=(0,l.Uk)("rerate"),I0=(0,l.Uk)(" - 基于 Redis 的速率计数器和限速器"),q0={href:"https://github.com/ivpusic/rerun",target:"_blank",rel:"noopener noreferrer"},H0=(0,l.Uk)("rerun"),D0=(0,l.Uk)(" - 当源码变化时，重新编译并重新运行 Go 语言编写的 app"),O0={href:"https://github.com/Go-resty/resty",target:"_blank",rel:"noopener noreferrer"},E0=(0,l.Uk)("resty"),N0=(0,l.Uk)(" - 简单的 HTTP 和 REST 客户端，受到 Ruby rest-client 的启发"),B0={href:"https://github.com/kamilsk/retry",target:"_blank",rel:"noopener noreferrer"},Q0=(0,l.Uk)("retry"),J0=(0,l.Uk)(" - 基于上下文的功能机制，反复执行命令直到成功"),F0={href:"https://github.com/VividCortex/robustly",target:"_blank",rel:"noopener noreferrer"},V0=(0,l.Uk)("robustly"),X0=(0,l.Uk)(" - 有弹性的执行函数，遇到错误时捕获并重新运行"),K0={href:"https://github.com/carlescere/scheduler",target:"_blank",rel:"noopener noreferrer"},Y0=(0,l.Uk)("scheduler"),Z0=(0,l.Uk)(" - 从容的进行 Cronjobs 任务调度"),$0={href:"https://github.com/dghubble/sling",target:"_blank",rel:"noopener noreferrer"},e1=(0,l.Uk)("sling"),r1=(0,l.Uk)(" - Go HTTP 请求构造器，用于 API 客户端"),o1={href:"https://github.com/briandowns/spinner",target:"_blank",rel:"noopener noreferrer"},l1=(0,l.Uk)("spinner"),t1=(0,l.Uk)(" - 一个 Go 语言软件包，提供多种选项，方便在终端中创建加载动画"),n1={href:"https://github.com/jmoiron/sqlx",target:"_blank",rel:"noopener noreferrer"},a1=(0,l.Uk)("sqlx"),i1=(0,l.Uk)(" - 为内建的数据库/sql 软件包提供一组扩展"),h1={href:"https://github.com/asdine/storm",target:"_blank",rel:"noopener noreferrer"},k1=(0,l.Uk)("Storm"),_1=(0,l.Uk)(" - 一个用于 BoltDB 的简单又强大的工具"),u1={href:"https://github.com/Go-task/task",target:"_blank",rel:"noopener noreferrer"},g1=(0,l.Uk)("Task"),p1=(0,l.Uk)(' - 简单来讲就是 "Make" 的替代品'),m1={href:"https://github.com/viant/toolbox",target:"_blank",rel:"noopener noreferrer"},s1=(0,l.Uk)("toolbox"),b1=(0,l.Uk)(" - 切片, map, multimap, 结构体, 函数,数据转换工具。服务路由，宏求值和标记器"),f1={href:"https://github.com/alxrm/uGo",target:"_blank",rel:"noopener noreferrer"},c1=(0,l.Uk)("uGo"),U1=(0,l.Uk)(" - uGo 是一个切片工具箱，有着和 Go 语言一致的语法"),G1={href:"https://github.com/esemplastic/unis",target:"_blank",rel:"noopener noreferrer"},d1=(0,l.Uk)("UNIS"),W1=(0,l.Uk)(" - Go 语言字符串处理函数的通用架构"),v1={href:"https://github.com/knq/usql",target:"_blank",rel:"noopener noreferrer"},w1=(0,l.Uk)("usql"),y1=(0,l.Uk)(" - usql 是一个通用的命令行接口，用于操作 sql 数据库"),x1={href:"https://github.com/shomali11/util",target:"_blank",rel:"noopener noreferrer"},S1=(0,l.Uk)("util"),P1=(0,l.Uk)(" - 收集了很多有用的函数"),T1={href:"https://github.com/asciimoo/wuzz",target:"_blank",rel:"noopener noreferrer"},A1=(0,l.Uk)("wuzz"),z1=(0,l.Uk)(" - 交互式命令行程序，用于进行 HTTP 检查"),j1={href:"https://github.com/monmohan/xferspdy",target:"_blank",rel:"noopener noreferrer"},M1=(0,l.Uk)("xferspdy"),C1=(0,l.Uk)(" - Xferspdy 提供了二进制对比功能以及 Go 语言补丁库"),L1={href:"https://github.com/tealeg/xlsx",target:"_blank",rel:"noopener noreferrer"},R1=(0,l.Uk)("xlsx"),I1=(0,l.Uk)(" - 简化了在 Go 语言程序中读取 xml 格式文件的操作"),q1=(0,l._)("h2",{id:"验证",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#验证","aria-hidden":"true"},"#"),(0,l.Uk)(" 验证")],-1),H1=(0,l._)("p",null,[(0,l._)("em",null,"用于验证的库")],-1),D1={href:"https://github.com/asaskevich/Govalidator",target:"_blank",rel:"noopener noreferrer"},O1=(0,l.Uk)("Govalidator"),E1=(0,l.Uk)(" - 数据验证及清晰工具，用于字符串，数字， 数组切片及结构体"),N1={href:"https://github.com/Go-ozzo/ozzo-validation",target:"_blank",rel:"noopener noreferrer"},B1=(0,l.Uk)("ozzo-validation"),Q1=(0,l.Uk)(" - 支持多种数据类型的验证 (结构体，字符串，键值对，数组切片等等)，具有可配置、可扩展的验证规则——使用常用代码结构定义，而非结构体标签"),J1={href:"https://github.com/markbates/validate",target:"_blank",rel:"noopener noreferrer"},F1=(0,l.Uk)("validate"),V1=(0,l.Uk)(" - 提供了一个用于为 Go 语言英语程序编写验证工具的框架"),X1={href:"https://github.com/Go-playground/validator",target:"_blank",rel:"noopener noreferrer"},K1=(0,l.Uk)("validator"),Y1=(0,l.Uk)(" - Go 结构体及域验证，包括：跨域、跨结构体, Map, 切片和数组"),Z1=(0,l._)("h2",{id:"版本控制",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#版本控制","aria-hidden":"true"},"#"),(0,l.Uk)(" 版本控制")],-1),$1=(0,l._)("p",null,[(0,l._)("em",null,"用于版本控制的库")],-1),e2={href:"https://github.com/rjeczalik/gh",target:"_blank",rel:"noopener noreferrer"},r2=(0,l.Uk)("gh"),o2=(0,l.Uk)(" - 用于 GitHub Webhooks 的可编程服务器以及 net/HTTP 中间件"),l2={href:"https://github.com/libgit2/git2Go",target:"_blank",rel:"noopener noreferrer"},t2=(0,l.Uk)("git2Go"),n2=(0,l.Uk)(" - libgit2 的 Go 语言接口"),a2={href:"https://github.com/sourcegraph/Go-vcs",target:"_blank",rel:"noopener noreferrer"},i2=(0,l.Uk)("Go-vcs"),h2=(0,l.Uk)(" - 通过 Go 语言来操作和检视 VCS 代码仓库"),k2={href:"https://github.com/beyang/hGo",target:"_blank",rel:"noopener noreferrer"},_2=(0,l.Uk)("hGo"),u2=(0,l.Uk)(" - HGo 是一个 Go 语言软件包集合，提供了对本地 Mercurial 仓库的读取能力."),g2=(0,l._)("h2",{id:"视频",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#视频","aria-hidden":"true"},"#"),(0,l.Uk)(" 视频")],-1),p2=(0,l._)("p",null,[(0,l._)("em",null,"用于操作视频的库")],-1),m2={href:"https://github.com/3d0c/gmf",target:"_blank",rel:"noopener noreferrer"},s2=(0,l.Uk)("gmf"),b2=(0,l.Uk)(" - FFmpeg av* 库的 Go 语言接口."),f2={href:"https://github.com/asticode/Go-astisub",target:"_blank",rel:"noopener noreferrer"},c2=(0,l.Uk)("Go-astisub"),U2=(0,l.Uk)(" - 使用 Go 语言操作字幕(.srt, .stl, .ttml, .webvtt, .ssa/.ass, teletext, .smi, etc.)."),G2={href:"https://github.com/giorgisio/Goav",target:"_blank",rel:"noopener noreferrer"},d2=(0,l.Uk)("Goav"),W2=(0,l.Uk)(" - 易用的 FFmpeg Go 语言接口"),v2={href:"https://github.com/ziutek/gst",target:"_blank",rel:"noopener noreferrer"},w2=(0,l.Uk)("gst"),y2=(0,l.Uk)(" - GStreamer 的 Go 语言接口"),x2={href:"https://github.com/korandiz/v4l",target:"_blank",rel:"noopener noreferrer"},S2=(0,l.Uk)("v4l"),P2=(0,l.Uk)(" - Linux 下使用的视频截图库，Go 语言编写"),T2=(0,l._)("h2",{id:"web-框架",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#web-框架","aria-hidden":"true"},"#"),(0,l.Uk)(" Web 框架")],-1),A2=(0,l._)("p",null,[(0,l._)("em",null,"全栈 web 框架")],-1),z2={href:"https://aahframework.org",target:"_blank",rel:"noopener noreferrer"},j2=(0,l.Uk)("aah"),M2=(0,l.Uk)(" - 可扩展、高性能、快速发布的 Go 语言 web 框架"),C2={href:"https://github.com/sheng/air",target:"_blank",rel:"noopener noreferrer"},L2=(0,l.Uk)("Air"),R2=(0,l.Uk)(" - 理想的 RESTful web 框架"),I2={href:"https://github.com/astaxie/beeGo",target:"_blank",rel:"noopener noreferrer"},q2=(0,l.Uk)("BeeGo"),H2=(0,l.Uk)(" - beeGo 是一个开源的、高性能的 Go 语言 web 框架"),D2={href:"http://Gobuffalo.io",target:"_blank",rel:"noopener noreferrer"},O2=(0,l.Uk)("Buffalo"),E2=(0,l.Uk)(" - 为 Go 语言带来堪比 Rails 的高生产效率"),N2={href:"https://github.com/labstack/echo",target:"_blank",rel:"noopener noreferrer"},B2=(0,l.Uk)("Echo"),Q2=(0,l.Uk)(" - 高性能、极简的 Go 语言 web 框架"),J2={href:"https://github.com/zpatrick/fireball",target:"_blank",rel:"noopener noreferrer"},F2=(0,l.Uk)("Fireball"),V2=(0,l.Uk)(" - 感觉更加自然的 web 框架"),X2={href:"https://github.com/jabong/florest-core",target:"_blank",rel:"noopener noreferrer"},K2=(0,l.Uk)("Florest"),Y2=(0,l.Uk)(" - 高性能的、基于工作流的 REST API 框架"),Z2={href:"https://github.com/Go-gem/gem",target:"_blank",rel:"noopener noreferrer"},$2=(0,l.Uk)("Gem"),e3=(0,l.Uk)(" - 简单快速的 web 框架，对 REST API 很友好"),r3={href:"https://github.com/gin-Gonic/gin",target:"_blank",rel:"noopener noreferrer"},o3=(0,l.Uk)("Gin"),l3=(0,l.Uk)(" - Gin 是一个 Go 语言编写的 web 框架！提供了一组类似 martini 的 API ，具有更好的性能（40倍）。如果你需要高性能和高生产率，这个框架很适合你"),t3={href:"https://github.com/NYTimes/gizmo",target:"_blank",rel:"noopener noreferrer"},n3=(0,l.Uk)("Gizmo"),a3=(0,l.Uk)(" - 纽约时报正在使用对微服务工具集"),i3={href:"https://github.com/ant0ine/Go-json-rest",target:"_blank",rel:"noopener noreferrer"},h3=(0,l.Uk)("Go-json-rest"),k3=(0,l.Uk)(" - 快速、简单的创建 RESTful JSON API."),_3={href:"https://github.com/codehack/Go-relax",target:"_blank",rel:"noopener noreferrer"},u3=(0,l.Uk)("Go-relax"),g3=(0,l.Uk)(" - 具有可插拔组建的框架，用于构建 RESTful API's."),p3={href:"https://github.com/ungerik/Go-rest",target:"_blank",rel:"noopener noreferrer"},m3=(0,l.Uk)("Go-rest"),s3=(0,l.Uk)(" - Go 语言 REST 框架中的小恶魔"),b3={href:"https://github.com/raphael/Goa",target:"_blank",rel:"noopener noreferrer"},f3=(0,l.Uk)("Goa"),c3=(0,l.Uk)(" - 用于开发微服务的框架，基于 Ruby 的 Praxis 的设计"),U3={href:"https://github.com/dinever/Golf",target:"_blank",rel:"noopener noreferrer"},G3=(0,l.Uk)("Golf"),d3=(0,l.Uk)(" - Golf 是一个快速、简单、轻量级的 Go 语言微型 web 框架。具有强大的功能且没有标准库以外的依赖"),W3={href:"https://github.com/rainycape/Gondola",target:"_blank",rel:"noopener noreferrer"},v3=(0,l.Uk)("Gondola"),w3=(0,l.Uk)(" - 用于快速编写高性能网站的框架"),y3={href:"https://github.com/mustafaakin/Gongular",target:"_blank",rel:"noopener noreferrer"},x3=(0,l.Uk)("Gongular"),S3=(0,l.Uk)(" - 快速 Go web 框架，支持输入映射／验证以及依赖注入"),P3={href:"https://github.com/Go-macaron/macaron",target:"_blank",rel:"noopener noreferrer"},T3=(0,l.Uk)("Macaron"),A3=(0,l.Uk)(" - Macaron 是一个高效的模块化设计的web框架"),z3={href:"https://github.com/paulbellamy/manGo",target:"_blank",rel:"noopener noreferrer"},j3=(0,l.Uk)("manGo"),M3=(0,l.Uk)(" - ManGo 是一个模块化 web 应用框架，受到 Rack 和 PEP333 的启发"),C3={href:"https://github.com/clayGod/microservice",target:"_blank",rel:"noopener noreferrer"},L3=(0,l.Uk)("Microservice"),R3=(0,l.Uk)(" - 用于创建微服务的框架，使用 Go 语言编写"),I3={href:"https://github.com/ivpusic/neo",target:"_blank",rel:"noopener noreferrer"},q3=(0,l.Uk)("neo"),H3=(0,l.Uk)(" - 是一个极小且快速的 Go 语言 web 框架，具有及其简单的 API"),D3={href:"https://github.com/resoursea/api",target:"_blank",rel:"noopener noreferrer"},O3=(0,l.Uk)("Resoursea"),E3=(0,l.Uk)(" - 用于快速编写基于资源对服务的 REST 框架"),N3={href:"http://rest-layer.io",target:"_blank",rel:"noopener noreferrer"},B3=(0,l.Uk)("REST Layer"),Q3=(0,l.Uk)(" - 用于构建在数据库之上构建 REST/GraphQL API 且大多数配置都可以通过代码完成"),J3={href:"https://github.com/revel/revel",target:"_blank",rel:"noopener noreferrer"},F3=(0,l.Uk)("Revel"),V3=(0,l.Uk)(" - go语言高生产率框架"),X3={href:"https://github.com/Goanywhere/rex",target:"_blank",rel:"noopener noreferrer"},K3=(0,l.Uk)("rex"),Y3=(0,l.Uk)(" - Rex 是一个用于进行模块化开发的库，基于Gorilla/mux 完全兼容大多数的 "),Z3=(0,l._)("code",null,"net/HTTP",-1),$3=(0,l.Uk)("."),e4={href:"https://github.com/jaybill/sawsij",target:"_blank",rel:"noopener noreferrer"},r4=(0,l.Uk)("sawsij"),o4=(0,l.Uk)(" - 轻量级、开源的 web 框架，用于构建高性能、数据驱动的web应用"),l4={href:"https://github.com/lunny/tanGo",target:"_blank",rel:"noopener noreferrer"},t4=(0,l.Uk)("tanGo"),n4=(0,l.Uk)(" - 微型的、支持插件的 web 框架"),a4={href:"https://github.com/rcrowley/Go-tigertonic",target:"_blank",rel:"noopener noreferrer"},i4=(0,l.Uk)("tigertonic"),h4=(0,l.Uk)(" - 用于构建 JSON web 服务的 Go 语言框架，受到 Dropwizard 的启发"),k4={href:"https://github.com/pilu/traffic",target:"_blank",rel:"noopener noreferrer"},_4=(0,l.Uk)("traffic"),u4=(0,l.Uk)(" - 受到 Sinatra 启发的 Go 语言 web 框架"),g4={href:"https://github.com/gernest/utron",target:"_blank",rel:"noopener noreferrer"},p4=(0,l.Uk)("utron"),m4=(0,l.Uk)(" - 轻量级的go语言 MVC 框架"),s4={href:"https://github.com/nbari/violetear",target:"_blank",rel:"noopener noreferrer"},b4=(0,l.Uk)("violetear"),f4=(0,l.Uk)(" - Go HTTP 路由库"),c4={href:"https://github.com/yarf-framework/yarf",target:"_blank",rel:"noopener noreferrer"},U4=(0,l.Uk)("YARF"),G4=(0,l.Uk)(" - 快速的微型框架，用于快速、简单地构建 REST APIs 以及 web 服务"),d4={href:"https://github.com/cosiner/zerver",target:"_blank",rel:"noopener noreferrer"},W4=(0,l.Uk)("Zerver"),v4=(0,l.Uk)(" - Zerver 是一个富有表达力的、模块化的、全功能的 RESTful 框架."),w4=(0,l._)("h2",{id:"windows",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#windows","aria-hidden":"true"},"#"),(0,l.Uk)(" Windows")],-1),y4={href:"https://github.com/Gonutz/d3d9",target:"_blank",rel:"noopener noreferrer"},x4=(0,l.Uk)("d3d9"),S4=(0,l.Uk)(" - Direct3D9 的 Go 语言接口"),P4={href:"https://github.com/Go-ole/Go-ole",target:"_blank",rel:"noopener noreferrer"},T4=(0,l.Uk)("Go-ole"),A4=(0,l.Uk)(" - 为 Go 语言实现的 Win32 OLE"),z4=(0,l._)("h2",{id:"xml",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#xml","aria-hidden":"true"},"#"),(0,l.Uk)(" XML")],-1),j4=(0,l._)("p",null,[(0,l._)("em",null,"Libraries and tools for manipulating XML.")],-1),M4={href:"https://github.com/jteeuwen/Go-pkg-xmlx",target:"_blank",rel:"noopener noreferrer"},C4=(0,l.Uk)("Go-pkg-xmlx"),L4=(0,l.Uk)(" - 对 Go 语言 XML 标准库的扩展。维护来一个节点树，允许前进和后退浏览以及一些简单的单／多节点搜索函数"),R4={href:"https://github.com/xml-comp/xml-comp",target:"_blank",rel:"noopener noreferrer"},I4=(0,l.Uk)("XML-Comp"),q4=(0,l.Uk)(" - 简单的命令行 XML 比较工具，可以生成关于目录、文件和标签对差异信息"),H4={href:"https://github.com/shabbyrobe/xmlwriter",target:"_blank",rel:"noopener noreferrer"},D4=(0,l.Uk)("xmlwriter"),O4=(0,l.Uk)(" - Procedural XML 生成 API 基于 libxml2 的 xmlwriter 模块."),E4={href:"https://github.com/antchfx/xpath",target:"_blank",rel:"noopener noreferrer"},N4=(0,l.Uk)("xpath"),B4=(0,l.Uk)(" - XPath 库"),Q4={href:"https://github.com/antchfx/xquery",target:"_blank",rel:"noopener noreferrer"},J4=(0,l.Uk)("xquery"),F4=(0,l.Uk)(" - XQuery 使你可以从 HTML/XML文档中抽取数据和求值，使用 XPath 表达式"),V4=(0,l._)("h3",{id:"中间件",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#中间件","aria-hidden":"true"},"#"),(0,l.Uk)(" 中间件")],-1),X4=(0,l._)("h4",{id:"中间件-1",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#中间件-1","aria-hidden":"true"},"#"),(0,l.Uk)(" 中间件")],-1),K4={href:"https://github.com/rs/cors",target:"_blank",rel:"noopener noreferrer"},Y4=(0,l.Uk)("CORS"),Z4=(0,l.Uk)(" - 非常方便地向你的 api 中添加 CORS 功能"),$4={href:"https://github.com/rs/formjson",target:"_blank",rel:"noopener noreferrer"},e5=(0,l.Uk)("formjson"),r5=(0,l.Uk)(" - 将 JSON 输入看作说一个标准的表单 POST 来处理"),o5={href:"https://github.com/ulule/limiter",target:"_blank",rel:"noopener noreferrer"},l5=(0,l.Uk)("Limiter"),t5=(0,l.Uk)(" - 超级简单的限速中间件"),n5={href:"https://github.com/didip/tollbooth",target:"_blank",rel:"noopener noreferrer"},a5=(0,l.Uk)("Tollbooth"),i5=(0,l.Uk)(" - HTTP 请求限速中间件"),h5={href:"https://github.com/sebest/xff",target:"_blank",rel:"noopener noreferrer"},k5=(0,l.Uk)("XFF"),_5=(0,l.Uk)(" - 处理 "),u5=(0,l._)("code",null,"X-Forwarded-For",-1),g5=(0,l.Uk)(" 头的中间件"),p5=(0,l._)("h4",{id:"用于创建-http-中间件的库",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#用于创建-http-中间件的库","aria-hidden":"true"},"#"),(0,l.Uk)(" 用于创建 HTTP 中间件的库")],-1),m5={href:"https://github.com/justinas/alice",target:"_blank",rel:"noopener noreferrer"},s5=(0,l.Uk)("alice"),b5=(0,l.Uk)(" - 用于连接中间件的库，简单无痛苦"),f5={href:"https://github.com/codemodus/catena",target:"_blank",rel:"noopener noreferrer"},c5=(0,l.Uk)("catena"),U5=(0,l.Uk)(" - HTTP.Handler wrapper catenation (和chain具有相同的 API )."),G5={href:"https://github.com/codemodus/chain",target:"_blank",rel:"noopener noreferrer"},d5=(0,l.Uk)("chain"),W5=(0,l.Uk)(' - Handler wrapper chaining with scoped data (net/context-based "middleware").'),v5={href:"https://github.com/Go-on/wrap",target:"_blank",rel:"noopener noreferrer"},w5=(0,l.Uk)("Go-wrap"),y5=(0,l.Uk)(" - 小型中间件库，用于net/HTTP."),x5={href:"https://github.com/alioygur/Gores",target:"_blank",rel:"noopener noreferrer"},S5=(0,l.Uk)("Gores"),P5=(0,l.Uk)(" - 用于处理 HTML, JSON, XML 等。对于 RESTful APIs 很有用。"),T5={href:"https://github.com/carbocation/interpose",target:"_blank",rel:"noopener noreferrer"},A5=(0,l.Uk)("interpose"),z5=(0,l.Uk)(" - 极简的 net/HTTP 中间件"),j5={href:"https://github.com/stephens2424/muxchain",target:"_blank",rel:"noopener noreferrer"},M5=(0,l.Uk)("muxchain"),C5=(0,l.Uk)(" - 用于net/HTTP的轻量级中间件"),L5={href:"https://github.com/urfave/negroni",target:"_blank",rel:"noopener noreferrer"},R5=(0,l.Uk)("negroni"),I5=(0,l.Uk)(" - 符合语言习惯的 HTTP 中间件库"),q5={href:"https://github.com/unrolled/render",target:"_blank",rel:"noopener noreferrer"},H5=(0,l.Uk)("render"),D5=(0,l.Uk)(" - 用于轻松渲染 JSON, XML, 及 HTML 模板响应的库"),O5={href:"https://github.com/InVisionApp/rye",target:"_blank",rel:"noopener noreferrer"},E5=(0,l.Uk)("rye"),N5=(0,l.Uk)(" - 小型 Go 语言中间件库 ，支持 JWT, CORS, Statsd, 及 Go 1.7 context"),B5={href:"https://github.com/thoas/stats",target:"_blank",rel:"noopener noreferrer"},Q5=(0,l.Uk)("stats"),J5=(0,l.Uk)(" - Go 语言中间件，用于存储web应用的多种信息"),F5={href:"https://github.com/volatile/core",target:"_blank",rel:"noopener noreferrer"},V5=(0,l.Uk)("Volatile"),X5=(0,l.Uk)(" - 极简的go语言中间件技术栈，强调灵活性、优秀实践及简洁代码"),K5=(0,l._)("h3",{id:"路由",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#路由","aria-hidden":"true"},"#"),(0,l.Uk)(" 路由")],-1),Y5={href:"https://github.com/gernest/alien",target:"_blank",rel:"noopener noreferrer"},Z5=(0,l.Uk)("alien"),$5=(0,l.Uk)(" - 轻量级、超快速的 HTTP 路由，来自外星科技"),e9={href:"https://github.com/Go-zoo/bone",target:"_blank",rel:"noopener noreferrer"},r9=(0,l.Uk)("Bone"),o9=(0,l.Uk)(" - 轻量级快速 Fast HTTP Multiplexer."),l9={href:"https://github.com/clayGod/Bxog",target:"_blank",rel:"noopener noreferrer"},t9=(0,l.Uk)("Bxog"),n9=(0,l.Uk)(" - 为go语言编写的简单快速点 HTTP 路由。能够配合多种不同复杂度、长度和嵌套的路由工作。同时它能够根据接收到的参数创建 URL"),a9={href:"https://github.com/Go-chi/chi",target:"_blank",rel:"noopener noreferrer"},i9=(0,l.Uk)("chi"),h9=(0,l.Uk)(" - 小巧、快速、具有丰富表达力的 HTTP 路由，基于net/context."),k9={href:"https://github.com/buaazp/fasthttprouter",target:"_blank",rel:"noopener noreferrer"},_9=(0,l.Uk)("fasthttprouter"),u9=(0,l.Uk)(" - 从"),g9=(0,l._)("code",null,"httprouter",-1),p9=(0,l.Uk)(" fork出来的高性能路由，是第一个适配 "),m9=(0,l._)("code",null,"fasthttp",-1),s9=(0,l.Uk)("的路由"),b9={href:"https://github.com/Gocraft/web",target:"_blank",rel:"noopener noreferrer"},f9=(0,l.Uk)("Gocraft/web"),c9=(0,l.Uk)(" - Mux 及中间件包"),U9={href:"https://github.com/Goji/Goji",target:"_blank",rel:"noopener noreferrer"},G9=(0,l.Uk)("Goji"),d9=(0,l.Uk)(" - Goji 是一个极简的、灵活的HTTP 请求数据分选器，支持 "),W9=(0,l._)("code",null,"net/context",-1),v9=(0,l.Uk)("."),w9={href:"https://github.com/vardius/Gorouter",target:"_blank",rel:"noopener noreferrer"},y9=(0,l.Uk)("GoRouter"),x9=(0,l.Uk)(" - GoRouter 是一个服务器/API 微型框架、HTTP 请求路由 router, 数据分选器，提供了支持"),S9=(0,l._)("code",null,"net/context",-1),P9=(0,l.Uk)("的中间件"),T9={href:"https://github.com/Gowww/router",target:"_blank",rel:"noopener noreferrer"},A9=(0,l.Uk)("Gowww/router"),z9=(0,l.Uk)(" - 超快的HTTP 路由，完全兼容 net/HTTP.Handler 接口."),j9={href:"https://github.com/julienschmidt/httprouter",target:"_blank",rel:"noopener noreferrer"},M9=(0,l.Uk)("httprouter"),C9=(0,l.Uk)(" - 高性能路由。使用这个库和标准http处理工具可以构建一个非常高性能大web框架"),L9={href:"https://github.com/dimfeld/httptreemux",target:"_blank",rel:"noopener noreferrer"},R9=(0,l.Uk)("httptreemux"),I9=(0,l.Uk)(" - 高速，灵活，基于树的 HTTP 路由。受到了 httprouter 的启发"),q9={href:"https://github.com/Go-playground/lars",target:"_blank",rel:"noopener noreferrer"},H9=(0,l.Uk)("lars"),D9=(0,l.Uk)(" - 树一个轻量级、快速、可扩展、零分配的HTTP路由，用于创建定制化的框架"),O9={href:"https://github.com/imdario/medeina",target:"_blank",rel:"noopener noreferrer"},E9=(0,l.Uk)("medeina"),N9=(0,l.Uk)(" - Medeina是一个HTTP路由树，基于 HttpRouter 。基于 Roda 和 Cuba."),B9={href:"https://github.com/Gorilla/mux",target:"_blank",rel:"noopener noreferrer"},Q9=(0,l.Uk)("mux"),J9=(0,l.Uk)(" - 强大的 URL 路由和分发库"),F9={href:"https://github.com/Go-ozzo/ozzo-routing",target:"_blank",rel:"noopener noreferrer"},V9=(0,l.Uk)("ozzo-routing"),X9=(0,l.Uk)(" - 一个极快的go语言http路由，支持正则路由匹配。完全支持创建 RESTful APIs."),K9={href:"https://github.com/bmizerany/pat",target:"_blank",rel:"noopener noreferrer"},Y9=(0,l.Uk)("pat"),Z9=(0,l.Uk)(" - Sinatra 风格的模式 muxer ，用于go语言 net/http库，由 Sinatra的作者编写。"),$9={href:"https://github.com/Go-playground/pure",target:"_blank",rel:"noopener noreferrer"},e7=(0,l.Uk)("pure"),r7=(0,l.Uk)(' - 是一个轻量级http路由，严格符合标准"net/HTTP"实现'),o7={href:"https://github.com/VividCortex/siesta",target:"_blank",rel:"noopener noreferrer"},l7=(0,l.Uk)("Siesta"),t7=(0,l.Uk)(" - 具有可组合性的框架，用于编写中间件和 handlers"),n7={href:"https://github.com/husobee/vestiGo",target:"_blank",rel:"noopener noreferrer"},a7=(0,l.Uk)("vestiGo"),i7=(0,l.Uk)(" - 高性能、独立的、符合 HTTP 标准的 URL 路由，用于构建go语言web应用"),h7={href:"https://github.com/rs/xmux",target:"_blank",rel:"noopener noreferrer"},k7=(0,l.Uk)("xmux"),_7=(0,l.Uk)(" - 高性能 muxer，基于 "),u7=(0,l._)("code",null,"httprouter",-1),g7=(0,l.Uk)(" ，支持 "),p7=(0,l._)("code",null,"net/context",-1),m7={href:"https://github.com/daryl/zeus",target:"_blank",rel:"noopener noreferrer"},s7=(0,l.Uk)("zeus"),b7=(0,l.Uk)(" - 非常简单快速的http路由"),f7=(0,l._)("h1",{id:"工具",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#工具","aria-hidden":"true"},"#"),(0,l.Uk)(" 工具")],-1),c7=(0,l._)("p",null,[(0,l._)("em",null,"Go语言软件及插件")],-1),U7=(0,l._)("h2",{id:"代码分析",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#代码分析","aria-hidden":"true"},"#"),(0,l.Uk)(" 代码分析")],-1),G7={href:"https://github.com/bradleyfalzon/apicompat",target:"_blank",rel:"noopener noreferrer"},d7=(0,l.Uk)("apicompat"),W7=(0,l.Uk)(" - 检测一个go语言项目最近的变化，用于监测不能向后兼容的改动"),v7={href:"https://github.com/mibk/dupl",target:"_blank",rel:"noopener noreferrer"},w7=(0,l.Uk)("dupl"),y7=(0,l.Uk)(" - 用于检测重复代码的工具"),x7={href:"https://github.com/kisielk/errcheck",target:"_blank",rel:"noopener noreferrer"},S7=(0,l.Uk)("errcheck"),P7=(0,l.Uk)(" - Errcheck 是一个用于检测go语言程序中未处理错误的程序"),T7={href:"https://github.com/davecheney/gcvis",target:"_blank",rel:"noopener noreferrer"},A7=(0,l.Uk)("gcvis"),z7=(0,l.Uk)(" - 实时地将 Go 语言垃圾回收进行可视化"),j7={href:"https://github.com/alecthomas/Gometalinter",target:"_blank",rel:"noopener noreferrer"},M7=(0,l.Uk)("Go Metalinter"),C7=(0,l.Uk)(" - Metalinter 会自动应用全部的静态分析工具，并生成形式一致的分析报告"),L7={href:"https://github.com/qiniu/checkstyle",target:"_blank",rel:"noopener noreferrer"},R7=(0,l.Uk)("Go-checkstyle"),I7=(0,l.Uk)(" checkstyle是一个代码风格检查工具，类似 java checkstyle 。这个工具就是受到 java checkstyle 和 Golint 的启发"),q7={href:"https://github.com/roblaszczak/Go-cleanarch",target:"_blank",rel:"noopener noreferrer"},H7=(0,l.Uk)("Go-cleanarch"),D7=(0,l.Uk)(" - Go-cleanarch 用于检查代码是否符合简洁架构的相关法则，比如依赖法则以及你的Go语言项目中各个库的交互情况"),O7={href:"https://github.com/firstrow/Go-outdated",target:"_blank",rel:"noopener noreferrer"},E7=(0,l.Uk)("Go-outdated"),N7=(0,l.Uk)(" - 这是一个命令行程序，用于显示过时的库"),B7={href:"https://github.com/yuroyoro/Goast-viewer",target:"_blank",rel:"noopener noreferrer"},Q7=(0,l.Uk)("Goast-viewer"),J7=(0,l.Uk)(" - 基于 Web 的 Golang AST 可视化工具."),F7={href:"http://Gocover.io/",target:"_blank",rel:"noopener noreferrer"},V7=(0,l.Uk)("GoCover.io"),X7=(0,l.Uk)(" - GoCover.io 可以查看任何go语言软件包的代码覆盖率"),K7={href:"https://Godoc.org/Golang.org/x/tools/cmd/Goimports",target:"_blank",rel:"noopener noreferrer"},Y7=(0,l.Uk)("Goimports"),Z7=(0,l.Uk)(" - 用于自动修复，添加，删除你的 Go 语言项目的 import"),$7={href:"https://github.com/Golang/lint",target:"_blank",rel:"noopener noreferrer"},e8=(0,l.Uk)("GoLint"),r8=(0,l.Uk)(" - Golint 是一个针对 Go 语言源码的 lint 工具"),o8={href:"http://Go-lint.appspot.com/",target:"_blank",rel:"noopener noreferrer"},l8=(0,l.Uk)("Golint online"),t8=(0,l.Uk)(" - 使用golint对GitHub, Bitbucket 以及 Google Project Hosting上面的 Go 语言源文件进行静态分析"),n8={href:"https://sourcegraph.com/github.com/sqs/Goreturns",target:"_blank",rel:"noopener noreferrer"},a8=(0,l.Uk)("Goreturns"),i8=(0,l.Uk)(" - 添加零值 return 语句以符合函数返回值类型"),h8={href:"https://github.com/dominikh/Go-tools/tree/master/cmd/Gosimple",target:"_blank",rel:"noopener noreferrer"},k8=(0,l.Uk)("Gosimple"),_8=(0,l.Uk)(" - Gosimple 是一个针对 Go 语言的lint工具，专注于简化代码"),u8={href:"https://github.com/shurcooL/Gostatus",target:"_blank",rel:"noopener noreferrer"},g8=(0,l.Uk)("Gostatus"),p8=(0,l.Uk)(" - 命令行工具，查看当前 Go 语言软件包仓库的状态"),m8={href:"https://github.com/mvdan/interfacer",target:"_blank",rel:"noopener noreferrer"},s8=(0,l.Uk)("interfacer"),b8=(0,l.Uk)(" - 可以提供接口类型建议的 Lint 工具"),f8={href:"https://github.com/surullabs/lint",target:"_blank",rel:"noopener noreferrer"},c8=(0,l.Uk)("lint"),U8=(0,l.Uk)(" - 将lint作为go语言测试的一部分来执行"),G8={href:"https://github.com/dominikh/Go-tools/tree/master/cmd/staticcheck",target:"_blank",rel:"noopener noreferrer"},d8=(0,l.Uk)("staticcheck"),W8=(0,l.Uk)(" - staticcheck is "),v8=(0,l._)("code",null,"Go vet",-1),w8=(0,l.Uk)(" on steroids, applying a ton of static analysis checks you might be used to from tools like ReSharper for C#."),y8={href:"https://github.com/mdempsky/unconvert",target:"_blank",rel:"noopener noreferrer"},x8=(0,l.Uk)("unconvert"),S8=(0,l.Uk)(" - 从go语言代码中移除不必要的类型转换"),P8={href:"https://github.com/dominikh/Go-tools/tree/master/cmd/unused",target:"_blank",rel:"noopener noreferrer"},T8=(0,l.Uk)("unused"),A8=(0,l.Uk)(" - unused 会检查 Go 语言代码中没有用到的常量，变量，函数和类型"),z8={href:"https://github.com/mccoyst/validate",target:"_blank",rel:"noopener noreferrer"},j8=(0,l.Uk)("validate"),M8=(0,l.Uk)(" - 自动验证结构体类型"),C8=(0,l._)("h2",{id:"编辑器插件",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#编辑器插件","aria-hidden":"true"},"#"),(0,l.Uk)(" 编辑器插件")],-1),L8={href:"https://plugins.jetbrains.com/plugin/9568-Go",target:"_blank",rel:"noopener noreferrer"},R8=(0,l.Uk)("Go plugin for JetBrains IDEs"),I8=(0,l.Uk)(" - JetBrains IDEs 使用的 Go 语言插件"),q8={href:"https://github.com/Go-lang-plugin-org/Go-lang-idea-plugin",target:"_blank",rel:"noopener noreferrer"},H8=(0,l.Uk)("Go-lang-idea-plugin"),D8=(0,l.Uk)(" (废弃) - IntelliJ (JetBrains) IDEA 之前使用的插件，现在已经被上面的官方插件所取代"),O8={href:"https://github.com/dominikh/Go-mode.el",target:"_blank",rel:"noopener noreferrer"},E8=(0,l.Uk)("Go-mode"),N8=(0,l.Uk)(" - GNU/Emacs的 Go 语言模式"),B8={href:"https://github.com/joefitzgerald/Go-plus",target:"_blank",rel:"noopener noreferrer"},Q8=(0,l.Uk)("Go-plus"),J8=(0,l.Uk)(" - 供Atom 使用的自动补全、格式化、语法检查、lint 及 Vetting 的软件包"),F8={href:"https://github.com/GoClipse/Goclipse",target:"_blank",rel:"noopener noreferrer"},V8=(0,l.Uk)("Goclipse"),X8=(0,l.Uk)(" - Eclipse 的 Go 语言插件"),K8={href:"https://github.com/nsf/Gocode",target:"_blank",rel:"noopener noreferrer"},Y8=(0,l.Uk)("Gocode"),Z8=(0,l.Uk)(" - go语言自动补全"),$8={href:"https://github.com/DisposaBoy/GoSublime",target:"_blank",rel:"noopener noreferrer"},e6=(0,l.Uk)("GoSublime"),r6=(0,l.Uk)(" - SublimeText 2 使用的 Go 语言插件，支持代码补全以及一些类似 IDE 的特性"),o6={href:"https://github.com/velour/velour",target:"_blank",rel:"noopener noreferrer"},l6=(0,l.Uk)("velour"),t6=(0,l.Uk)(" - acme 编辑器使用的 IRC 客户端"),n6={href:"https://github.com/rjohnsondev/vim-compiler-Go",target:"_blank",rel:"noopener noreferrer"},a6=(0,l.Uk)("vim-compiler-Go"),i6=(0,l.Uk)(" - Vim插件，在保存时高亮语法错误"),h6={href:"https://github.com/fatih/vim-Go",target:"_blank",rel:"noopener noreferrer"},k6=(0,l.Uk)("vim-Go"),_6=(0,l.Uk)(" - Vim 使用的 Go 语言开发插件"),u6={href:"https://github.com/Microsoft/vscode-Go",target:"_blank",rel:"noopener noreferrer"},g6=(0,l.Uk)("vscode-Go"),p6=(0,l.Uk)(" - Visual Studio Code (VS Code) 使用的一个扩展，为 Go 语言提供了支持"),m6={href:"https://github.com/eaburns/Watch",target:"_blank",rel:"noopener noreferrer"},s6=(0,l.Uk)("Watch"),b6=(0,l.Uk)(" - 当文件变动时，在 acme 窗口中执行命令"),f6=(0,l._)("h2",{id:"go-语言工具",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#go-语言工具","aria-hidden":"true"},"#"),(0,l.Uk)(" Go 语言工具")],-1),c6={href:"https://github.com/songgao/colorGo",target:"_blank",rel:"noopener noreferrer"},U6=(0,l.Uk)("colorGo"),G6=(0,l.Uk)(" - 对 "),d6=(0,l._)("code",null,"Go",-1),W6=(0,l.Uk)(" 命令进行了封装，用于为"),v6=(0,l._)("code",null,"Go build",-1),w6=(0,l.Uk)("的输出结果添加颜色"),y6={href:"https://github.com/KyleBanks/depth",target:"_blank",rel:"noopener noreferrer"},x6=(0,l.Uk)("depth"),S6=(0,l.Uk)(" - 通过分析导入的库，将某个包的依赖关系用树状结构进行显示"),P6={href:"https://getgb.io/",target:"_blank",rel:"noopener noreferrer"},T6=(0,l.Uk)("gb"),A6=(0,l.Uk)(" - 一个简单易用的基于项目的构建工具，用于 Go 语言"),z6={href:"https://github.com/TrueFurby/Go-callvis",target:"_blank",rel:"noopener noreferrer"},j6=(0,l.Uk)("Go-callvis"),M6=(0,l.Uk)(" - 使用 dot 语言将你的 Go 语言程序函数调用关系可视化"),C6={href:"https://github.com/skelterjohn/Go-pkg-complete",target:"_blank",rel:"noopener noreferrer"},L6=(0,l.Uk)("Go-pkg-complete"),R6=(0,l.Uk)(" - Bash 代码补全，用于Go 和 wGo."),I6={href:"https://github.com/Go-swagger/Go-swagger",target:"_blank",rel:"noopener noreferrer"},q6=(0,l.Uk)("Go-swagger"),H6=(0,l.Uk)(" - 为 Go 语言实现的Swagger 2.0， Swagger 是一个简单但强大的工具，用于展示你的 RESTful API."),D6={href:"https://github.com/OctoLinker/browser-extension",target:"_blank",rel:"noopener noreferrer"},O6=(0,l.Uk)("OctoLinker"),E6=(0,l.Uk)(" - 使用 github 的浏览器插件 OctoLinker 高效浏览 Go 语言文件"),N6={href:"https://github.com/galeone/rts",target:"_blank",rel:"noopener noreferrer"},B6=(0,l.Uk)("rts"),Q6=(0,l.Uk)(" - RTS（是response to struct的缩写）用于根据服务器的响应生成 Go 语言结构体"),J6=(0,l._)("h2",{id:"软件包",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#软件包","aria-hidden":"true"},"#"),(0,l.Uk)(" 软件包")],-1),F6=(0,l._)("p",null,[(0,l._)("em",null,"使用 Go 语言编写的软件")],-1),V6=(0,l._)("h3",{id:"devops-工具",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#devops-工具","aria-hidden":"true"},"#"),(0,l.Uk)(" DevOps 工具")],-1),X6={href:"https://github.com/smira/aptly",target:"_blank",rel:"noopener noreferrer"},K6=(0,l.Uk)("aptly"),Y6=(0,l.Uk)(" - aptly 是一个 Debian 库管理工具"),Z6={href:"https://github.com/Luxurioust/aurora",target:"_blank",rel:"noopener noreferrer"},$6=(0,l.Uk)("aurora"),eee=(0,l.Uk)(" - 跨平台、基于web的 Beanstalkd 队列服务器控制台"),ree={href:"https://github.com/soniah/awsenv",target:"_blank",rel:"noopener noreferrer"},oee=(0,l.Uk)("awsenv"),lee=(0,l.Uk)(" - 加载 Amazon (AWS) 环境变量作为 profile 文件"),tee={href:"https://github.com/eleme/banshee",target:"_blank",rel:"noopener noreferrer"},nee=(0,l.Uk)("Banshee"),aee=(0,l.Uk)(" - 异常检测系统，用于周期性数据测量"),iee={href:"https://github.com/codesenberg/bombardier",target:"_blank",rel:"noopener noreferrer"},hee=(0,l.Uk)("bombardier"),kee=(0,l.Uk)(" - 快速的、跨平台的HTTP 基准工具."),_ee={href:"https://github.com/bosun-monitor/bosun",target:"_blank",rel:"noopener noreferrer"},uee=(0,l.Uk)("bosun"),gee=(0,l.Uk)(" - 时间序列告警框架"),pee={href:"https://github.com/liudng/doGo",target:"_blank",rel:"noopener noreferrer"},mee=(0,l.Uk)("doGo"),see=(0,l.Uk)(" - 监控源文件中的变化并自动编译和执行"),bee={href:"https://github.com/appleboy/drone-jenkins",target:"_blank",rel:"noopener noreferrer"},fee=(0,l.Uk)("drone-jenkins"),cee=(0,l.Uk)(" - 触发下游 Jenkins 任务， 可以通过二进制文件、 docker 或者 Drone CI来使用"),Uee={href:"https://github.com/appleboy/drone-scp",target:"_blank",rel:"noopener noreferrer"},Gee=(0,l.Uk)("drone-scp"),dee=(0,l.Uk)(" - 通过 SSH 拷贝文件及可执行程序,可以通过二进制文件、 docker 或者 Drone CI来使用"),Wee={href:"https://github.com/chrismckenzie/dropship",target:"_blank",rel:"noopener noreferrer"},vee=(0,l.Uk)("Dropship"),wee=(0,l.Uk)(" - 通过 cdn 部署代码的工具"),yee={href:"https://github.com/appleboy/easyssh-proxy",target:"_blank",rel:"noopener noreferrer"},xee=(0,l.Uk)("easyssh-proxy"),See=(0,l.Uk)(" - 一个用于通过 ssh 远程执行命令以及通过"),Pee=(0,l._)("code",null,"ProxyCommand",-1),Tee=(0,l.Uk)(" 来进行 SCP 下载"),Aee={href:"https://github.com/Go-gitea/gitea",target:"_blank",rel:"noopener noreferrer"},zee=(0,l.Uk)("Gitea"),jee=(0,l.Uk)(" - Gogs的fork，完全社区驱动"),Mee={href:"https://github.com/rcrowley/Go-metrics",target:"_blank",rel:"noopener noreferrer"},Cee=(0,l.Uk)("Go Metrics"),Lee=(0,l.Uk)(" - Coda Hale 的 Metrics library的 Go 语言接口: "),Ree={href:"https://github.com/codahale/metrics",target:"_blank",rel:"noopener noreferrer"},Iee=(0,l.Uk)("https://github.com/codahale/metrics"),qee=(0,l.Uk)("."),Hee={href:"https://github.com/sanbornm/Go-selfupdate",target:"_blank",rel:"noopener noreferrer"},Dee=(0,l.Uk)("Go-selfupdate"),Oee=(0,l.Uk)(" - 让你的 Go 语言程序可以自我更新"),Eee={href:"https://github.com/cryptojuice/Gobrew",target:"_blank",rel:"noopener noreferrer"},Nee=(0,l.Uk)("Gobrew"),Bee=(0,l.Uk)(" - Gobrew 让你可以在不同版本的 Go 语言之间轻松切换"),Qee={href:"https://github.com/sirnewton01/Godbg",target:"_blank",rel:"noopener noreferrer"},Jee=(0,l.Uk)("Godbg"),Fee=(0,l.Uk)(" - 基于 Web 的前端 gdb 应用程序"),Vee={href:"https://Gogs.io/",target:"_blank",rel:"noopener noreferrer"},Xee=(0,l.Uk)("Gogs"),Kee=(0,l.Uk)(" - 自我托管的Git服务"),Yee={href:"https://github.com/inconshreveable/Gonative",target:"_blank",rel:"noopener noreferrer"},Zee=(0,l.Uk)("Gonative"),$ee=(0,l.Uk)(" - 为 Go 语言创建可以在多平台进行交叉编译的工具，使用 CGo-enabled 标准库"),ere={href:"https://github.com/ahmetalpbalkan/Govvv",target:"_blank",rel:"noopener noreferrer"},rre=(0,l.Uk)("Govvv"),ore=(0,l.Uk)(" - 对“Go build”进行了封装，用于轻松的向 Go 语言二进制文件中添加版本信息"),lre={href:"https://github.com/mitchellh/Gox",target:"_blank",rel:"noopener noreferrer"},tre=(0,l.Uk)("Gox"),nre=(0,l.Uk)(" - 非常简单的 Go 语言交叉编译工具"),are={href:"https://github.com/laher/Goxc",target:"_blank",rel:"noopener noreferrer"},ire=(0,l.Uk)("Goxc"),hre=(0,l.Uk)(" - Go 语言构建工具，专注于交叉编译和打包"),kre={href:"https://github.com/yaronsumel/grapes",target:"_blank",rel:"noopener noreferrer"},_re=(0,l.Uk)("grapes"),ure=(0,l.Uk)(" - 一款轻量级工具，用于通过 ssh 发送命令"),gre={href:"https://github.com/moovweb/gvm",target:"_blank",rel:"noopener noreferrer"},pre=(0,l.Uk)("GVM"),mre=(0,l.Uk)(" - GVM 提供了用于管理 Go 语言版本的接口"),sre={href:"https://github.com/rakyll/hey",target:"_blank",rel:"noopener noreferrer"},bre=(0,l.Uk)("Hey"),fre=(0,l.Uk)(" - Hey 是一个微型程序，用于向 web 应用发送一些載荷"),cre={href:"https://github.com/ajvb/kala",target:"_blank",rel:"noopener noreferrer"},Ure=(0,l.Uk)("kala"),Gre=(0,l.Uk)(" - 极简、现代的、高效的任务调度"),dre={href:"https://github.com/kubernetes/kubernetes",target:"_blank",rel:"noopener noreferrer"},Wre=(0,l.Uk)("kubernetes"),vre=(0,l.Uk)(" - 来自 Google 的容器集群管理器"),wre={href:"https://github.com/moby/moby",target:"_blank",rel:"noopener noreferrer"},yre=(0,l.Uk)("Moby"),xre=(0,l.Uk)(" - 为容器生态系统创建的一个合作项目，用于构建基于容器的系统"),Sre={href:"https://github.com/emicklei/mora",target:"_blank",rel:"noopener noreferrer"},Pre=(0,l.Uk)("Mora"),Tre=(0,l.Uk)(" - REST 服务器，用于获取 MonGoDB 文件和元数据"),Are={href:"https://github.com/ostrost/ostent",target:"_blank",rel:"noopener noreferrer"},zre=(0,l.Uk)("ostent"),jre=(0,l.Uk)(" - 收集并显示系统数据，可以作 Graphite 和／或 InfluxDB 的中继"),Mre={href:"https://github.com/mitchellh/packer",target:"_blank",rel:"noopener noreferrer"},Cre=(0,l.Uk)("Packer"),Lre=(0,l.Uk)(" - Packer 通过单一的配置文件，为不同的平台创建独立机器镜像"),Rre={href:"https://github.com/bengadbois/pewpew",target:"_blank",rel:"noopener noreferrer"},Ire=(0,l.Uk)("Pewpew"),qre=(0,l.Uk)(" - 灵活的 HTTP 命令行压力测试 工具"),Hre={href:"https://github.com/alouche/rodent",target:"_blank",rel:"noopener noreferrer"},Dre=(0,l.Uk)("Rodent"),Ore=(0,l.Uk)(" - Rodent 帮助你管理 Go 语言版本，项目病追踪依赖"),Ere={href:"https://github.com/rlmcpherson/s3Gof3r",target:"_blank",rel:"noopener noreferrer"},Nre=(0,l.Uk)("s3Gof3r"),Bre=(0,l.Uk)(" - 为了从 Amazon S3中高速存取大型对象而特别优化的库"),Qre={href:"https://github.com/scaleway/scaleway-cli",target:"_blank",rel:"noopener noreferrer"},Jre=(0,l.Uk)("Scaleway-cli"),Fre=(0,l.Uk)(" - 通过命令行来管理 BareMetal 服务器 (和使用 Docker 一样容易)."),Vre={href:"https://github.com/ChristopherRabotin/sg",target:"_blank",rel:"noopener noreferrer"},Xre=(0,l.Uk)("sg"),Kre=(0,l.Uk)(" - 对一组 HTTP 端点 (比如 ab)进行了基准测试， with possibility to use the reponse code and data between each call for specific server stress based on its previous response."),Yre={href:"https://github.com/sanathp/statusok",target:"_blank",rel:"noopener noreferrer"},Zre=(0,l.Uk)("StatusOK"),$re=(0,l.Uk)(" - 监控你的网站和 REST APIs。如果你的服务器挂了或是响应时间超过预期，则会通过 Slack, E-mail 来通知你"),eoe={href:"https://github.com/tsenart/vegeta",target:"_blank",rel:"noopener noreferrer"},roe=(0,l.Uk)("Vegeta"),ooe=(0,l.Uk)(" - HTTP 加载测试工具和库"),loe={href:"https://github.com/adnanh/webhook",target:"_blank",rel:"noopener noreferrer"},toe=(0,l.Uk)("webhook"),noe=(0,l.Uk)(" - 允许用户创建 HTTP 端点，在服务器上执行命令"),aoe={href:"https://wide.b3log.org/login",target:"_blank",rel:"noopener noreferrer"},ioe=(0,l.Uk)("Wide"),hoe=(0,l.Uk)(" - 基于 Web 的 IDE，为使用 Go 语言的团队设计"),koe={href:"https://github.com/masterzen/winrm-cli",target:"_blank",rel:"noopener noreferrer"},_oe=(0,l.Uk)("winrm-cli"),uoe=(0,l.Uk)(" - 命令行工具，可以远程在 windows 机器上执行命令"),goe=(0,l._)("h3",{id:"其他软件",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#其他软件","aria-hidden":"true"},"#"),(0,l.Uk)(" 其他软件")],-1),poe={href:"https://github.com/crufter/borg",target:"_blank",rel:"noopener noreferrer"},moe=(0,l.Uk)("borg"),soe=(0,l.Uk)(" - 基于终端的搜索引擎，用于搜索 bash 代码 片段"),boe={href:"https://github.com/tejo/boxed",target:"_blank",rel:"noopener noreferrer"},foe=(0,l.Uk)("boxed"),coe=(0,l.Uk)(" - 基于Dropbox 的博客引擎"),Uoe={href:"https://github.com/rafael-santiaGo/cherry",target:"_blank",rel:"noopener noreferrer"},Goe=(0,l.Uk)("Cherry"),doe=(0,l.Uk)(" - Go 语言实现的一个微型网络聊天服务器"),Woe={href:"https://github.com/Gocircuit/circuit",target:"_blank",rel:"noopener noreferrer"},voe=(0,l.Uk)("Circuit"),woe=(0,l.Uk)(" - Circuit 是一个可编程的 PaaS 以及 IaaS,用于管理、发现以及编排各种云端应用的服务及主机"),yoe={href:"https://github.com/tylertreat/Comcast",target:"_blank",rel:"noopener noreferrer"},xoe=(0,l.Uk)("Comcast"),Soe=(0,l.Uk)(" - 模拟不佳的网络连接"),Poe={href:"https://github.com/kelseyhightower/confd",target:"_blank",rel:"noopener noreferrer"},Toe=(0,l.Uk)("confd"),Aoe=(0,l.Uk)(" - 使用 etcd 或 consul 的模板及数据管理本地应用的配置文件"),zoe={href:"https://github.com/skibish/ddns",target:"_blank",rel:"noopener noreferrer"},joe=(0,l.Uk)("DDNS"),Moe=(0,l.Uk)(" - 个人 DDNS 客户端，使用 Digital Ocean DNS 作为后端"),Coe={href:"http://www.docker.com/",target:"_blank",rel:"noopener noreferrer"},Loe=(0,l.Uk)("Docker"),Roe=(0,l.Uk)(" - 一个为开发者和系统管理员提供的分布式应用开放平台"),Ioe={href:"https://github.com/documize/community",target:"_blank",rel:"noopener noreferrer"},qoe=(0,l.Uk)("Documize"),Hoe=(0,l.Uk)(" - 现代维基百科软件，可以继承 SaaS 工具提供的数据"),Doe={href:"https://github.com/coreos/fleet",target:"_blank",rel:"noopener noreferrer"},Ooe=(0,l.Uk)("fleet"),Eoe=(0,l.Uk)(" - 分布式初始化系统"),Noe={href:"https://github.com/shurcooL/Go-Package-Store#Go-package-store-",target:"_blank",rel:"noopener noreferrer"},Boe=(0,l.Uk)("Go Package Store"),Qoe=(0,l.Uk)(" - 一个可以显示你的 GoPATH 路径下 Go 软件包的更新的应用"),Joe={href:"https://github.com/Goccmack/Gocc",target:"_blank",rel:"noopener noreferrer"},Foe=(0,l.Uk)("Gocc"),Voe=(0,l.Uk)(" - Gocc 是一个用 Go 语言编写的 Go 语言编辑器工具集"),Xoe={href:"https://github.com/diankong/GoDocTooltip",target:"_blank",rel:"noopener noreferrer"},Koe=(0,l.Uk)("GoDocTooltip"),Yoe=(0,l.Uk)(" - 一个Chrome 浏览器扩展，可以在浏览 Go 语言文档时以工具提示的方式显示函数的描述信息"),Zoe={href:"https://www.jetbrains.com/go/",target:"_blank",rel:"noopener noreferrer"},$oe=(0,l.Uk)("Gogland"),ele=(0,l.Uk)(" - 跨平台、全功能 Go 语言集成开发环境"),rle={href:"https://github.com/buger/Gor",target:"_blank",rel:"noopener noreferrer"},ole=(0,l.Uk)("Gor"),lle=(0,l.Uk)(" - Http 流量复制工具，用于将生产环境的流量在开发环境实施重现"),tle={href:"http://ambrevar.bitbucket.org/hsync/",target:"_blank",rel:"noopener noreferrer"},nle=(0,l.Uk)("hsync"),ale=(0,l.Uk)(" - 文件系统同步工具"),ile={href:"http://GohuGo.io/",target:"_blank",rel:"noopener noreferrer"},hle=(0,l.Uk)("huGo"),kle=(0,l.Uk)(" - 快速、现代的静态 web 引擎"),_le={href:"https://github.com/dimiro1/ipe",target:"_blank",rel:"noopener noreferrer"},ule=(0,l.Uk)("ipe"),gle=(0,l.Uk)(" - 开源 Pusher 服务器，Go 语言编写，兼容 Pusher 客户端，由 Go 语言编写"),ple={href:"https://github.com/yazgazan/jaydiff",target:"_blank",rel:"noopener noreferrer"},mle=(0,l.Uk)("JayDiff"),sle=(0,l.Uk)(" - Go 语言编写的JSON对比工具"),ble={href:"https://jujucharms.com/",target:"_blank",rel:"noopener noreferrer"},fle=(0,l.Uk)("Juju"),cle=(0,l.Uk)(" - 服务部署及编排工具，，支持 EC2, Azure, Openstack, MAAS 等等"),Ule={href:"https://github.com/jeffail/leaps",target:"_blank",rel:"noopener noreferrer"},Gle=(0,l.Uk)("Leaps"),dle=(0,l.Uk)(" - 结对编程服务，使用操作变换来避免冲突。"),Wle={href:"http://limetext.org/",target:"_blank",rel:"noopener noreferrer"},vle=(0,l.Uk)("limetext"),wle=(0,l.Uk)(" Lime Text 是一个强大又优雅的编辑器，主要使用 Go 语言开发，意在成为 Sublime Text的继承者。"),yle={href:"https://github.com/visualfc/liteide",target:"_blank",rel:"noopener noreferrer"},xle=(0,l.Uk)("LiteIDE"),Sle=(0,l.Uk)(" - LiteIDE 是一个简单、开源、跨平台的 Go 语言 IDE"),Ple={href:"https://github.com/quii/mockingjay-server",target:"_blank",rel:"noopener noreferrer"},Tle=(0,l.Uk)("mockingjay"),Ale=(0,l.Uk)(" - 伪 HTTP 服务器，通过单一配置文件创建消费驱动。同时你还可以让服务器搞点事情，以进行更加符合现实情况的性能测试"),zle={href:"https://github.com/mehrdadrad/mylg",target:"_blank",rel:"noopener noreferrer"},jle=(0,l.Uk)("myLG"),Mle=(0,l.Uk)(" - Go 语言编写的命令行网络诊断工具"),Cle={href:"https://github.com/unix4fun/naclpipe",target:"_blank",rel:"noopener noreferrer"},Lle=(0,l.Uk)("naclpipe"),Rle=(0,l.Uk)(" - 简单的基于NaCL EC25519 的加密管道工具"),Ile={href:"https://github.com/fogleman/nes",target:"_blank",rel:"noopener noreferrer"},qle=(0,l.Uk)("nes"),Hle=(0,l.Uk)(" - Go 语言编写的任天堂娱乐系统(NES)模拟器"),Dle={href:"https://github.com/noraesae/orange-cat",target:"_blank",rel:"noopener noreferrer"},Ole=(0,l.Uk)("orange-cat"),Ele=(0,l.Uk)(" - Go 语言编写的 Markdown 预览工具"),Nle={href:"https://github.com/pointlander/peg",target:"_blank",rel:"noopener noreferrer"},Ble=(0,l.Uk)("peg"),Qle=(0,l.Uk)(" - Peg（Parsing Expression Grammar）是一个 Packrat parser generator 的实现"),Jle={href:"https://github.com/zachlatta/postman",target:"_blank",rel:"noopener noreferrer"},Fle=(0,l.Uk)("Postman"),Vle=(0,l.Uk)(" - 一个批量发送邮件的命令行工具"),Xle={href:"https://github.com/restic/restic",target:"_blank",rel:"noopener noreferrer"},Kle=(0,l.Uk)("restic"),Yle=(0,l.Uk)(" - 解耦备份程序"),Zle={href:"https://github.com/coreos/rkt",target:"_blank",rel:"noopener noreferrer"},$le=(0,l.Uk)("rkt"),ete=(0,l.Uk)(" - App 容器运行时，集成了初始化系统，和其他容器兼容，比如 Docker，并且支持其他执行引擎，例如 KVM"),rte={href:"https://github.com/chrislusf/seaweedfs",target:"_blank",rel:"noopener noreferrer"},ote=(0,l.Uk)("Seaweed File System"),lte=(0,l.Uk)(" - 快速、简单、可扩展的分布式文件系统，具有O(1)的磁盘查找效率"),tte={href:"https://github.com/msoap/shell2http",target:"_blank",rel:"noopener noreferrer"},nte=(0,l.Uk)("shell2http"),ate=(0,l.Uk)(" - 通过 HTTP 服务器执行 shell 命令行(用于原型验证或远程控制)."),ite={href:"https://github.com/intelsdi-x/snap",target:"_blank",rel:"noopener noreferrer"},hte=(0,l.Uk)("snap"),kte=(0,l.Uk)(" - 强大的遥测框架"),_te={href:"https://github.com/pressly/sup",target:"_blank",rel:"noopener noreferrer"},ute=(0,l.Uk)("Stack Up"),gte=(0,l.Uk)(" - Stack Up 是一个超级简单的开发工具，就好比是服务器网络的 ‘make’ 工具"),pte={href:"https://syncthing.net/",target:"_blank",rel:"noopener noreferrer"},mte=(0,l.Uk)("syncthing"),ste=(0,l.Uk)(" - 开源、去中心化的文件同步工具和协议"),bte={href:"https://github.com/kyleterry/tenyks",target:"_blank",rel:"noopener noreferrer"},fte=(0,l.Uk)("Tenyks"),cte=(0,l.Uk)(" - 面向服务的 IRC 机器人，使用 Redis 和 JSON 来发送消息"),Ute={href:"https://github.com/blogcin/ToTo",target:"_blank",rel:"noopener noreferrer"},Gte=(0,l.Uk)("toto"),dte=(0,l.Uk)(" - Go 语言编写的简单代理服务器，可以和浏览器一起使用"),Wte={href:"https://github.com/shopify/toxiproxy",target:"_blank",rel:"noopener noreferrer"},vte=(0,l.Uk)("toxiproxy"),wte=(0,l.Uk)(" - 模拟网络和系统状态的代理，用于自动化测试"),yte={href:"https://tsuru.io/",target:"_blank",rel:"noopener noreferrer"},xte=(0,l.Uk)("tsuru"),Ste=(0,l.Uk)(" - 可扩展的、开源的 SAAS 软件"),Pte={href:"https://github.com/VerizonDigital/vflow",target:"_blank",rel:"noopener noreferrer"},Tte=(0,l.Uk)("vFlow"),Ate=(0,l.Uk)(" - 高性能、可扩展、可靠的 IPFIX, sFlow 和 Netflow 集合."),zte={href:"https://github.com/ian-kent/websysd",target:"_blank",rel:"noopener noreferrer"},jte=(0,l.Uk)("websysd"),Mte=(0,l.Uk)(" - 基于 web 的进程管理工具(类似 Marathon 或 Upstart)."),Cte={href:"https://github.com/wellington/wellington",target:"_blank",rel:"noopener noreferrer"},Lte=(0,l.Uk)("wellington"),Rte=(0,l.Uk)(" - Sass 项目管理工具， 通过支持一些功能（例如Compass）扩展了这门语言"),Ite=(0,l._)("h1",{id:"资源",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#资源","aria-hidden":"true"},"#"),(0,l.Uk)(" 资源")],-1),qte=(0,l._)("p",null,[(0,l._)("em",null,"可以找到新的 Go 语言库和软件的地方")],-1),Hte=(0,l._)("h2",{id:"基准测试",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#基准测试","aria-hidden":"true"},"#"),(0,l.Uk)(" 基准测试")],-1),Dte={href:"https://github.com/davecheney/autobench",target:"_blank",rel:"noopener noreferrer"},Ote=(0,l.Uk)("autobench"),Ete=(0,l.Uk)(" - 用于比较各个不同版本 Go 语言之间的性能的框架"),Nte={href:"https://github.com/mrLSD/Go-benchmark-app",target:"_blank",rel:"noopener noreferrer"},Bte=(0,l.Uk)("Go-benchmark-app"),Qte=(0,l.Uk)(" - 强大的 HTTP 基准测试工具，集成来 Аb, Wrk, Siege 工具。收集来统计数据以及多种参数用于基准测试和结果比较"),Jte={href:"https://github.com/tylertreat/Go-benchmarks",target:"_blank",rel:"noopener noreferrer"},Fte=(0,l.Uk)("Go-benchmarks"),Vte=(0,l.Uk)(" - 一些基准程序的大杂烩。用于比较一些语言特性以及它们的替代方法."),Xte={href:"https://github.com/julienschmidt/Go-HTTP-routing-benchmark",target:"_blank",rel:"noopener noreferrer"},Kte=(0,l.Uk)("Go-HTTP-routing-benchmark"),Yte=(0,l.Uk)(" - Go HTTP 请求路由基准和比较"),Zte={href:"https://github.com/hgfischer/Go-type-assertion-benchmark",target:"_blank",rel:"noopener noreferrer"},$te=(0,l.Uk)("Go-type-assertion-benchmark"),ene=(0,l.Uk)(" - 对在 Go 语言中使用断言的两种方法进行了性能测试"),rne={href:"https://github.com/smallnest/Go-web-framework-benchmark",target:"_blank",rel:"noopener noreferrer"},one=(0,l.Uk)("Go-web-framework-benchmark"),lne=(0,l.Uk)(" - Go web 框架基准"),tne={href:"https://github.com/alecthomas/Go_serialization_benchmarks",target:"_blank",rel:"noopener noreferrer"},nne=(0,l.Uk)("Go_serialization_benchmarks"),ane=(0,l.Uk)(" - Go 语言序列化方法基准测试"),ine={href:"https://github.com/PuerkitoBio/Gocostmodel",target:"_blank",rel:"noopener noreferrer"},hne=(0,l.Uk)("Gocostmodel"),kne=(0,l.Uk)(" - Go 语言基础操作基准测试"),_ne={href:"https://github.com/amscanne/Golang-micro-benchmarks",target:"_blank",rel:"noopener noreferrer"},une=(0,l.Uk)("Golang-micro-benchmarks"),gne=(0,l.Uk)(" - 一些go语言微基准测试的集合，目的是比较各种语言特性。"),pne={href:"https://github.com/tyler-smith/Golang-sql-benchmark",target:"_blank",rel:"noopener noreferrer"},mne=(0,l.Uk)("Golang-sql-benchmark"),sne=(0,l.Uk)(" - 对一些流行的 Go database/SQL 工具进行基准测试"),bne={href:"https://github.com/feyeleanor/GoSpeed",target:"_blank",rel:"noopener noreferrer"},fne=(0,l.Uk)("Gospeed"),cne=(0,l.Uk)(" - Go 语言微型基准测试工具，用于测试语言结构的速度"),Une={href:"https://github.com/jimrobinson/kvbench",target:"_blank",rel:"noopener noreferrer"},Gne=(0,l.Uk)("kvbench"),dne=(0,l.Uk)(" - 键值数据库基准测试"),Wne={href:"https://github.com/atemerev/skynet",target:"_blank",rel:"noopener noreferrer"},vne=(0,l.Uk)("skynet"),wne=(0,l.Uk)(" - Skynet 1M 线程微基准"),yne={href:"https://github.com/fawick/speedtest-resize",target:"_blank",rel:"noopener noreferrer"},xne=(0,l.Uk)("speedtest-resize"),Sne=(0,l.Uk)(" - 比较了 Go 语言的多种图片缩放算法"),Pne=(0,l._)("h2",{id:"会议",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#会议","aria-hidden":"true"},"#"),(0,l.Uk)(" 会议")],-1),Tne={href:"http://www.capitalGolang.com",target:"_blank",rel:"noopener noreferrer"},Ane=(0,l.Uk)("Capital Go"),zne=(0,l.Uk)(" - 美国华盛顿"),jne={href:"http://www.dotGo.eu",target:"_blank",rel:"noopener noreferrer"},Mne=(0,l.Uk)("dotGo"),Cne=(0,l.Uk)(" - 法国巴黎"),Lne={href:"http://Gocon.connpass.com/",target:"_blank",rel:"noopener noreferrer"},Rne=(0,l.Uk)("GoCon"),Ine=(0,l.Uk)(" - 日本东京"),qne={href:"http://Golanguk.com/",target:"_blank",rel:"noopener noreferrer"},Hne=(0,l.Uk)("GolangUK"),Dne=(0,l.Uk)(" - 英国伦敦"),One={href:"http://Gopherchina.org",target:"_blank",rel:"noopener noreferrer"},Ene=(0,l.Uk)("GopherChina"),Nne=(0,l.Uk)(" - 中国上海"),Bne={href:"http://www.Gophercon.com/",target:"_blank",rel:"noopener noreferrer"},Qne=(0,l.Uk)("GopherCon"),Jne=(0,l.Uk)(" - 美国丹佛"),Fne={href:"https://Gopherconbr.org",target:"_blank",rel:"noopener noreferrer"},Vne=(0,l.Uk)("GopherCon Brazil"),Xne=(0,l.Uk)(" - 巴西弗洛里亚诺波利斯"),Kne={href:"http://www.Gophercon.ae/",target:"_blank",rel:"noopener noreferrer"},Yne=(0,l.Uk)("GopherCon Dubai"),Zne=(0,l.Uk)(" - 迪拜"),$ne={href:"http://www.Gophercon.in/",target:"_blank",rel:"noopener noreferrer"},eae=(0,l.Uk)("GopherCon India"),rae=(0,l.Uk)(" - 印度普纳"),oae={href:"https://Gophercon.sg",target:"_blank",rel:"noopener noreferrer"},lae=(0,l.Uk)("GopherCon Singapore"),tae=(0,l.Uk)(" - 新加坡丰树商业城"),nae={href:"http://GothamGo.com/",target:"_blank",rel:"noopener noreferrer"},aae=(0,l.Uk)("GothamGo"),iae=(0,l.Uk)(" - 美国纽约"),hae=(0,l._)("h2",{id:"e-books",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#e-books","aria-hidden":"true"},"#"),(0,l.Uk)(" E-Books")],-1),kae={href:"https://leanpub.com/GoNotebook/read",target:"_blank",rel:"noopener noreferrer"},_ae=(0,l.Uk)("A Go Developer's Notebook"),uae={href:"http://www.Golang-book.com/",target:"_blank",rel:"noopener noreferrer"},gae=(0,l.Uk)("An Introduction to Programming in Go"),pae={href:"https://www.gitbook.com/book/astaxie/build-web-application-with-Golang/details",target:"_blank",rel:"noopener noreferrer"},mae=(0,l.Uk)("Build Web Application with Golang"),sae={href:"https://www.gitbook.com/book/codegangsta/building-web-apps-with-Go/details",target:"_blank",rel:"noopener noreferrer"},bae=(0,l.Uk)("Building Web Apps With Go"),fae={href:"http://Golangbootcamp.com",target:"_blank",rel:"noopener noreferrer"},cae=(0,l.Uk)("Go Bootcamp"),Uae={href:"https://github.com/dariubs/GoBooks",target:"_blank",rel:"noopener noreferrer"},Gae=(0,l.Uk)("GoBooks"),dae=(0,l.Uk)(" - Go 语言书籍列表"),Wae={href:"https://www.miek.nl/downloads/Go/Learning-Go-latest.pdf",target:"_blank",rel:"noopener noreferrer"},vae=(0,l.Uk)("Learning Go"),wae={href:"https://jan.newmarch.name/Go/",target:"_blank",rel:"noopener noreferrer"},yae=(0,l.Uk)("Network Programming With Go"),xae={href:"http://www.Gopl.io/",target:"_blank",rel:"noopener noreferrer"},Sae=(0,l.Uk)("The Go Programming Language"),Pae={href:"https://github.com/thewhitetulip/web-dev-Golang-anti-textbook/",target:"_blank",rel:"noopener noreferrer"},Tae=(0,l.Uk)("Web Application with Go the Anti-Textbook"),Aae=(0,l._)("h2",{id:"twitter",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#twitter","aria-hidden":"true"},"#"),(0,l.Uk)(" Twitter")],-1),zae={href:"https://twitter.com/Golang",target:"_blank",rel:"noopener noreferrer"},jae=(0,l.Uk)("@Golang"),Mae={href:"https://twitter.com/Golang_news",target:"_blank",rel:"noopener noreferrer"},Cae=(0,l.Uk)("@Golang_news"),Lae={href:"https://twitter.com/Golangflow",target:"_blank",rel:"noopener noreferrer"},Rae=(0,l.Uk)("@Golangflow"),Iae={href:"https://twitter.com/Golangweekly",target:"_blank",rel:"noopener noreferrer"},qae=(0,l.Uk)("@Golangweekly"),Hae=(0,l._)("h2",{id:"网站",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#网站","aria-hidden":"true"},"#"),(0,l.Uk)(" 网站")],-1),Dae={href:"https://Go.libhunt.com",target:"_blank",rel:"noopener noreferrer"},Oae=(0,l.Uk)("Awesome Go @LibHunt"),Eae=(0,l.Uk)(" - Your Go-to Go Toolbox."),Nae={href:"https://github.com/lukasz-madon/awesome-remote-job",target:"_blank",rel:"noopener noreferrer"},Bae=(0,l.Uk)("Awesome Remote Job"),Qae=(0,l.Uk)(" - 一个发布远程工作的列表。上面有很多人都在寻找 Go 语言程序员"),Jae={href:"https://github.com/bayandin/awesome-awesomeness",target:"_blank",rel:"noopener noreferrer"},Fae=(0,l.Uk)("awesome-awesomeness"),Vae=(0,l.Uk)(" - 汇集了其他 Awesome 系列列表的聚合列表"),Xae={href:"https://flipboard.com/section/the-Golang-magazine-bVP7nS",target:"_blank",rel:"noopener noreferrer"},Kae=(0,l.Uk)("Flipboard - Go Magazine"),Yae=(0,l.Uk)(" - 汇集了 Go 语言的教程和文章"),Zae={href:"http://blog.Golang.org",target:"_blank",rel:"noopener noreferrer"},$ae=(0,l.Uk)("Go Blog"),eie=(0,l.Uk)(" - Go 语言官方博客"),rie={href:"http://Golang-challenge.org/",target:"_blank",rel:"noopener noreferrer"},oie=(0,l.Uk)("Go Challenge"),lie=(0,l.Uk)(" - 通过解题来学习 Go 语言，同时获得专家们的反馈"),tie={href:"https://forum.Golangbridge.org",target:"_blank",rel:"noopener noreferrer"},nie=(0,l.Uk)("Go Forum"),aie=(0,l.Uk)(" - 讨论 Go 的论坛."),iie={href:"https://www.Goin5minutes.com/",target:"_blank",rel:"noopener noreferrer"},hie=(0,l.Uk)("Go In 5 Minutes"),kie=(0,l.Uk)(" - 5 分钟分享如何做好一件事"),_ie={href:"https://github.com/Golang/Go/wiki/Projects",target:"_blank",rel:"noopener noreferrer"},uie=(0,l.Uk)("Go Projects"),gie=(0,l.Uk)(" - Go 语言社区 wiki 列表中的项目"),pie={href:"https://github.com/ninedraft/Gocryforhelp",target:"_blank",rel:"noopener noreferrer"},mie=(0,l.Uk)("Gocryforhelp"),sie=(0,l.Uk)(" - 汇集了一些需要帮助的 Go 语言项目。一个开始你的开源之路的好地方"),bie={href:"https://Godoc.org/",target:"_blank",rel:"noopener noreferrer"},fie=(0,l.Uk)("Godoc.org"),cie=(0,l.Uk)(" - 开源 Go 语言软件包的文档库."),Uie={href:"http://Golangflow.io",target:"_blank",rel:"noopener noreferrer"},Gie=(0,l.Uk)("Golang Flow"),die=(0,l.Uk)(" - 不断更新的博客、新闻、软件等等"),Wie={href:"https://Golangnews.com",target:"_blank",rel:"noopener noreferrer"},vie=(0,l.Uk)("Golang News"),wie=(0,l.Uk)(" - 关于 Go 语言编程的一些链接."),yie={href:"https://github.com/mholt/Golang-graphics",target:"_blank",rel:"noopener noreferrer"},xie=(0,l.Uk)("Golang-graphics"),Sie=(0,l.Uk)(" - 关于 Go 语言的图片及艺术作品"),Pie={href:"https://groups.Google.com/forum/#!forum/Golang-nuts",target:"_blank",rel:"noopener noreferrer"},Tie=(0,l.Uk)("Golang-nuts"),Aie=(0,l.Uk)(" - Go 邮件列表"),zie={href:"https://plus.Google.com/communities/114112804251407510571",target:"_blank",rel:"noopener noreferrer"},jie=(0,l.Uk)("Google Plus Community"),Mie=(0,l.Uk)(" - Go 语言爱好者的 Google+ 社区"),Cie={href:"https://Gowalker.org",target:"_blank",rel:"noopener noreferrer"},Lie=(0,l.Uk)("Gowalker.org"),Rie=(0,l.Uk)(" - Go 语言项目 API 文档"),Iie={href:"https://www.reddit.com/r/Golang",target:"_blank",rel:"noopener noreferrer"},qie=(0,l.Uk)("r/Golang"),Hie=(0,l.Uk)(" - Go 语言新闻"),Die={href:"https://github.com/trending?l=Go",target:"_blank",rel:"noopener noreferrer"},Oie=(0,l.Uk)("Trending Go repositories on GitHub today"),Eie=(0,l.Uk)(" - 一个寻找 Go 语言新库和软件的好地方"),Nie=(0,l._)("h3",{id:"教程",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#教程","aria-hidden":"true"},"#"),(0,l.Uk)(" 教程")],-1),Bie={href:"http://tour.Golang.org/",target:"_blank",rel:"noopener noreferrer"},Qie=(0,l.Uk)("A Tour of Go"),Jie=(0,l.Uk)(" - 一个交互式的 Go 语言教程"),Fie={href:"https://github.com/astaxie/build-web-application-with-Golang",target:"_blank",rel:"noopener noreferrer"},Vie=(0,l.Uk)("Build web application with Golang"),Xie=(0,l.Uk)(" - Go 语言电子书，讲解如何编写一个 web 应用"),Kie={href:"https://semaphoreci.com/community/tutorials/building-Go-web-applications-and-microservices-using-gin",target:"_blank",rel:"noopener noreferrer"},Yie=(0,l.Uk)("Building Go Web Applications and Microservices Using Gin"),Zie=(0,l.Uk)(" - 学习 Gin 以及了解如何使用 Gin 帮你减少模板代码并建立一个请求处理流水线"),$ie={href:"https://Gobyexample.com/",target:"_blank",rel:"noopener noreferrer"},ehe=(0,l.Uk)("Go By Example"),rhe=(0,l.Uk)(" - 通过带注解的例程帮助你动手实践学习 Go 语言"),ohe={href:"https://github.com/a8m/Go-lang-cheat-sheet",target:"_blank",rel:"noopener noreferrer"},lhe=(0,l.Uk)("Go Cheat Sheet"),the=(0,l.Uk)(" - Go 参考手册"),nhe={href:"http://Go-database-sql.org/",target:"_blank",rel:"noopener noreferrer"},ahe=(0,l.Uk)("Go database/sql tutorial"),ihe=(0,l.Uk)(" - 介绍数据库及 sql"),hhe={href:"https://Golangbot.com/learn-Golang-series/",target:"_blank",rel:"noopener noreferrer"},khe=(0,l.Uk)("Golangbot"),_he=(0,l.Uk)(" - Go 语言初学者教程"),uhe={href:"https://semaphoreci.com/community/tutorials/how-to-use-Godog-for-behavior-driven-development-in-Go",target:"_blank",rel:"noopener noreferrer"},ghe=(0,l.Uk)("How to Use Godog for Behavior-driven Development in Go"),phe=(0,l.Uk)(" - 学习使用 Godog — 一个行为驱动型开发框架，用于构建和测试 Go 语言应用"),mhe={href:"https://github.com/mkaz/working-with-Go",target:"_blank",rel:"noopener noreferrer"},she=(0,l.Uk)("Working with Go"),bhe=(0,l.Uk)(" - 为有经验的程序员提供的 Go 语言教程"),fhe={},che=(0,o(83744).Z)(fhe,[["render",function(e,r){const o=(0,l.up)("ExternalLinkIcon");return(0,l.wg)(),(0,l.iD)("div",null,[t,n,(0,l._)("p",null,[(0,l._)("a",a,[i,(0,l.Wm)(o)])]),h,(0,l._)("p",null,[(0,l._)("a",k,[_,(0,l.Wm)(o)])]),u,(0,l._)("ul",null,[(0,l._)("li",null,[g,(0,l._)("a",p,[m,(0,l.Wm)(o)])]),(0,l._)("li",null,[s,(0,l._)("a",b,[f,(0,l.Wm)(o)])]),(0,l._)("li",null,[c,(0,l._)("a",U,[G,(0,l.Wm)(o)])]),(0,l._)("li",null,[d,(0,l._)("a",W,[v,(0,l.Wm)(o)])])]),w,(0,l._)("p",null,[y,(0,l._)("a",x,[S,(0,l.Wm)(o)])]),P,T,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",A,[z,(0,l.Wm)(o)]),j]),(0,l._)("li",null,[(0,l._)("a",M,[C,(0,l.Wm)(o)]),L]),(0,l._)("li",null,[(0,l._)("a",R,[I,(0,l.Wm)(o)]),q]),(0,l._)("li",null,[(0,l._)("a",H,[D,(0,l.Wm)(o)]),O]),(0,l._)("li",null,[(0,l._)("a",E,[N,(0,l.Wm)(o)]),B]),(0,l._)("li",null,[(0,l._)("a",Q,[J,(0,l.Wm)(o)]),F]),(0,l._)("li",null,[(0,l._)("a",V,[X,(0,l.Wm)(o)]),K]),(0,l._)("li",null,[(0,l._)("a",Y,[Z,(0,l.Wm)(o)]),$]),(0,l._)("li",null,[(0,l._)("a",ee,[re,(0,l.Wm)(o)]),oe]),(0,l._)("li",null,[(0,l._)("a",le,[te,(0,l.Wm)(o)]),ne]),(0,l._)("li",null,[(0,l._)("a",ae,[ie,(0,l.Wm)(o)]),he]),(0,l._)("li",null,[(0,l._)("a",ke,[_e,(0,l.Wm)(o)]),ue]),(0,l._)("li",null,[(0,l._)("a",ge,[pe,(0,l.Wm)(o)]),me]),(0,l._)("li",null,[(0,l._)("a",se,[be,(0,l.Wm)(o)]),fe]),(0,l._)("li",null,[(0,l._)("a",ce,[Ue,(0,l.Wm)(o)]),Ge])]),de,We,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",ve,[we,(0,l.Wm)(o)]),ye]),(0,l._)("li",null,[(0,l._)("a",xe,[Se,(0,l.Wm)(o)]),Pe]),(0,l._)("li",null,[(0,l._)("a",Te,[Ae,(0,l.Wm)(o)]),ze]),(0,l._)("li",null,[(0,l._)("a",je,[Me,(0,l.Wm)(o)]),Ce]),(0,l._)("li",null,[(0,l._)("a",Le,[Re,(0,l.Wm)(o)]),Ie]),(0,l._)("li",null,[(0,l._)("a",qe,[He,(0,l.Wm)(o)]),De]),(0,l._)("li",null,[(0,l._)("a",Oe,[Ee,(0,l.Wm)(o)]),Ne]),(0,l._)("li",null,[(0,l._)("a",Be,[Qe,(0,l.Wm)(o)]),Je]),(0,l._)("li",null,[(0,l._)("a",Fe,[Ve,(0,l.Wm)(o)]),Xe]),(0,l._)("li",null,[(0,l._)("a",Ke,[Ye,(0,l.Wm)(o)]),Ze]),(0,l._)("li",null,[(0,l._)("a",$e,[er,(0,l.Wm)(o)]),rr]),(0,l._)("li",null,[(0,l._)("a",or,[lr,(0,l.Wm)(o)]),tr]),(0,l._)("li",null,[(0,l._)("a",nr,[ar,(0,l.Wm)(o)]),ir]),(0,l._)("li",null,[(0,l._)("a",hr,[kr,(0,l.Wm)(o)]),_r]),(0,l._)("li",null,[(0,l._)("a",ur,[gr,(0,l.Wm)(o)]),pr]),(0,l._)("li",null,[(0,l._)("a",mr,[sr,(0,l.Wm)(o)]),br]),(0,l._)("li",null,[(0,l._)("a",fr,[cr,(0,l.Wm)(o)]),Ur]),(0,l._)("li",null,[(0,l._)("a",Gr,[dr,(0,l.Wm)(o)]),Wr]),(0,l._)("li",null,[(0,l._)("a",vr,[wr,(0,l.Wm)(o)]),yr]),(0,l._)("li",null,[(0,l._)("a",xr,[Sr,(0,l.Wm)(o)]),Pr]),(0,l._)("li",null,[(0,l._)("a",Tr,[Ar,(0,l.Wm)(o)]),zr])]),jr,Mr,Cr,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Lr,[Rr,(0,l.Wm)(o)]),Ir]),(0,l._)("li",null,[(0,l._)("a",qr,[Hr,(0,l.Wm)(o)]),Dr]),(0,l._)("li",null,[(0,l._)("a",Or,[Er,(0,l.Wm)(o)]),Nr]),(0,l._)("li",null,[(0,l._)("a",Br,[Qr,(0,l.Wm)(o)]),Jr]),(0,l._)("li",null,[(0,l._)("a",Fr,[Vr,(0,l.Wm)(o)]),Xr]),(0,l._)("li",null,[(0,l._)("a",Kr,[Yr,(0,l.Wm)(o)]),Zr]),(0,l._)("li",null,[(0,l._)("a",$r,[eo,(0,l.Wm)(o)]),ro]),(0,l._)("li",null,[(0,l._)("a",oo,[lo,(0,l.Wm)(o)]),to]),(0,l._)("li",null,[(0,l._)("a",no,[ao,(0,l.Wm)(o)]),io]),(0,l._)("li",null,[(0,l._)("a",ho,[ko,(0,l.Wm)(o)]),_o]),(0,l._)("li",null,[(0,l._)("a",uo,[go,(0,l.Wm)(o)]),po]),(0,l._)("li",null,[(0,l._)("a",mo,[so,(0,l.Wm)(o)]),bo]),(0,l._)("li",null,[(0,l._)("a",fo,[co,(0,l.Wm)(o)]),Uo]),(0,l._)("li",null,[(0,l._)("a",Go,[Wo,(0,l.Wm)(o)]),vo]),(0,l._)("li",null,[(0,l._)("a",wo,[yo,(0,l.Wm)(o)]),xo]),(0,l._)("li",null,[(0,l._)("a",So,[Po,(0,l.Wm)(o)]),To]),(0,l._)("li",null,[(0,l._)("a",Ao,[zo,(0,l.Wm)(o)]),jo]),(0,l._)("li",null,[(0,l._)("a",Mo,[Co,(0,l.Wm)(o)]),Lo]),(0,l._)("li",null,[(0,l._)("a",Ro,[Io,(0,l.Wm)(o)]),qo]),(0,l._)("li",null,[(0,l._)("a",Ho,[Do,(0,l.Wm)(o)]),Oo]),(0,l._)("li",null,[(0,l._)("a",Eo,[No,(0,l.Wm)(o)]),Bo]),(0,l._)("li",null,[(0,l._)("a",Qo,[Jo,(0,l.Wm)(o)]),Fo])]),Vo,Xo,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Ko,[Yo,(0,l.Wm)(o)]),Zo]),(0,l._)("li",null,[(0,l._)("a",$o,[el,(0,l.Wm)(o)]),rl]),(0,l._)("li",null,[(0,l._)("a",ol,[ll,(0,l.Wm)(o)]),tl]),(0,l._)("li",null,[(0,l._)("a",nl,[al,(0,l.Wm)(o)]),il]),(0,l._)("li",null,[(0,l._)("a",hl,[kl,(0,l.Wm)(o)]),_l]),(0,l._)("li",null,[(0,l._)("a",ul,[gl,(0,l.Wm)(o)]),pl]),(0,l._)("li",null,[(0,l._)("a",ml,[sl,(0,l.Wm)(o)]),bl]),(0,l._)("li",null,[(0,l._)("a",fl,[cl,(0,l.Wm)(o)]),Ul]),(0,l._)("li",null,[(0,l._)("a",Gl,[dl,(0,l.Wm)(o)]),Wl]),(0,l._)("li",null,[(0,l._)("a",vl,[wl,(0,l.Wm)(o)]),yl]),(0,l._)("li",null,[(0,l._)("a",xl,[Sl,(0,l.Wm)(o)]),Pl]),(0,l._)("li",null,[(0,l._)("a",Tl,[Al,(0,l.Wm)(o)]),zl]),(0,l._)("li",null,[(0,l._)("a",jl,[Ml,(0,l.Wm)(o)]),Cl]),(0,l._)("li",null,[(0,l._)("a",Ll,[Rl,(0,l.Wm)(o)]),Il]),(0,l._)("li",null,[(0,l._)("a",ql,[Hl,(0,l.Wm)(o)]),Dl,Ol,El,(0,l._)("a",Nl,[Bl,(0,l.Wm)(o)]),Ql]),(0,l._)("li",null,[(0,l._)("a",Jl,[Fl,(0,l.Wm)(o)]),Vl]),(0,l._)("li",null,[(0,l._)("a",Xl,[Kl,(0,l.Wm)(o)]),Yl]),(0,l._)("li",null,[(0,l._)("a",Zl,[$l,(0,l.Wm)(o)]),et])]),rt,ot,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",lt,[tt,(0,l.Wm)(o)]),nt]),(0,l._)("li",null,[(0,l._)("a",at,[it,(0,l.Wm)(o)]),ht]),(0,l._)("li",null,[(0,l._)("a",kt,[_t,(0,l.Wm)(o)]),ut]),(0,l._)("li",null,[(0,l._)("a",gt,[pt,(0,l.Wm)(o)]),mt]),(0,l._)("li",null,[(0,l._)("a",st,[bt,(0,l.Wm)(o)]),ft]),(0,l._)("li",null,[(0,l._)("a",ct,[Ut,(0,l.Wm)(o)]),Gt]),(0,l._)("li",null,[(0,l._)("a",dt,[Wt,(0,l.Wm)(o)]),vt]),(0,l._)("li",null,[(0,l._)("a",wt,[yt,(0,l.Wm)(o)]),xt]),(0,l._)("li",null,[(0,l._)("a",St,[Pt,(0,l.Wm)(o)]),Tt]),(0,l._)("li",null,[(0,l._)("a",At,[zt,(0,l.Wm)(o)]),jt]),(0,l._)("li",null,[(0,l._)("a",Mt,[Ct,(0,l.Wm)(o)]),Lt,(0,l._)("a",Rt,[It,(0,l.Wm)(o)]),qt])]),Ht,Dt,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Ot,[Et,(0,l.Wm)(o)]),Nt]),(0,l._)("li",null,[(0,l._)("a",Bt,[Qt,(0,l.Wm)(o)]),Jt]),(0,l._)("li",null,[(0,l._)("a",Ft,[Vt,(0,l.Wm)(o)]),Xt]),(0,l._)("li",null,[(0,l._)("a",Kt,[Yt,(0,l.Wm)(o)]),Zt])]),$t,en,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",rn,[on,(0,l.Wm)(o)]),ln]),(0,l._)("li",null,[(0,l._)("a",tn,[nn,(0,l.Wm)(o)]),an]),(0,l._)("li",null,[(0,l._)("a",hn,[kn,(0,l.Wm)(o)]),_n])]),un,gn,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",pn,[mn,(0,l.Wm)(o)]),sn]),(0,l._)("li",null,[(0,l._)("a",bn,[fn,(0,l.Wm)(o)]),cn]),(0,l._)("li",null,[(0,l._)("a",Un,[Gn,(0,l.Wm)(o)]),dn]),(0,l._)("li",null,[(0,l._)("a",Wn,[vn,(0,l.Wm)(o)]),wn]),(0,l._)("li",null,[(0,l._)("a",yn,[xn,(0,l.Wm)(o)]),Sn]),(0,l._)("li",null,[(0,l._)("a",Pn,[Tn,(0,l.Wm)(o)]),An]),(0,l._)("li",null,[(0,l._)("a",zn,[jn,(0,l.Wm)(o)]),Mn]),(0,l._)("li",null,[(0,l._)("a",Cn,[Ln,(0,l.Wm)(o)]),Rn]),(0,l._)("li",null,[(0,l._)("a",In,[qn,(0,l.Wm)(o)]),Hn]),(0,l._)("li",null,[(0,l._)("a",Dn,[On,(0,l.Wm)(o)]),En]),(0,l._)("li",null,[(0,l._)("a",Nn,[Bn,(0,l.Wm)(o)]),Qn]),(0,l._)("li",null,[(0,l._)("a",Jn,[Fn,(0,l.Wm)(o)]),Vn]),(0,l._)("li",null,[(0,l._)("a",Xn,[Kn,(0,l.Wm)(o)]),Yn]),(0,l._)("li",null,[(0,l._)("a",Zn,[$n,(0,l.Wm)(o)]),ea]),(0,l._)("li",null,[(0,l._)("a",ra,[oa,(0,l.Wm)(o)]),la]),(0,l._)("li",null,[(0,l._)("a",ta,[na,(0,l.Wm)(o)]),aa]),(0,l._)("li",null,[(0,l._)("a",ia,[ha,(0,l.Wm)(o)]),ka]),(0,l._)("li",null,[(0,l._)("a",_a,[ua,(0,l.Wm)(o)]),ga]),(0,l._)("li",null,[(0,l._)("a",pa,[ma,(0,l.Wm)(o)]),sa]),(0,l._)("li",null,[(0,l._)("a",ba,[fa,(0,l.Wm)(o)]),ca]),(0,l._)("li",null,[(0,l._)("a",Ua,[Ga,(0,l.Wm)(o)]),da]),(0,l._)("li",null,[(0,l._)("a",Wa,[va,(0,l.Wm)(o)]),wa]),(0,l._)("li",null,[(0,l._)("a",ya,[xa,(0,l.Wm)(o)]),Sa]),(0,l._)("li",null,[(0,l._)("a",Pa,[Ta,(0,l.Wm)(o)]),Aa]),(0,l._)("li",null,[(0,l._)("a",za,[ja,(0,l.Wm)(o)]),Ma]),(0,l._)("li",null,[(0,l._)("a",Ca,[La,(0,l.Wm)(o)]),Ra]),(0,l._)("li",null,[(0,l._)("a",Ia,[qa,(0,l.Wm)(o)]),Ha]),(0,l._)("li",null,[(0,l._)("a",Da,[Oa,(0,l.Wm)(o)]),Ea])]),Na,(0,l._)("ul",null,[Ba,(0,l._)("li",null,[(0,l._)("a",Qa,[Ja,(0,l.Wm)(o)]),Fa]),(0,l._)("li",null,[(0,l._)("a",Va,[Xa,(0,l.Wm)(o)]),Ka]),(0,l._)("li",null,[(0,l._)("a",Ya,[Za,(0,l.Wm)(o)]),$a]),(0,l._)("li",null,[(0,l._)("a",ei,[ri,(0,l.Wm)(o)]),oi]),(0,l._)("li",null,[(0,l._)("a",li,[ti,(0,l.Wm)(o)]),ni]),(0,l._)("li",null,[(0,l._)("a",ai,[ii,(0,l.Wm)(o)]),hi]),(0,l._)("li",null,[(0,l._)("a",ki,[_i,(0,l.Wm)(o)]),ui]),(0,l._)("li",null,[(0,l._)("a",gi,[pi,(0,l.Wm)(o)]),mi]),(0,l._)("li",null,[(0,l._)("a",si,[bi,(0,l.Wm)(o)]),fi]),(0,l._)("li",null,[(0,l._)("a",ci,[Ui,(0,l.Wm)(o)]),Gi]),(0,l._)("li",null,[(0,l._)("a",di,[Wi,(0,l.Wm)(o)]),vi]),(0,l._)("li",null,[(0,l._)("a",wi,[yi,(0,l.Wm)(o)]),xi]),(0,l._)("li",null,[(0,l._)("a",Si,[Pi,(0,l.Wm)(o)]),Ti]),(0,l._)("li",null,[(0,l._)("a",Ai,[zi,(0,l.Wm)(o)]),ji,(0,l._)("a",Mi,[Ci,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",Li,[Ri,(0,l.Wm)(o)]),Ii]),(0,l._)("li",null,[(0,l._)("a",qi,[Hi,(0,l.Wm)(o)]),Di]),(0,l._)("li",null,[(0,l._)("a",Oi,[Ei,(0,l.Wm)(o)]),Ni]),(0,l._)("li",null,[(0,l._)("a",Bi,[Qi,(0,l.Wm)(o)]),Ji]),(0,l._)("li",null,[(0,l._)("a",Fi,[Vi,(0,l.Wm)(o)]),Xi]),(0,l._)("li",null,[(0,l._)("a",Ki,[Yi,(0,l.Wm)(o)]),Zi]),(0,l._)("li",null,[(0,l._)("a",$i,[eh,(0,l.Wm)(o)]),rh]),(0,l._)("li",null,[(0,l._)("a",oh,[lh,(0,l.Wm)(o)]),th]),(0,l._)("li",null,[(0,l._)("a",nh,[ah,(0,l.Wm)(o)]),ih]),(0,l._)("li",null,[(0,l._)("a",hh,[kh,(0,l.Wm)(o)]),_h]),(0,l._)("li",null,[(0,l._)("a",uh,[gh,(0,l.Wm)(o)]),ph]),(0,l._)("li",null,[(0,l._)("a",mh,[sh,(0,l.Wm)(o)]),bh]),(0,l._)("li",null,[(0,l._)("a",fh,[ch,(0,l.Wm)(o)]),Uh])]),Gh,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",dh,[Wh,(0,l.Wm)(o)]),vh]),(0,l._)("li",null,[(0,l._)("a",wh,[yh,(0,l.Wm)(o)]),xh]),(0,l._)("li",null,[(0,l._)("a",Sh,[Ph,(0,l.Wm)(o)]),Th]),(0,l._)("li",null,[(0,l._)("a",Ah,[zh,(0,l.Wm)(o)]),jh]),(0,l._)("li",null,[(0,l._)("a",Mh,[Ch,(0,l.Wm)(o)]),Lh]),(0,l._)("li",null,[(0,l._)("a",Rh,[Ih,(0,l.Wm)(o)]),qh]),(0,l._)("li",null,[(0,l._)("a",Hh,[Dh,(0,l.Wm)(o)]),Oh]),(0,l._)("li",null,[(0,l._)("a",Eh,[Nh,(0,l.Wm)(o)]),Bh])]),Qh,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Jh,[Fh,(0,l.Wm)(o)]),Vh]),(0,l._)("li",null,[(0,l._)("a",Xh,[Kh,(0,l.Wm)(o)]),Yh]),(0,l._)("li",null,[(0,l._)("a",Zh,[$h,(0,l.Wm)(o)]),ek]),(0,l._)("li",null,[(0,l._)("a",rk,[ok,(0,l.Wm)(o)]),lk]),(0,l._)("li",null,[(0,l._)("a",tk,[nk,(0,l.Wm)(o)]),ak]),(0,l._)("li",null,[(0,l._)("a",ik,[hk,(0,l.Wm)(o)]),kk]),(0,l._)("li",null,[(0,l._)("a",_k,[uk,(0,l.Wm)(o)]),gk]),(0,l._)("li",null,[(0,l._)("a",pk,[mk,(0,l.Wm)(o)]),sk])]),bk,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",fk,[ck,(0,l.Wm)(o)]),Uk]),(0,l._)("li",null,[(0,l._)("a",Gk,[dk,(0,l.Wm)(o)]),Wk]),(0,l._)("li",null,[(0,l._)("a",vk,[wk,(0,l.Wm)(o)]),yk]),(0,l._)("li",null,[(0,l._)("a",xk,[Sk,(0,l.Wm)(o)]),Pk]),(0,l._)("li",null,[(0,l._)("a",Tk,[Ak,(0,l.Wm)(o)]),zk]),(0,l._)("li",null,[(0,l._)("a",jk,[Mk,(0,l.Wm)(o)]),Ck]),(0,l._)("li",null,[(0,l._)("a",Lk,[Rk,(0,l.Wm)(o)]),Ik]),(0,l._)("li",null,[(0,l._)("a",qk,[Hk,(0,l.Wm)(o)]),Dk]),(0,l._)("li",null,[(0,l._)("a",Ok,[Ek,(0,l.Wm)(o)]),Nk])]),Bk,Qk,(0,l._)("ul",null,[(0,l._)("li",null,[Jk,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Fk,[Vk,(0,l.Wm)(o)]),Xk]),(0,l._)("li",null,[(0,l._)("a",Kk,[Yk,(0,l.Wm)(o)]),Zk]),(0,l._)("li",null,[(0,l._)("a",$k,[e_,(0,l.Wm)(o)]),r_]),(0,l._)("li",null,[(0,l._)("a",o_,[l_,(0,l.Wm)(o)]),t_]),(0,l._)("li",null,[(0,l._)("a",n_,[a_,(0,l.Wm)(o)]),i_]),(0,l._)("li",null,[(0,l._)("a",h_,[k_,(0,l.Wm)(o)]),__]),(0,l._)("li",null,[(0,l._)("a",u_,[g_,(0,l.Wm)(o)]),p_]),(0,l._)("li",null,[(0,l._)("a",m_,[s_,(0,l.Wm)(o)]),b_]),(0,l._)("li",null,[(0,l._)("a",f_,[c_,(0,l.Wm)(o)]),U_]),(0,l._)("li",null,[(0,l._)("a",G_,[d_,(0,l.Wm)(o)]),W_,(0,l._)("a",v_,[w_,(0,l.Wm)(o)]),y_]),(0,l._)("li",null,[(0,l._)("a",x_,[S_,(0,l.Wm)(o)]),P_]),(0,l._)("li",null,[(0,l._)("a",T_,[A_,(0,l.Wm)(o)]),z_])])]),(0,l._)("li",null,[j_,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",M_,[C_,(0,l.Wm)(o)]),L_]),(0,l._)("li",null,[(0,l._)("a",R_,[I_,(0,l.Wm)(o)]),q_]),(0,l._)("li",null,[(0,l._)("a",H_,[D_,(0,l.Wm)(o)]),O_]),(0,l._)("li",null,[(0,l._)("a",E_,[N_,(0,l.Wm)(o)]),B_]),(0,l._)("li",null,[(0,l._)("a",Q_,[J_,(0,l.Wm)(o)]),F_,(0,l._)("a",V_,[X_,(0,l.Wm)(o)]),K_]),(0,l._)("li",null,[(0,l._)("a",Y_,[Z_,(0,l.Wm)(o)]),$_]),(0,l._)("li",null,[(0,l._)("a",eu,[ru,(0,l.Wm)(o)]),ou]),(0,l._)("li",null,[(0,l._)("a",lu,[tu,(0,l.Wm)(o)]),nu]),(0,l._)("li",null,[(0,l._)("a",au,[iu,(0,l.Wm)(o)]),hu]),(0,l._)("li",null,[(0,l._)("a",ku,[_u,(0,l.Wm)(o)]),uu]),(0,l._)("li",null,[(0,l._)("a",gu,[pu,(0,l.Wm)(o)]),mu]),(0,l._)("li",null,[(0,l._)("a",su,[bu,(0,l.Wm)(o)]),fu]),(0,l._)("li",null,[(0,l._)("a",cu,[Uu,(0,l.Wm)(o)]),Gu]),(0,l._)("li",null,[(0,l._)("a",du,[Wu,(0,l.Wm)(o)]),vu]),(0,l._)("li",null,[(0,l._)("a",wu,[yu,(0,l.Wm)(o)]),xu]),(0,l._)("li",null,[(0,l._)("a",Su,[Pu,(0,l.Wm)(o)]),Tu]),(0,l._)("li",null,[(0,l._)("a",Au,[zu,(0,l.Wm)(o)]),ju]),(0,l._)("li",null,[(0,l._)("a",Mu,[Cu,(0,l.Wm)(o)]),Lu]),(0,l._)("li",null,[(0,l._)("a",Ru,[Iu,(0,l.Wm)(o)]),qu]),(0,l._)("li",null,[(0,l._)("a",Hu,[Du,(0,l.Wm)(o)]),Ou]),(0,l._)("li",null,[(0,l._)("a",Eu,[Nu,(0,l.Wm)(o)]),Bu])])]),(0,l._)("li",null,[Qu,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Ju,[Fu,(0,l.Wm)(o)]),Vu]),(0,l._)("li",null,[(0,l._)("a",Xu,[Ku,(0,l.Wm)(o)]),Yu]),(0,l._)("li",null,[(0,l._)("a",Zu,[$u,(0,l.Wm)(o)]),eg]),(0,l._)("li",null,[(0,l._)("a",rg,[og,(0,l.Wm)(o)]),lg]),(0,l._)("li",null,[(0,l._)("a",tg,[ng,(0,l.Wm)(o)]),ag]),(0,l._)("li",null,[(0,l._)("a",ig,[hg,(0,l.Wm)(o)]),kg])])])]),_g,ug,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",gg,[pg,(0,l.Wm)(o)]),mg]),(0,l._)("li",null,[(0,l._)("a",sg,[bg,(0,l.Wm)(o)]),fg]),(0,l._)("li",null,[(0,l._)("a",cg,[Ug,(0,l.Wm)(o)]),Gg]),(0,l._)("li",null,[(0,l._)("a",dg,[Wg,(0,l.Wm)(o)]),vg]),(0,l._)("li",null,[(0,l._)("a",wg,[yg,(0,l.Wm)(o)]),xg]),(0,l._)("li",null,[(0,l._)("a",Sg,[Pg,(0,l.Wm)(o)]),Tg]),(0,l._)("li",null,[(0,l._)("a",Ag,[zg,(0,l.Wm)(o)]),jg]),(0,l._)("li",null,[(0,l._)("a",Mg,[Cg,(0,l.Wm)(o)]),Lg])]),Rg,Ig,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",qg,[Hg,(0,l.Wm)(o)]),Dg]),(0,l._)("li",null,[(0,l._)("a",Og,[Eg,(0,l.Wm)(o)]),Ng]),(0,l._)("li",null,[(0,l._)("a",Bg,[Qg,(0,l.Wm)(o)]),Jg]),(0,l._)("li",null,[(0,l._)("a",Fg,[Vg,(0,l.Wm)(o)]),Xg]),(0,l._)("li",null,[(0,l._)("a",Kg,[Yg,(0,l.Wm)(o)]),Zg]),(0,l._)("li",null,[(0,l._)("a",$g,[ep,(0,l.Wm)(o)]),rp]),(0,l._)("li",null,[(0,l._)("a",op,[lp,(0,l.Wm)(o)]),tp]),(0,l._)("li",null,[(0,l._)("a",np,[ap,(0,l.Wm)(o)]),ip]),(0,l._)("li",null,[(0,l._)("a",hp,[kp,(0,l.Wm)(o)]),_p]),(0,l._)("li",null,[(0,l._)("a",up,[gp,(0,l.Wm)(o)]),pp]),(0,l._)("li",null,[(0,l._)("a",mp,[sp,(0,l.Wm)(o)]),bp]),(0,l._)("li",null,[(0,l._)("a",fp,[cp,(0,l.Wm)(o)]),Up]),(0,l._)("li",null,[(0,l._)("a",Gp,[dp,(0,l.Wm)(o)]),Wp]),(0,l._)("li",null,[(0,l._)("a",vp,[wp,(0,l.Wm)(o)]),yp]),(0,l._)("li",null,[(0,l._)("a",xp,[Sp,(0,l.Wm)(o)]),Pp]),(0,l._)("li",null,[(0,l._)("a",Tp,[Ap,(0,l.Wm)(o)]),zp]),(0,l._)("li",null,[(0,l._)("a",jp,[Mp,(0,l.Wm)(o)]),Cp]),(0,l._)("li",null,[(0,l._)("a",Lp,[Rp,(0,l.Wm)(o)]),Ip]),(0,l._)("li",null,[(0,l._)("a",qp,[Hp,(0,l.Wm)(o)]),Dp]),(0,l._)("li",null,[(0,l._)("a",Op,[Ep,(0,l.Wm)(o)]),Np,(0,l._)("a",Bp,[Qp,(0,l.Wm)(o)]),Jp]),(0,l._)("li",null,[(0,l._)("a",Fp,[Vp,(0,l.Wm)(o)]),Xp]),(0,l._)("li",null,[(0,l._)("a",Kp,[Yp,(0,l.Wm)(o)]),Zp]),(0,l._)("li",null,[(0,l._)("a",$p,[em,(0,l.Wm)(o)]),rm]),(0,l._)("li",null,[(0,l._)("a",om,[lm,(0,l.Wm)(o)]),tm])]),nm,am,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",im,[hm,(0,l.Wm)(o)]),km]),(0,l._)("li",null,[(0,l._)("a",_m,[um,(0,l.Wm)(o)]),gm]),(0,l._)("li",null,[(0,l._)("a",pm,[mm,(0,l.Wm)(o)]),sm]),(0,l._)("li",null,[(0,l._)("a",bm,[fm,(0,l.Wm)(o)]),cm]),(0,l._)("li",null,[(0,l._)("a",Um,[Gm,(0,l.Wm)(o)]),dm]),(0,l._)("li",null,[(0,l._)("a",Wm,[vm,(0,l.Wm)(o)]),wm]),(0,l._)("li",null,[(0,l._)("a",ym,[xm,(0,l.Wm)(o)]),Sm]),(0,l._)("li",null,[(0,l._)("a",Pm,[Tm,(0,l.Wm)(o)]),Am]),(0,l._)("li",null,[(0,l._)("a",zm,[jm,(0,l.Wm)(o)]),Mm]),(0,l._)("li",null,[(0,l._)("a",Cm,[Lm,(0,l.Wm)(o)]),Rm]),(0,l._)("li",null,[(0,l._)("a",Im,[qm,(0,l.Wm)(o)]),Hm])]),Dm,Om,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Em,[Nm,(0,l.Wm)(o)]),Bm]),(0,l._)("li",null,[(0,l._)("a",Qm,[Jm,(0,l.Wm)(o)]),Fm]),(0,l._)("li",null,[(0,l._)("a",Vm,[Xm,(0,l.Wm)(o)]),Km,(0,l._)("a",Ym,[Zm,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",$m,[es,(0,l.Wm)(o)]),rs]),(0,l._)("li",null,[(0,l._)("a",os,[ls,(0,l.Wm)(o)]),ts]),(0,l._)("li",null,[(0,l._)("a",ns,[as,(0,l.Wm)(o)]),is]),(0,l._)("li",null,[(0,l._)("a",hs,[ks,(0,l.Wm)(o)]),_s]),(0,l._)("li",null,[(0,l._)("a",us,[gs,(0,l.Wm)(o)]),ps]),(0,l._)("li",null,[(0,l._)("a",ms,[ss,(0,l.Wm)(o)]),bs]),(0,l._)("li",null,[(0,l._)("a",fs,[cs,(0,l.Wm)(o)]),Us]),(0,l._)("li",null,[(0,l._)("a",Gs,[ds,(0,l.Wm)(o)]),Ws]),(0,l._)("li",null,[(0,l._)("a",vs,[ws,(0,l.Wm)(o)]),ys]),(0,l._)("li",null,[(0,l._)("a",xs,[Ss,(0,l.Wm)(o)]),Ps])]),Ts,As,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",zs,[js,(0,l.Wm)(o)]),Ms]),(0,l._)("li",null,[(0,l._)("a",Cs,[Ls,(0,l.Wm)(o)]),Rs]),(0,l._)("li",null,[(0,l._)("a",Is,[qs,(0,l.Wm)(o)]),Hs]),(0,l._)("li",null,[(0,l._)("a",Ds,[Os,(0,l.Wm)(o)]),Es]),(0,l._)("li",null,[(0,l._)("a",Ns,[Bs,(0,l.Wm)(o)]),Qs]),(0,l._)("li",null,[(0,l._)("a",Js,[Fs,(0,l.Wm)(o)]),Vs,Xs,(0,l._)("a",Ks,[Ys,(0,l.Wm)(o)])])]),Zs,$s,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",eb,[rb,(0,l.Wm)(o)]),ob]),(0,l._)("li",null,[(0,l._)("a",lb,[tb,(0,l.Wm)(o)]),nb]),(0,l._)("li",null,[(0,l._)("a",ab,[ib,(0,l.Wm)(o)]),hb]),(0,l._)("li",null,[(0,l._)("a",kb,[_b,(0,l.Wm)(o)]),ub,(0,l._)("a",gb,[pb,(0,l.Wm)(o)]),mb]),(0,l._)("li",null,[(0,l._)("a",sb,[bb,(0,l.Wm)(o)]),fb]),(0,l._)("li",null,[(0,l._)("a",cb,[Ub,(0,l.Wm)(o)]),Gb])]),db,Wb,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",vb,[wb,(0,l.Wm)(o)]),yb]),(0,l._)("li",null,[(0,l._)("a",xb,[Sb,(0,l.Wm)(o)]),Pb]),(0,l._)("li",null,[(0,l._)("a",Tb,[Ab,(0,l.Wm)(o)]),zb]),(0,l._)("li",null,[(0,l._)("a",jb,[Mb,(0,l.Wm)(o)]),Cb]),(0,l._)("li",null,[(0,l._)("a",Lb,[Rb,(0,l.Wm)(o)]),Ib]),(0,l._)("li",null,[(0,l._)("a",qb,[Hb,(0,l.Wm)(o)]),Db]),(0,l._)("li",null,[(0,l._)("a",Ob,[Eb,(0,l.Wm)(o)]),Nb]),(0,l._)("li",null,[(0,l._)("a",Bb,[Qb,(0,l.Wm)(o)]),Jb])]),Fb,Vb,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Xb,[Kb,(0,l.Wm)(o)]),Yb]),(0,l._)("li",null,[(0,l._)("a",Zb,[$b,(0,l.Wm)(o)]),ef]),(0,l._)("li",null,[(0,l._)("a",rf,[of,(0,l.Wm)(o)]),lf]),(0,l._)("li",null,[(0,l._)("a",tf,[nf,(0,l.Wm)(o)]),af]),(0,l._)("li",null,[(0,l._)("a",hf,[kf,(0,l.Wm)(o)]),_f]),(0,l._)("li",null,[(0,l._)("a",uf,[gf,(0,l.Wm)(o)]),pf]),(0,l._)("li",null,[(0,l._)("a",mf,[sf,(0,l.Wm)(o)]),bf]),(0,l._)("li",null,[(0,l._)("a",ff,[cf,(0,l.Wm)(o)]),Uf,(0,l._)("a",Gf,[df,(0,l.Wm)(o)]),Wf]),(0,l._)("li",null,[(0,l._)("a",vf,[wf,(0,l.Wm)(o)]),yf]),(0,l._)("li",null,[(0,l._)("a",xf,[Sf,(0,l.Wm)(o)]),Pf]),(0,l._)("li",null,[(0,l._)("a",Tf,[Af,(0,l.Wm)(o)]),zf]),(0,l._)("li",null,[(0,l._)("a",jf,[Mf,(0,l.Wm)(o)]),Cf]),(0,l._)("li",null,[(0,l._)("a",Lf,[Rf,(0,l.Wm)(o)]),If,(0,l._)("a",qf,[Hf,(0,l.Wm)(o)]),Df]),(0,l._)("li",null,[(0,l._)("a",Of,[Ef,(0,l.Wm)(o)]),Nf])]),Bf,Qf,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Jf,[Ff,(0,l.Wm)(o)]),Vf]),(0,l._)("li",null,[(0,l._)("a",Xf,[Kf,(0,l.Wm)(o)]),Yf]),(0,l._)("li",null,[(0,l._)("a",Zf,[$f,(0,l.Wm)(o)]),ec]),(0,l._)("li",null,[(0,l._)("a",rc,[oc,(0,l.Wm)(o)]),lc]),(0,l._)("li",null,[(0,l._)("a",tc,[nc,(0,l.Wm)(o)]),ac]),(0,l._)("li",null,[(0,l._)("a",ic,[hc,(0,l.Wm)(o)]),kc])]),_c,uc,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",gc,[pc,(0,l.Wm)(o)]),mc]),(0,l._)("li",null,[(0,l._)("a",sc,[bc,(0,l.Wm)(o)]),fc]),(0,l._)("li",null,[(0,l._)("a",cc,[Uc,(0,l.Wm)(o)]),Gc])]),dc,Wc,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",vc,[wc,(0,l.Wm)(o)]),yc]),(0,l._)("li",null,[(0,l._)("a",xc,[Sc,(0,l.Wm)(o)]),Pc]),(0,l._)("li",null,[(0,l._)("a",Tc,[Ac,(0,l.Wm)(o)]),zc]),(0,l._)("li",null,[(0,l._)("a",jc,[Mc,(0,l.Wm)(o)]),Cc]),(0,l._)("li",null,[(0,l._)("a",Lc,[Rc,(0,l.Wm)(o)]),Ic]),(0,l._)("li",null,[(0,l._)("a",qc,[Hc,(0,l.Wm)(o)]),Dc]),(0,l._)("li",null,[(0,l._)("a",Oc,[Ec,(0,l.Wm)(o)]),Nc])]),Bc,Qc,Jc,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Fc,[Vc,(0,l.Wm)(o)]),Xc]),(0,l._)("li",null,[(0,l._)("a",Kc,[Yc,(0,l.Wm)(o)]),Zc]),(0,l._)("li",null,[(0,l._)("a",$c,[eU,(0,l.Wm)(o)]),rU]),(0,l._)("li",null,[(0,l._)("a",oU,[lU,(0,l.Wm)(o)]),tU]),(0,l._)("li",null,[(0,l._)("a",nU,[aU,(0,l.Wm)(o)]),iU]),(0,l._)("li",null,[(0,l._)("a",hU,[kU,(0,l.Wm)(o)]),_U]),(0,l._)("li",null,[(0,l._)("a",uU,[gU,(0,l.Wm)(o)]),pU]),(0,l._)("li",null,[(0,l._)("a",mU,[sU,(0,l.Wm)(o)]),bU]),(0,l._)("li",null,[(0,l._)("a",fU,[cU,(0,l.Wm)(o)]),UU]),(0,l._)("li",null,[(0,l._)("a",GU,[dU,(0,l.Wm)(o)]),WU]),(0,l._)("li",null,[(0,l._)("a",vU,[wU,(0,l.Wm)(o)]),yU])]),xU,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",SU,[PU,(0,l.Wm)(o)]),TU]),(0,l._)("li",null,[(0,l._)("a",AU,[zU,(0,l.Wm)(o)]),jU]),(0,l._)("li",null,[(0,l._)("a",MU,[CU,(0,l.Wm)(o)]),LU]),(0,l._)("li",null,[(0,l._)("a",RU,[IU,(0,l.Wm)(o)]),qU])]),HU,DU,(0,l._)("p",null,[OU,(0,l._)("a",EU,[NU,(0,l.Wm)(o)]),BU]),QU,JU,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",FU,[VU,(0,l.Wm)(o)]),XU]),(0,l._)("li",null,[(0,l._)("a",KU,[YU,(0,l.Wm)(o)]),ZU]),(0,l._)("li",null,[(0,l._)("a",$U,[eG,(0,l.Wm)(o)]),rG]),(0,l._)("li",null,[(0,l._)("a",oG,[lG,(0,l.Wm)(o)]),tG]),(0,l._)("li",null,[(0,l._)("a",nG,[aG,(0,l.Wm)(o)]),iG]),(0,l._)("li",null,[(0,l._)("a",hG,[kG,(0,l.Wm)(o)]),_G]),(0,l._)("li",null,[(0,l._)("a",uG,[gG,(0,l.Wm)(o)]),pG]),(0,l._)("li",null,[(0,l._)("a",mG,[sG,(0,l.Wm)(o)]),bG]),(0,l._)("li",null,[(0,l._)("a",fG,[cG,(0,l.Wm)(o)]),UG]),(0,l._)("li",null,[(0,l._)("a",GG,[dG,(0,l.Wm)(o)]),WG]),(0,l._)("li",null,[(0,l._)("a",vG,[wG,(0,l.Wm)(o)]),yG]),(0,l._)("li",null,[(0,l._)("a",xG,[SG,(0,l.Wm)(o)]),PG]),(0,l._)("li",null,[(0,l._)("a",TG,[AG,(0,l.Wm)(o)]),zG]),(0,l._)("li",null,[(0,l._)("a",jG,[MG,(0,l.Wm)(o)]),CG]),(0,l._)("li",null,[(0,l._)("a",LG,[RG,(0,l.Wm)(o)]),IG]),(0,l._)("li",null,[(0,l._)("a",qG,[HG,(0,l.Wm)(o)]),DG]),(0,l._)("li",null,[(0,l._)("a",OG,[EG,(0,l.Wm)(o)]),NG]),(0,l._)("li",null,[(0,l._)("a",BG,[QG,(0,l.Wm)(o)]),JG]),(0,l._)("li",null,[(0,l._)("a",FG,[VG,(0,l.Wm)(o)]),XG]),(0,l._)("li",null,[(0,l._)("a",KG,[YG,(0,l.Wm)(o)]),ZG]),(0,l._)("li",null,[(0,l._)("a",$G,[ed,(0,l.Wm)(o)]),rd]),(0,l._)("li",null,[(0,l._)("a",od,[ld,(0,l.Wm)(o)]),td]),(0,l._)("li",null,[(0,l._)("a",nd,[ad,(0,l.Wm)(o)]),id]),(0,l._)("li",null,[(0,l._)("a",hd,[kd,(0,l.Wm)(o)]),_d]),(0,l._)("li",null,[(0,l._)("a",ud,[gd,(0,l.Wm)(o)]),pd])]),md,sd,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",bd,[fd,(0,l.Wm)(o)]),cd]),(0,l._)("li",null,[(0,l._)("a",Ud,[Gd,(0,l.Wm)(o)]),dd]),(0,l._)("li",null,[(0,l._)("a",Wd,[vd,(0,l.Wm)(o)]),wd]),(0,l._)("li",null,[(0,l._)("a",yd,[xd,(0,l.Wm)(o)]),Sd]),(0,l._)("li",null,[(0,l._)("a",Pd,[Td,(0,l.Wm)(o)]),Ad]),(0,l._)("li",null,[(0,l._)("a",zd,[jd,(0,l.Wm)(o)]),Md]),(0,l._)("li",null,[(0,l._)("a",Cd,[Ld,(0,l.Wm)(o)]),Rd]),(0,l._)("li",null,[(0,l._)("a",Id,[qd,(0,l.Wm)(o)]),Hd])]),Dd,Od,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Ed,[Nd,(0,l.Wm)(o)]),Bd]),(0,l._)("li",null,[(0,l._)("a",Qd,[Jd,(0,l.Wm)(o)]),Fd]),(0,l._)("li",null,[(0,l._)("a",Vd,[Xd,(0,l.Wm)(o)]),Kd]),(0,l._)("li",null,[(0,l._)("a",Yd,[Zd,(0,l.Wm)(o)]),$d]),(0,l._)("li",null,[(0,l._)("a",eW,[rW,(0,l.Wm)(o)]),oW]),(0,l._)("li",null,[(0,l._)("a",lW,[tW,(0,l.Wm)(o)]),nW]),(0,l._)("li",null,[(0,l._)("a",aW,[iW,(0,l.Wm)(o)]),hW]),(0,l._)("li",null,[(0,l._)("a",kW,[_W,(0,l.Wm)(o)]),uW]),(0,l._)("li",null,[(0,l._)("a",gW,[pW,(0,l.Wm)(o)]),mW]),(0,l._)("li",null,[(0,l._)("a",sW,[bW,(0,l.Wm)(o)]),fW]),(0,l._)("li",null,[(0,l._)("a",cW,[UW,(0,l.Wm)(o)]),GW]),(0,l._)("li",null,[(0,l._)("a",dW,[WW,(0,l.Wm)(o)]),vW]),(0,l._)("li",null,[(0,l._)("a",wW,[yW,(0,l.Wm)(o)]),xW]),(0,l._)("li",null,[(0,l._)("a",SW,[PW,(0,l.Wm)(o)]),TW]),(0,l._)("li",null,[(0,l._)("a",AW,[zW,(0,l.Wm)(o)]),jW]),(0,l._)("li",null,[(0,l._)("a",MW,[CW,(0,l.Wm)(o)]),LW]),(0,l._)("li",null,[(0,l._)("a",RW,[IW,(0,l.Wm)(o)]),qW]),(0,l._)("li",null,[(0,l._)("a",HW,[DW,(0,l.Wm)(o)]),OW,(0,l._)("a",EW,[NW,(0,l.Wm)(o)]),BW,(0,l._)("a",QW,[JW,(0,l.Wm)(o)]),FW]),(0,l._)("li",null,[(0,l._)("a",VW,[XW,(0,l.Wm)(o)]),KW]),(0,l._)("li",null,[(0,l._)("a",YW,[ZW,(0,l.Wm)(o)]),$W]),(0,l._)("li",null,[(0,l._)("a",ev,[rv,(0,l.Wm)(o)]),ov]),(0,l._)("li",null,[(0,l._)("a",lv,[tv,(0,l.Wm)(o)]),nv]),(0,l._)("li",null,[(0,l._)("a",av,[iv,(0,l.Wm)(o)]),hv]),(0,l._)("li",null,[(0,l._)("a",kv,[_v,(0,l.Wm)(o)]),uv]),(0,l._)("li",null,[(0,l._)("a",gv,[pv,(0,l.Wm)(o)]),mv]),(0,l._)("li",null,[(0,l._)("a",sv,[bv,(0,l.Wm)(o)]),fv]),(0,l._)("li",null,[(0,l._)("a",cv,[Uv,(0,l.Wm)(o)]),Gv]),(0,l._)("li",null,[(0,l._)("a",dv,[Wv,(0,l.Wm)(o)]),vv]),(0,l._)("li",null,[(0,l._)("a",wv,[yv,(0,l.Wm)(o)]),xv]),(0,l._)("li",null,[(0,l._)("a",Sv,[Pv,(0,l.Wm)(o)]),Tv]),(0,l._)("li",null,[(0,l._)("a",Av,[zv,(0,l.Wm)(o)]),jv,Mv,Cv]),(0,l._)("li",null,[(0,l._)("a",Lv,[Rv,(0,l.Wm)(o)]),Iv]),(0,l._)("li",null,[(0,l._)("a",qv,[Hv,(0,l.Wm)(o)]),Dv])]),Ov,Ev,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Nv,[Bv,(0,l.Wm)(o)]),Qv]),(0,l._)("li",null,[(0,l._)("a",Jv,[Fv,(0,l.Wm)(o)]),Vv]),(0,l._)("li",null,[(0,l._)("a",Xv,[Kv,(0,l.Wm)(o)]),Yv]),(0,l._)("li",null,[(0,l._)("a",Zv,[$v,(0,l.Wm)(o)]),ew]),(0,l._)("li",null,[(0,l._)("a",rw,[ow,(0,l.Wm)(o)]),lw]),(0,l._)("li",null,[(0,l._)("a",tw,[nw,(0,l.Wm)(o)]),aw]),(0,l._)("li",null,[(0,l._)("a",iw,[hw,(0,l.Wm)(o)]),kw]),(0,l._)("li",null,[(0,l._)("a",_w,[uw,(0,l.Wm)(o)]),gw]),(0,l._)("li",null,[(0,l._)("a",pw,[mw,(0,l.Wm)(o)]),sw]),(0,l._)("li",null,[(0,l._)("a",bw,[fw,(0,l.Wm)(o)]),cw]),(0,l._)("li",null,[(0,l._)("a",Uw,[Gw,(0,l.Wm)(o)]),dw]),(0,l._)("li",null,[(0,l._)("a",Ww,[vw,(0,l.Wm)(o)]),ww]),(0,l._)("li",null,[(0,l._)("a",yw,[xw,(0,l.Wm)(o)]),Sw]),(0,l._)("li",null,[(0,l._)("a",Pw,[Tw,(0,l.Wm)(o)]),Aw]),(0,l._)("li",null,[(0,l._)("a",zw,[jw,(0,l.Wm)(o)]),Mw]),(0,l._)("li",null,[(0,l._)("a",Cw,[Lw,(0,l.Wm)(o)]),Rw]),(0,l._)("li",null,[(0,l._)("a",Iw,[qw,(0,l.Wm)(o)]),Hw]),(0,l._)("li",null,[(0,l._)("a",Dw,[Ow,(0,l.Wm)(o)]),Ew]),(0,l._)("li",null,[(0,l._)("a",Nw,[Bw,(0,l.Wm)(o)]),Qw]),(0,l._)("li",null,[(0,l._)("a",Jw,[Fw,(0,l.Wm)(o)]),Vw]),(0,l._)("li",null,[(0,l._)("a",Xw,[Kw,(0,l.Wm)(o)]),Yw])]),Zw,$w,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",ey,[ry,(0,l.Wm)(o)]),oy]),(0,l._)("li",null,[(0,l._)("a",ly,[ty,(0,l.Wm)(o)]),ny]),(0,l._)("li",null,[(0,l._)("a",ay,[iy,(0,l.Wm)(o)]),hy,(0,l._)("a",ky,[_y,(0,l.Wm)(o)]),uy]),(0,l._)("li",null,[(0,l._)("a",gy,[py,(0,l.Wm)(o)]),my]),(0,l._)("li",null,[(0,l._)("a",sy,[by,(0,l.Wm)(o)]),fy]),(0,l._)("li",null,[(0,l._)("a",cy,[Uy,(0,l.Wm)(o)]),Gy]),(0,l._)("li",null,[(0,l._)("a",dy,[Wy,(0,l.Wm)(o)]),vy]),(0,l._)("li",null,[(0,l._)("a",wy,[yy,(0,l.Wm)(o)]),xy]),(0,l._)("li",null,[(0,l._)("a",Sy,[Py,(0,l.Wm)(o)]),Ty]),(0,l._)("li",null,[(0,l._)("a",Ay,[zy,(0,l.Wm)(o)]),jy]),(0,l._)("li",null,[(0,l._)("a",My,[Cy,(0,l.Wm)(o)]),Ly]),(0,l._)("li",null,[(0,l._)("a",Ry,[Iy,(0,l.Wm)(o)]),qy]),(0,l._)("li",null,[(0,l._)("a",Hy,[Dy,(0,l.Wm)(o)]),Oy]),(0,l._)("li",null,[(0,l._)("a",Ey,[Ny,(0,l.Wm)(o)]),By]),(0,l._)("li",null,[(0,l._)("a",Qy,[Jy,(0,l.Wm)(o)]),Fy]),(0,l._)("li",null,[(0,l._)("a",Vy,[Xy,(0,l.Wm)(o)]),Ky]),(0,l._)("li",null,[(0,l._)("a",Yy,[Zy,(0,l.Wm)(o)]),$y,(0,l._)("a",ex,[rx,(0,l.Wm)(o)]),ox,(0,l._)("a",lx,[tx,(0,l.Wm)(o)]),nx]),(0,l._)("li",null,[(0,l._)("a",ax,[ix,(0,l.Wm)(o)]),hx]),(0,l._)("li",null,[(0,l._)("a",kx,[_x,(0,l.Wm)(o)]),ux]),(0,l._)("li",null,[(0,l._)("a",gx,[px,(0,l.Wm)(o)]),mx]),(0,l._)("li",null,[(0,l._)("a",sx,[bx,(0,l.Wm)(o)]),fx]),(0,l._)("li",null,[(0,l._)("a",cx,[Ux,(0,l.Wm)(o)]),Gx]),(0,l._)("li",null,[(0,l._)("a",dx,[Wx,(0,l.Wm)(o)]),vx]),(0,l._)("li",null,[(0,l._)("a",wx,[yx,(0,l.Wm)(o)]),xx]),(0,l._)("li",null,[(0,l._)("a",Sx,[Px,(0,l.Wm)(o)]),Tx]),(0,l._)("li",null,[(0,l._)("a",Ax,[zx,(0,l.Wm)(o)]),jx]),(0,l._)("li",null,[(0,l._)("a",Mx,[Cx,(0,l.Wm)(o)]),Lx]),(0,l._)("li",null,[(0,l._)("a",Rx,[Ix,(0,l.Wm)(o)]),qx]),(0,l._)("li",null,[(0,l._)("a",Hx,[Dx,(0,l.Wm)(o)]),Ox,(0,l._)("a",Ex,[Nx,(0,l.Wm)(o)]),Bx,(0,l._)("a",Qx,[Jx,(0,l.Wm)(o)]),Fx])]),Vx,Xx,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Kx,[Yx,(0,l.Wm)(o)]),Zx]),(0,l._)("li",null,[(0,l._)("a",$x,[eS,(0,l.Wm)(o)]),rS]),(0,l._)("li",null,[(0,l._)("a",oS,[lS,(0,l.Wm)(o)]),tS]),(0,l._)("li",null,[(0,l._)("a",nS,[aS,(0,l.Wm)(o)]),iS]),(0,l._)("li",null,[(0,l._)("a",hS,[kS,(0,l.Wm)(o)]),_S]),(0,l._)("li",null,[(0,l._)("a",uS,[gS,(0,l.Wm)(o)]),pS]),(0,l._)("li",null,[(0,l._)("a",mS,[sS,(0,l.Wm)(o)]),bS]),(0,l._)("li",null,[(0,l._)("a",fS,[cS,(0,l.Wm)(o)]),US,(0,l._)("a",GS,[dS,(0,l.Wm)(o)]),WS]),(0,l._)("li",null,[(0,l._)("a",vS,[wS,(0,l.Wm)(o)]),yS]),(0,l._)("li",null,[(0,l._)("a",xS,[SS,(0,l.Wm)(o)]),PS]),(0,l._)("li",null,[(0,l._)("a",TS,[AS,(0,l.Wm)(o)]),zS]),(0,l._)("li",null,[(0,l._)("a",jS,[MS,(0,l.Wm)(o)]),CS]),(0,l._)("li",null,[(0,l._)("a",LS,[RS,(0,l.Wm)(o)]),IS]),(0,l._)("li",null,[(0,l._)("a",qS,[HS,(0,l.Wm)(o)]),DS]),(0,l._)("li",null,[(0,l._)("a",OS,[ES,(0,l.Wm)(o)]),NS]),(0,l._)("li",null,[(0,l._)("a",BS,[QS,(0,l.Wm)(o)]),JS]),(0,l._)("li",null,[(0,l._)("a",FS,[VS,(0,l.Wm)(o)]),XS]),(0,l._)("li",null,[(0,l._)("a",KS,[YS,(0,l.Wm)(o)]),ZS]),(0,l._)("li",null,[(0,l._)("a",$S,[eP,(0,l.Wm)(o)]),rP]),(0,l._)("li",null,[(0,l._)("a",oP,[lP,(0,l.Wm)(o)]),tP]),(0,l._)("li",null,[(0,l._)("a",nP,[aP,(0,l.Wm)(o)]),iP]),(0,l._)("li",null,[(0,l._)("a",hP,[kP,(0,l.Wm)(o)]),_P]),(0,l._)("li",null,[(0,l._)("a",uP,[gP,(0,l.Wm)(o)]),pP]),(0,l._)("li",null,[(0,l._)("a",mP,[sP,(0,l.Wm)(o)]),bP]),(0,l._)("li",null,[(0,l._)("a",fP,[cP,(0,l.Wm)(o)]),UP]),(0,l._)("li",null,[(0,l._)("a",GP,[dP,(0,l.Wm)(o)]),WP]),(0,l._)("li",null,[(0,l._)("a",vP,[wP,(0,l.Wm)(o)]),yP]),(0,l._)("li",null,[(0,l._)("a",xP,[SP,(0,l.Wm)(o)]),PP]),(0,l._)("li",null,[(0,l._)("a",TP,[AP,(0,l.Wm)(o)]),zP]),(0,l._)("li",null,[(0,l._)("a",jP,[MP,(0,l.Wm)(o)]),CP]),(0,l._)("li",null,[(0,l._)("a",LP,[RP,(0,l.Wm)(o)]),IP]),(0,l._)("li",null,[(0,l._)("a",qP,[HP,(0,l.Wm)(o)]),DP]),(0,l._)("li",null,[(0,l._)("a",OP,[EP,(0,l.Wm)(o)]),NP]),(0,l._)("li",null,[(0,l._)("a",BP,[QP,(0,l.Wm)(o)]),JP]),(0,l._)("li",null,[(0,l._)("a",FP,[VP,(0,l.Wm)(o)]),XP]),(0,l._)("li",null,[(0,l._)("a",KP,[YP,(0,l.Wm)(o)]),ZP]),(0,l._)("li",null,[(0,l._)("a",$P,[eT,(0,l.Wm)(o)]),rT]),(0,l._)("li",null,[(0,l._)("a",oT,[lT,(0,l.Wm)(o)]),tT])]),nT,aT,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",iT,[hT,(0,l.Wm)(o)]),kT]),(0,l._)("li",null,[(0,l._)("a",_T,[uT,(0,l.Wm)(o)]),gT]),(0,l._)("li",null,[(0,l._)("a",pT,[mT,(0,l.Wm)(o)]),sT]),(0,l._)("li",null,[(0,l._)("a",bT,[fT,(0,l.Wm)(o)]),cT]),(0,l._)("li",null,[(0,l._)("a",UT,[GT,(0,l.Wm)(o)]),dT]),(0,l._)("li",null,[(0,l._)("a",WT,[vT,(0,l.Wm)(o)]),wT]),(0,l._)("li",null,[(0,l._)("a",yT,[xT,(0,l.Wm)(o)]),ST]),(0,l._)("li",null,[(0,l._)("a",PT,[TT,(0,l.Wm)(o)]),AT]),(0,l._)("li",null,[(0,l._)("a",zT,[jT,(0,l.Wm)(o)]),MT,(0,l._)("a",CT,[LT,(0,l.Wm)(o)]),RT]),(0,l._)("li",null,[(0,l._)("a",IT,[qT,(0,l.Wm)(o)]),HT]),(0,l._)("li",null,[(0,l._)("a",DT,[OT,(0,l.Wm)(o)]),ET]),(0,l._)("li",null,[(0,l._)("a",NT,[BT,(0,l.Wm)(o)]),QT]),(0,l._)("li",null,[(0,l._)("a",JT,[FT,(0,l.Wm)(o)]),VT]),(0,l._)("li",null,[(0,l._)("a",XT,[KT,(0,l.Wm)(o)]),YT,(0,l._)("a",ZT,[$T,(0,l.Wm)(o)]),eA]),(0,l._)("li",null,[(0,l._)("a",rA,[oA,(0,l.Wm)(o)]),lA]),(0,l._)("li",null,[(0,l._)("a",tA,[nA,(0,l.Wm)(o)]),aA]),(0,l._)("li",null,[(0,l._)("a",iA,[hA,(0,l.Wm)(o)]),kA]),(0,l._)("li",null,[(0,l._)("a",_A,[uA,(0,l.Wm)(o)]),gA]),(0,l._)("li",null,[(0,l._)("a",pA,[mA,(0,l.Wm)(o)]),sA]),(0,l._)("li",null,[(0,l._)("a",bA,[fA,(0,l.Wm)(o)]),cA]),(0,l._)("li",null,[(0,l._)("a",UA,[GA,(0,l.Wm)(o)]),dA,(0,l._)("a",WA,[vA,(0,l.Wm)(o)]),wA]),(0,l._)("li",null,[(0,l._)("a",yA,[xA,(0,l.Wm)(o)]),SA]),(0,l._)("li",null,[(0,l._)("a",PA,[TA,(0,l.Wm)(o)]),AA]),(0,l._)("li",null,[(0,l._)("a",zA,[jA,(0,l.Wm)(o)]),MA,(0,l._)("a",CA,[LA,(0,l.Wm)(o)]),RA]),(0,l._)("li",null,[(0,l._)("a",IA,[qA,(0,l.Wm)(o)]),HA]),(0,l._)("li",null,[(0,l._)("a",DA,[OA,(0,l.Wm)(o)]),EA]),(0,l._)("li",null,[(0,l._)("a",NA,[BA,(0,l.Wm)(o)]),QA]),(0,l._)("li",null,[(0,l._)("a",JA,[FA,(0,l.Wm)(o)]),VA])]),XA,KA,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",YA,[ZA,(0,l.Wm)(o)]),$A]),(0,l._)("li",null,[(0,l._)("a",ez,[rz,(0,l.Wm)(o)]),oz]),(0,l._)("li",null,[(0,l._)("a",lz,[tz,(0,l.Wm)(o)]),nz]),(0,l._)("li",null,[(0,l._)("a",az,[iz,(0,l.Wm)(o)]),hz]),(0,l._)("li",null,[(0,l._)("a",kz,[_z,(0,l.Wm)(o)]),uz]),(0,l._)("li",null,[(0,l._)("a",gz,[pz,(0,l.Wm)(o)]),mz]),(0,l._)("li",null,[(0,l._)("a",sz,[bz,(0,l.Wm)(o)]),fz]),(0,l._)("li",null,[(0,l._)("a",cz,[Uz,(0,l.Wm)(o)]),Gz]),(0,l._)("li",null,[(0,l._)("a",dz,[Wz,(0,l.Wm)(o)]),vz,(0,l._)("a",wz,[yz,(0,l.Wm)(o)]),xz]),(0,l._)("li",null,[(0,l._)("a",Sz,[Pz,(0,l.Wm)(o)]),Tz]),(0,l._)("li",null,[(0,l._)("a",Az,[zz,(0,l.Wm)(o)]),jz]),(0,l._)("li",null,[(0,l._)("a",Mz,[Cz,(0,l.Wm)(o)]),Lz]),(0,l._)("li",null,[(0,l._)("a",Rz,[Iz,(0,l.Wm)(o)]),qz]),(0,l._)("li",null,[(0,l._)("a",Hz,[Dz,(0,l.Wm)(o)]),Oz]),(0,l._)("li",null,[(0,l._)("a",Ez,[Nz,(0,l.Wm)(o)]),Bz]),(0,l._)("li",null,[(0,l._)("a",Qz,[Jz,(0,l.Wm)(o)]),Fz]),(0,l._)("li",null,[(0,l._)("a",Vz,[Xz,(0,l.Wm)(o)]),Kz]),(0,l._)("li",null,[(0,l._)("a",Yz,[Zz,(0,l.Wm)(o)]),$z]),(0,l._)("li",null,[(0,l._)("a",ej,[rj,(0,l.Wm)(o)]),oj]),(0,l._)("li",null,[(0,l._)("a",lj,[tj,(0,l.Wm)(o)]),nj]),(0,l._)("li",null,[(0,l._)("a",aj,[ij,(0,l.Wm)(o)]),hj]),(0,l._)("li",null,[(0,l._)("a",kj,[_j,(0,l.Wm)(o)]),uj]),(0,l._)("li",null,[(0,l._)("a",gj,[pj,(0,l.Wm)(o)]),mj]),(0,l._)("li",null,[(0,l._)("a",sj,[bj,(0,l.Wm)(o)]),fj]),(0,l._)("li",null,[(0,l._)("a",cj,[Uj,(0,l.Wm)(o)]),Gj]),(0,l._)("li",null,[(0,l._)("a",dj,[Wj,(0,l.Wm)(o)]),vj]),(0,l._)("li",null,[(0,l._)("a",wj,[yj,(0,l.Wm)(o)]),xj]),(0,l._)("li",null,[(0,l._)("a",Sj,[Pj,(0,l.Wm)(o)]),Tj]),(0,l._)("li",null,[(0,l._)("a",Aj,[zj,(0,l.Wm)(o)]),jj]),(0,l._)("li",null,[(0,l._)("a",Mj,[Cj,(0,l.Wm)(o)]),Lj]),(0,l._)("li",null,[(0,l._)("a",Rj,[Ij,(0,l.Wm)(o)]),qj]),(0,l._)("li",null,[(0,l._)("a",Hj,[Dj,(0,l.Wm)(o)]),Oj]),(0,l._)("li",null,[(0,l._)("a",Ej,[Nj,(0,l.Wm)(o)]),Bj,(0,l._)("a",Qj,[Jj,(0,l.Wm)(o)]),Fj]),(0,l._)("li",null,[(0,l._)("a",Vj,[Xj,(0,l.Wm)(o)]),Kj]),(0,l._)("li",null,[(0,l._)("a",Yj,[Zj,(0,l.Wm)(o)]),$j]),(0,l._)("li",null,[(0,l._)("a",eM,[rM,(0,l.Wm)(o)]),oM]),(0,l._)("li",null,[(0,l._)("a",lM,[tM,(0,l.Wm)(o)]),nM]),(0,l._)("li",null,[(0,l._)("a",aM,[iM,(0,l.Wm)(o)]),hM]),(0,l._)("li",null,[(0,l._)("a",kM,[_M,(0,l.Wm)(o)]),uM]),(0,l._)("li",null,[(0,l._)("a",gM,[pM,(0,l.Wm)(o)]),mM])]),sM,bM,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",fM,[cM,(0,l.Wm)(o)]),UM]),(0,l._)("li",null,[(0,l._)("a",GM,[dM,(0,l.Wm)(o)]),WM]),(0,l._)("li",null,[(0,l._)("a",vM,[wM,(0,l.Wm)(o)]),yM]),(0,l._)("li",null,[(0,l._)("a",xM,[SM,(0,l.Wm)(o)]),PM]),(0,l._)("li",null,[(0,l._)("a",TM,[AM,(0,l.Wm)(o)]),zM])]),jM,MM,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",CM,[LM,(0,l.Wm)(o)]),RM]),(0,l._)("li",null,[(0,l._)("a",IM,[qM,(0,l.Wm)(o)]),HM]),(0,l._)("li",null,[(0,l._)("a",DM,[OM,(0,l.Wm)(o)]),EM]),(0,l._)("li",null,[(0,l._)("a",NM,[BM,(0,l.Wm)(o)]),QM]),(0,l._)("li",null,[(0,l._)("a",JM,[FM,(0,l.Wm)(o)]),VM]),(0,l._)("li",null,[(0,l._)("a",XM,[KM,(0,l.Wm)(o)]),YM]),(0,l._)("li",null,[(0,l._)("a",ZM,[$M,(0,l.Wm)(o)]),eC]),(0,l._)("li",null,[(0,l._)("a",rC,[oC,(0,l.Wm)(o)]),lC]),(0,l._)("li",null,[(0,l._)("a",tC,[nC,(0,l.Wm)(o)]),aC]),(0,l._)("li",null,[(0,l._)("a",iC,[hC,(0,l.Wm)(o)]),kC]),(0,l._)("li",null,[(0,l._)("a",_C,[uC,(0,l.Wm)(o)]),gC]),(0,l._)("li",null,[(0,l._)("a",pC,[mC,(0,l.Wm)(o)]),sC]),(0,l._)("li",null,[(0,l._)("a",bC,[fC,(0,l.Wm)(o)]),cC])]),UC,GC,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",dC,[WC,(0,l.Wm)(o)]),vC]),(0,l._)("li",null,[(0,l._)("a",wC,[yC,(0,l.Wm)(o)]),xC]),(0,l._)("li",null,[(0,l._)("a",SC,[PC,(0,l.Wm)(o)]),TC]),(0,l._)("li",null,[(0,l._)("a",AC,[zC,(0,l.Wm)(o)]),jC]),(0,l._)("li",null,[(0,l._)("a",MC,[CC,(0,l.Wm)(o)]),LC]),(0,l._)("li",null,[(0,l._)("a",RC,[IC,(0,l.Wm)(o)]),qC]),(0,l._)("li",null,[(0,l._)("a",HC,[DC,(0,l.Wm)(o)]),OC]),(0,l._)("li",null,[(0,l._)("a",EC,[NC,(0,l.Wm)(o)]),BC]),(0,l._)("li",null,[(0,l._)("a",QC,[JC,(0,l.Wm)(o)]),FC]),(0,l._)("li",null,[(0,l._)("a",VC,[XC,(0,l.Wm)(o)]),KC,YC,ZC]),(0,l._)("li",null,[(0,l._)("a",$C,[eL,(0,l.Wm)(o)]),rL]),(0,l._)("li",null,[(0,l._)("a",oL,[lL,(0,l.Wm)(o)]),tL]),(0,l._)("li",null,[(0,l._)("a",nL,[aL,(0,l.Wm)(o)]),iL])]),hL,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",kL,[_L,(0,l.Wm)(o)]),uL]),(0,l._)("li",null,[(0,l._)("a",gL,[pL,(0,l.Wm)(o)]),mL]),(0,l._)("li",null,[(0,l._)("a",sL,[bL,(0,l.Wm)(o)]),fL]),(0,l._)("li",null,[(0,l._)("a",cL,[UL,(0,l.Wm)(o)]),GL]),(0,l._)("li",null,[(0,l._)("a",dL,[WL,(0,l.Wm)(o)]),vL])]),wL,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",yL,[xL,(0,l.Wm)(o)]),SL]),(0,l._)("li",null,[(0,l._)("a",PL,[TL,(0,l.Wm)(o)]),AL]),(0,l._)("li",null,[(0,l._)("a",zL,[jL,(0,l.Wm)(o)]),ML]),(0,l._)("li",null,[(0,l._)("a",CL,[LL,(0,l.Wm)(o)]),RL]),(0,l._)("li",null,[(0,l._)("a",IL,[qL,(0,l.Wm)(o)]),HL]),(0,l._)("li",null,[(0,l._)("a",DL,[OL,(0,l.Wm)(o)]),EL]),(0,l._)("li",null,[(0,l._)("a",NL,[BL,(0,l.Wm)(o)]),QL]),(0,l._)("li",null,[(0,l._)("a",JL,[FL,(0,l.Wm)(o)]),VL]),(0,l._)("li",null,[(0,l._)("a",XL,[KL,(0,l.Wm)(o)]),YL]),(0,l._)("li",null,[(0,l._)("a",ZL,[$L,(0,l.Wm)(o)]),eR])]),rR,oR,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",lR,[tR,(0,l.Wm)(o)]),nR]),(0,l._)("li",null,[(0,l._)("a",aR,[iR,(0,l.Wm)(o)]),hR]),(0,l._)("li",null,[(0,l._)("a",kR,[_R,(0,l.Wm)(o)]),uR]),(0,l._)("li",null,[(0,l._)("a",gR,[pR,(0,l.Wm)(o)]),mR]),(0,l._)("li",null,[(0,l._)("a",sR,[bR,(0,l.Wm)(o)]),fR]),(0,l._)("li",null,[(0,l._)("a",cR,[UR,(0,l.Wm)(o)]),GR]),(0,l._)("li",null,[(0,l._)("a",dR,[WR,(0,l.Wm)(o)]),vR]),(0,l._)("li",null,[(0,l._)("a",wR,[yR,(0,l.Wm)(o)]),xR]),(0,l._)("li",null,[(0,l._)("a",SR,[PR,(0,l.Wm)(o)]),TR]),(0,l._)("li",null,[(0,l._)("a",AR,[zR,(0,l.Wm)(o)]),jR]),(0,l._)("li",null,[(0,l._)("a",MR,[CR,(0,l.Wm)(o)]),LR]),(0,l._)("li",null,[(0,l._)("a",RR,[IR,(0,l.Wm)(o)]),qR]),(0,l._)("li",null,[(0,l._)("a",HR,[DR,(0,l.Wm)(o)]),OR]),(0,l._)("li",null,[(0,l._)("a",ER,[NR,(0,l.Wm)(o)]),BR]),(0,l._)("li",null,[(0,l._)("a",QR,[JR,(0,l.Wm)(o)]),FR]),(0,l._)("li",null,[(0,l._)("a",VR,[XR,(0,l.Wm)(o)]),KR]),(0,l._)("li",null,[(0,l._)("a",YR,[ZR,(0,l.Wm)(o)]),$R]),(0,l._)("li",null,[(0,l._)("a",eI,[rI,(0,l.Wm)(o)]),oI]),(0,l._)("li",null,[(0,l._)("a",lI,[tI,(0,l.Wm)(o)]),nI]),(0,l._)("li",null,[(0,l._)("a",aI,[iI,(0,l.Wm)(o)]),hI]),(0,l._)("li",null,[(0,l._)("a",kI,[_I,(0,l.Wm)(o)]),uI]),(0,l._)("li",null,[(0,l._)("a",gI,[pI,(0,l.Wm)(o)]),mI]),(0,l._)("li",null,[(0,l._)("a",sI,[bI,(0,l.Wm)(o)]),fI])]),cI,UI,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",GI,[dI,(0,l.Wm)(o)]),WI]),(0,l._)("li",null,[(0,l._)("a",vI,[wI,(0,l.Wm)(o)]),yI]),(0,l._)("li",null,[(0,l._)("a",xI,[SI,(0,l.Wm)(o)]),PI,(0,l._)("a",TI,[AI,(0,l.Wm)(o)]),zI]),(0,l._)("li",null,[(0,l._)("a",jI,[MI,(0,l.Wm)(o)]),CI]),(0,l._)("li",null,[(0,l._)("a",LI,[RI,(0,l.Wm)(o)]),II]),(0,l._)("li",null,[(0,l._)("a",qI,[HI,(0,l.Wm)(o)]),DI]),(0,l._)("li",null,[(0,l._)("a",OI,[EI,(0,l.Wm)(o)]),NI]),(0,l._)("li",null,[(0,l._)("a",BI,[QI,(0,l.Wm)(o)]),JI]),(0,l._)("li",null,[(0,l._)("a",FI,[VI,(0,l.Wm)(o)]),XI])]),KI,YI,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",ZI,[$I,(0,l.Wm)(o)]),eq]),(0,l._)("li",null,[(0,l._)("a",rq,[oq,(0,l.Wm)(o)]),lq]),(0,l._)("li",null,[(0,l._)("a",tq,[nq,(0,l.Wm)(o)]),aq]),(0,l._)("li",null,[(0,l._)("a",iq,[hq,(0,l.Wm)(o)]),kq]),(0,l._)("li",null,[(0,l._)("a",_q,[uq,(0,l.Wm)(o)]),gq]),(0,l._)("li",null,[(0,l._)("a",pq,[mq,(0,l.Wm)(o)]),sq]),(0,l._)("li",null,[(0,l._)("a",bq,[fq,(0,l.Wm)(o)]),cq]),(0,l._)("li",null,[(0,l._)("a",Uq,[Gq,(0,l.Wm)(o)]),dq]),(0,l._)("li",null,[(0,l._)("a",Wq,[vq,(0,l.Wm)(o)]),wq]),(0,l._)("li",null,[(0,l._)("a",yq,[xq,(0,l.Wm)(o)]),Sq]),(0,l._)("li",null,[(0,l._)("a",Pq,[Tq,(0,l.Wm)(o)]),Aq])]),zq,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",jq,[Mq,(0,l.Wm)(o)]),Cq]),(0,l._)("li",null,[(0,l._)("a",Lq,[Rq,(0,l.Wm)(o)]),Iq]),(0,l._)("li",null,[(0,l._)("a",qq,[Hq,(0,l.Wm)(o)]),Dq]),(0,l._)("li",null,[(0,l._)("a",Oq,[Eq,(0,l.Wm)(o)]),Nq]),(0,l._)("li",null,[(0,l._)("a",Bq,[Qq,(0,l.Wm)(o)]),Jq]),(0,l._)("li",null,[(0,l._)("a",Fq,[Vq,(0,l.Wm)(o)]),Xq]),(0,l._)("li",null,[(0,l._)("a",Kq,[Yq,(0,l.Wm)(o)]),Zq]),(0,l._)("li",null,[(0,l._)("a",$q,[eH,(0,l.Wm)(o)]),rH])]),oH,lH,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",tH,[nH,(0,l.Wm)(o)]),aH]),(0,l._)("li",null,[(0,l._)("a",iH,[hH,(0,l.Wm)(o)]),kH]),(0,l._)("li",null,[(0,l._)("a",_H,[uH,(0,l.Wm)(o)]),gH]),(0,l._)("li",null,[(0,l._)("a",pH,[mH,(0,l.Wm)(o)]),sH]),(0,l._)("li",null,[(0,l._)("a",bH,[fH,(0,l.Wm)(o)]),cH,(0,l._)("a",UH,[GH,(0,l.Wm)(o)]),dH]),(0,l._)("li",null,[(0,l._)("a",WH,[vH,(0,l.Wm)(o)]),wH]),(0,l._)("li",null,[(0,l._)("a",yH,[xH,(0,l.Wm)(o)]),SH]),(0,l._)("li",null,[(0,l._)("a",PH,[TH,(0,l.Wm)(o)]),AH]),(0,l._)("li",null,[(0,l._)("a",zH,[jH,(0,l.Wm)(o)]),MH]),(0,l._)("li",null,[(0,l._)("a",CH,[LH,(0,l.Wm)(o)]),RH]),(0,l._)("li",null,[(0,l._)("a",IH,[qH,(0,l.Wm)(o)]),HH]),(0,l._)("li",null,[(0,l._)("a",DH,[OH,(0,l.Wm)(o)]),EH]),(0,l._)("li",null,[(0,l._)("a",NH,[BH,(0,l.Wm)(o)]),QH]),(0,l._)("li",null,[(0,l._)("a",JH,[FH,(0,l.Wm)(o)]),VH]),(0,l._)("li",null,[(0,l._)("a",XH,[KH,(0,l.Wm)(o)]),YH]),(0,l._)("li",null,[(0,l._)("a",ZH,[$H,(0,l.Wm)(o)]),eD]),(0,l._)("li",null,[(0,l._)("a",rD,[oD,(0,l.Wm)(o)]),lD,(0,l._)("a",tD,[nD,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",aD,[iD,(0,l.Wm)(o)]),hD])]),kD,_D,(0,l._)("ul",null,[(0,l._)("li",null,[uD,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",gD,[pD,(0,l.Wm)(o)]),mD]),(0,l._)("li",null,[(0,l._)("a",sD,[bD,(0,l.Wm)(o)]),fD,cD,UD]),(0,l._)("li",null,[(0,l._)("a",GD,[dD,(0,l.Wm)(o)]),WD]),(0,l._)("li",null,[(0,l._)("a",vD,[wD,(0,l.Wm)(o)]),yD]),(0,l._)("li",null,[(0,l._)("a",xD,[SD,(0,l.Wm)(o)]),PD,TD,AD]),(0,l._)("li",null,[(0,l._)("a",zD,[jD,(0,l.Wm)(o)]),MD]),(0,l._)("li",null,[(0,l._)("a",CD,[LD,(0,l.Wm)(o)]),RD]),(0,l._)("li",null,[(0,l._)("a",ID,[qD,(0,l.Wm)(o)]),HD]),(0,l._)("li",null,[(0,l._)("a",DD,[OD,(0,l.Wm)(o)]),ED]),(0,l._)("li",null,[(0,l._)("a",ND,[BD,(0,l.Wm)(o)]),QD]),(0,l._)("li",null,[(0,l._)("a",JD,[FD,(0,l.Wm)(o)]),VD]),(0,l._)("li",null,[(0,l._)("a",XD,[KD,(0,l.Wm)(o)]),YD]),(0,l._)("li",null,[(0,l._)("a",ZD,[$D,(0,l.Wm)(o)]),eO]),(0,l._)("li",null,[(0,l._)("a",rO,[oO,(0,l.Wm)(o)]),lO]),(0,l._)("li",null,[(0,l._)("a",tO,[nO,(0,l.Wm)(o)]),aO]),(0,l._)("li",null,[(0,l._)("a",iO,[hO,(0,l.Wm)(o)]),kO]),(0,l._)("li",null,[(0,l._)("a",_O,[uO,(0,l.Wm)(o)]),gO]),(0,l._)("li",null,[(0,l._)("a",pO,[mO,(0,l.Wm)(o)]),sO]),(0,l._)("li",null,[(0,l._)("a",bO,[fO,(0,l.Wm)(o)]),cO]),(0,l._)("li",null,[(0,l._)("a",UO,[GO,(0,l.Wm)(o)]),dO]),(0,l._)("li",null,[(0,l._)("a",WO,[vO,(0,l.Wm)(o)]),wO]),(0,l._)("li",null,[(0,l._)("a",yO,[xO,(0,l.Wm)(o)]),SO]),(0,l._)("li",null,[(0,l._)("a",PO,[TO,(0,l.Wm)(o)]),AO]),(0,l._)("li",null,[(0,l._)("a",zO,[jO,(0,l.Wm)(o)]),MO]),(0,l._)("li",null,[(0,l._)("a",CO,[LO,(0,l.Wm)(o)]),RO]),(0,l._)("li",null,[(0,l._)("a",IO,[qO,(0,l.Wm)(o)]),HO])])]),(0,l._)("li",null,[DO,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",OO,[EO,(0,l.Wm)(o)]),NO]),(0,l._)("li",null,[(0,l._)("a",BO,[QO,(0,l.Wm)(o)]),JO]),(0,l._)("li",null,[(0,l._)("a",FO,[VO,(0,l.Wm)(o)]),XO]),(0,l._)("li",null,[(0,l._)("a",KO,[YO,(0,l.Wm)(o)]),ZO]),(0,l._)("li",null,[(0,l._)("a",$O,[eE,(0,l.Wm)(o)]),rE]),(0,l._)("li",null,[(0,l._)("a",oE,[lE,(0,l.Wm)(o)]),tE]),(0,l._)("li",null,[(0,l._)("a",nE,[aE,(0,l.Wm)(o)]),iE]),(0,l._)("li",null,[(0,l._)("a",hE,[kE,(0,l.Wm)(o)]),_E])])]),(0,l._)("li",null,[uE,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",gE,[pE,(0,l.Wm)(o)]),mE]),(0,l._)("li",null,[(0,l._)("a",sE,[bE,(0,l.Wm)(o)]),fE]),(0,l._)("li",null,[(0,l._)("a",cE,[UE,(0,l.Wm)(o)]),GE])])]),(0,l._)("li",null,[dE,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",WE,[vE,(0,l.Wm)(o)]),wE]),(0,l._)("li",null,[(0,l._)("a",yE,[xE,(0,l.Wm)(o)]),SE]),(0,l._)("li",null,[(0,l._)("a",PE,[TE,(0,l.Wm)(o)]),AE]),(0,l._)("li",null,[(0,l._)("a",zE,[jE,(0,l.Wm)(o)]),ME])])])]),CE,LE,(0,l._)("ul",null,[(0,l._)("li",null,[RE,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",IE,[qE,(0,l.Wm)(o)]),HE]),(0,l._)("li",null,[(0,l._)("a",DE,[OE,(0,l.Wm)(o)]),EE]),(0,l._)("li",null,[(0,l._)("a",NE,[BE,(0,l.Wm)(o)]),QE]),(0,l._)("li",null,[(0,l._)("a",JE,[FE,(0,l.Wm)(o)]),VE]),(0,l._)("li",null,[(0,l._)("a",XE,[KE,(0,l.Wm)(o)]),YE]),(0,l._)("li",null,[(0,l._)("a",ZE,[$E,(0,l.Wm)(o)]),eN,(0,l._)("a",rN,[oN,(0,l.Wm)(o)]),lN]),(0,l._)("li",null,[(0,l._)("a",tN,[nN,(0,l.Wm)(o)]),aN]),(0,l._)("li",null,[(0,l._)("a",iN,[hN,(0,l.Wm)(o)]),kN]),(0,l._)("li",null,[(0,l._)("a",_N,[uN,(0,l.Wm)(o)]),gN]),(0,l._)("li",null,[(0,l._)("a",pN,[mN,(0,l.Wm)(o)]),sN]),(0,l._)("li",null,[(0,l._)("a",bN,[fN,(0,l.Wm)(o)]),cN]),(0,l._)("li",null,[(0,l._)("a",UN,[GN,(0,l.Wm)(o)]),dN]),(0,l._)("li",null,[(0,l._)("a",WN,[vN,(0,l.Wm)(o)]),wN]),(0,l._)("li",null,[(0,l._)("a",yN,[xN,(0,l.Wm)(o)]),SN]),(0,l._)("li",null,[(0,l._)("a",PN,[TN,(0,l.Wm)(o)]),AN]),(0,l._)("li",null,[(0,l._)("a",zN,[jN,(0,l.Wm)(o)]),MN]),(0,l._)("li",null,[(0,l._)("a",CN,[LN,(0,l.Wm)(o)]),RN]),(0,l._)("li",null,[(0,l._)("a",IN,[qN,(0,l.Wm)(o)]),HN]),(0,l._)("li",null,[(0,l._)("a",DN,[ON,(0,l.Wm)(o)]),EN]),(0,l._)("li",null,[(0,l._)("a",NN,[BN,(0,l.Wm)(o)]),QN]),(0,l._)("li",null,[(0,l._)("a",JN,[FN,(0,l.Wm)(o)]),VN]),(0,l._)("li",null,[(0,l._)("a",XN,[KN,(0,l.Wm)(o)]),YN]),(0,l._)("li",null,[(0,l._)("a",ZN,[$N,(0,l.Wm)(o)]),eB]),(0,l._)("li",null,[(0,l._)("a",rB,[oB,(0,l.Wm)(o)]),lB]),(0,l._)("li",null,[(0,l._)("a",tB,[nB,(0,l.Wm)(o)]),aB]),(0,l._)("li",null,[(0,l._)("a",iB,[hB,(0,l.Wm)(o)]),kB]),(0,l._)("li",null,[(0,l._)("a",_B,[uB,(0,l.Wm)(o)]),gB]),(0,l._)("li",null,[(0,l._)("a",pB,[mB,(0,l.Wm)(o)]),sB]),(0,l._)("li",null,[(0,l._)("a",bB,[fB,(0,l.Wm)(o)]),cB])])]),(0,l._)("li",null,[UB,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",GB,[dB,(0,l.Wm)(o)]),WB]),(0,l._)("li",null,[(0,l._)("a",vB,[wB,(0,l.Wm)(o)]),yB]),(0,l._)("li",null,[(0,l._)("a",xB,[SB,(0,l.Wm)(o)]),PB]),(0,l._)("li",null,[(0,l._)("a",TB,[AB,(0,l.Wm)(o)]),zB]),(0,l._)("li",null,[(0,l._)("a",jB,[MB,(0,l.Wm)(o)]),CB]),(0,l._)("li",null,[(0,l._)("a",LB,[RB,(0,l.Wm)(o)]),IB])])])]),qB,HB,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",DB,[OB,(0,l.Wm)(o)]),EB,(0,l._)("a",NB,[BB,(0,l.Wm)(o)]),QB]),(0,l._)("li",null,[(0,l._)("a",JB,[FB,(0,l.Wm)(o)]),VB]),(0,l._)("li",null,[(0,l._)("a",XB,[KB,(0,l.Wm)(o)]),YB]),(0,l._)("li",null,[(0,l._)("a",ZB,[$B,(0,l.Wm)(o)]),eQ]),(0,l._)("li",null,[(0,l._)("a",rQ,[oQ,(0,l.Wm)(o)]),lQ,(0,l._)("a",tQ,[nQ,(0,l.Wm)(o)]),aQ]),(0,l._)("li",null,[(0,l._)("a",iQ,[hQ,(0,l.Wm)(o)]),kQ]),(0,l._)("li",null,[(0,l._)("a",_Q,[uQ,(0,l.Wm)(o)]),gQ]),(0,l._)("li",null,[(0,l._)("a",pQ,[mQ,(0,l.Wm)(o)]),sQ]),(0,l._)("li",null,[(0,l._)("a",bQ,[fQ,(0,l.Wm)(o)]),cQ]),(0,l._)("li",null,[(0,l._)("a",UQ,[GQ,(0,l.Wm)(o)]),dQ]),(0,l._)("li",null,[(0,l._)("a",WQ,[vQ,(0,l.Wm)(o)]),wQ]),(0,l._)("li",null,[(0,l._)("a",yQ,[xQ,(0,l.Wm)(o)]),SQ]),(0,l._)("li",null,[(0,l._)("a",PQ,[TQ,(0,l.Wm)(o)]),AQ]),(0,l._)("li",null,[(0,l._)("a",zQ,[jQ,(0,l.Wm)(o)]),MQ,(0,l._)("a",CQ,[LQ,(0,l.Wm)(o)]),RQ,(0,l._)("a",IQ,[qQ,(0,l.Wm)(o)]),HQ,(0,l._)("a",DQ,[OQ,(0,l.Wm)(o)]),EQ,(0,l._)("a",NQ,[BQ,(0,l.Wm)(o)]),QQ,(0,l._)("a",JQ,[FQ,(0,l.Wm)(o)]),VQ,(0,l._)("a",XQ,[KQ,(0,l.Wm)(o)]),YQ,(0,l._)("a",ZQ,[$Q,(0,l.Wm)(o)]),eJ,(0,l._)("a",rJ,[oJ,(0,l.Wm)(o)]),lJ]),(0,l._)("li",null,[(0,l._)("a",tJ,[nJ,(0,l.Wm)(o)]),aJ]),(0,l._)("li",null,[(0,l._)("a",iJ,[hJ,(0,l.Wm)(o)]),kJ]),(0,l._)("li",null,[(0,l._)("a",_J,[uJ,(0,l.Wm)(o)]),gJ]),(0,l._)("li",null,[(0,l._)("a",pJ,[mJ,(0,l.Wm)(o)]),sJ,(0,l._)("a",bJ,[fJ,(0,l.Wm)(o)]),cJ]),(0,l._)("li",null,[(0,l._)("a",UJ,[GJ,(0,l.Wm)(o)]),dJ,(0,l._)("a",WJ,[vJ,(0,l.Wm)(o)]),wJ]),(0,l._)("li",null,[(0,l._)("a",yJ,[xJ,(0,l.Wm)(o)]),SJ]),(0,l._)("li",null,[(0,l._)("a",PJ,[TJ,(0,l.Wm)(o)]),AJ,(0,l._)("a",zJ,[jJ,(0,l.Wm)(o)]),MJ]),(0,l._)("li",null,[(0,l._)("a",CJ,[LJ,(0,l.Wm)(o)]),RJ]),(0,l._)("li",null,[(0,l._)("a",IJ,[qJ,(0,l.Wm)(o)]),HJ]),(0,l._)("li",null,[(0,l._)("a",DJ,[OJ,(0,l.Wm)(o)]),EJ,(0,l._)("a",NJ,[BJ,(0,l.Wm)(o)]),QJ,(0,l._)("a",JJ,[FJ,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",VJ,[XJ,(0,l.Wm)(o)]),KJ]),(0,l._)("li",null,[(0,l._)("a",YJ,[ZJ,(0,l.Wm)(o)]),$J]),(0,l._)("li",null,[(0,l._)("a",eF,[rF,(0,l.Wm)(o)]),oF,(0,l._)("a",lF,[tF,(0,l.Wm)(o)]),nF]),(0,l._)("li",null,[(0,l._)("a",aF,[iF,(0,l.Wm)(o)]),hF]),(0,l._)("li",null,[(0,l._)("a",kF,[_F,(0,l.Wm)(o)]),uF,(0,l._)("a",gF,[pF,(0,l.Wm)(o)]),mF]),(0,l._)("li",null,[(0,l._)("a",sF,[bF,(0,l.Wm)(o)]),fF]),(0,l._)("li",null,[(0,l._)("a",cF,[UF,(0,l.Wm)(o)]),GF]),(0,l._)("li",null,[(0,l._)("a",dF,[WF,(0,l.Wm)(o)]),vF]),(0,l._)("li",null,[(0,l._)("a",wF,[yF,(0,l.Wm)(o)]),xF]),(0,l._)("li",null,[(0,l._)("a",SF,[PF,(0,l.Wm)(o)]),TF]),(0,l._)("li",null,[(0,l._)("a",AF,[zF,(0,l.Wm)(o)]),jF,(0,l._)("a",MF,[CF,(0,l.Wm)(o)]),LF]),(0,l._)("li",null,[(0,l._)("a",RF,[IF,(0,l.Wm)(o)]),qF]),(0,l._)("li",null,[(0,l._)("a",HF,[DF,(0,l.Wm)(o)]),OF,(0,l._)("a",EF,[NF,(0,l.Wm)(o)]),BF]),(0,l._)("li",null,[(0,l._)("a",QF,[JF,(0,l.Wm)(o)]),FF]),(0,l._)("li",null,[(0,l._)("a",VF,[XF,(0,l.Wm)(o)]),KF]),(0,l._)("li",null,[(0,l._)("a",YF,[ZF,(0,l.Wm)(o)]),$F]),(0,l._)("li",null,[(0,l._)("a",eV,[rV,(0,l.Wm)(o)]),oV,(0,l._)("a",lV,[tV,(0,l.Wm)(o)]),nV]),(0,l._)("li",null,[(0,l._)("a",aV,[iV,(0,l.Wm)(o)]),hV,(0,l._)("a",kV,[_V,(0,l.Wm)(o)]),uV]),(0,l._)("li",null,[(0,l._)("a",gV,[pV,(0,l.Wm)(o)]),mV]),(0,l._)("li",null,[(0,l._)("a",sV,[bV,(0,l.Wm)(o)]),fV]),(0,l._)("li",null,[(0,l._)("a",cV,[UV,(0,l.Wm)(o)]),GV]),(0,l._)("li",null,[(0,l._)("a",dV,[WV,(0,l.Wm)(o)]),vV]),(0,l._)("li",null,[(0,l._)("a",wV,[yV,(0,l.Wm)(o)]),xV]),(0,l._)("li",null,[(0,l._)("a",SV,[PV,(0,l.Wm)(o)]),TV]),(0,l._)("li",null,[(0,l._)("a",AV,[zV,(0,l.Wm)(o)]),jV]),(0,l._)("li",null,[(0,l._)("a",MV,[CV,(0,l.Wm)(o)]),LV]),(0,l._)("li",null,[(0,l._)("a",RV,[IV,(0,l.Wm)(o)]),qV]),(0,l._)("li",null,[(0,l._)("a",HV,[DV,(0,l.Wm)(o)]),OV]),(0,l._)("li",null,[(0,l._)("a",EV,[NV,(0,l.Wm)(o)]),BV]),(0,l._)("li",null,[(0,l._)("a",QV,[JV,(0,l.Wm)(o)]),FV]),(0,l._)("li",null,[(0,l._)("a",VV,[XV,(0,l.Wm)(o)]),KV]),(0,l._)("li",null,[(0,l._)("a",YV,[ZV,(0,l.Wm)(o)]),$V]),(0,l._)("li",null,[(0,l._)("a",eX,[rX,(0,l.Wm)(o)]),oX]),(0,l._)("li",null,[(0,l._)("a",lX,[tX,(0,l.Wm)(o)]),nX]),(0,l._)("li",null,[(0,l._)("a",aX,[iX,(0,l.Wm)(o)]),hX]),(0,l._)("li",null,[(0,l._)("a",kX,[_X,(0,l.Wm)(o)]),uX,(0,l._)("a",gX,[pX,(0,l.Wm)(o)]),mX]),(0,l._)("li",null,[(0,l._)("a",sX,[bX,(0,l.Wm)(o)]),fX]),(0,l._)("li",null,[(0,l._)("a",cX,[UX,(0,l.Wm)(o)]),GX]),(0,l._)("li",null,[(0,l._)("a",dX,[WX,(0,l.Wm)(o)]),vX]),(0,l._)("li",null,[(0,l._)("a",wX,[yX,(0,l.Wm)(o)]),xX]),(0,l._)("li",null,[(0,l._)("a",SX,[PX,(0,l.Wm)(o)]),TX])]),AX,zX,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",jX,[MX,(0,l.Wm)(o)]),CX]),(0,l._)("li",null,[(0,l._)("a",LX,[RX,(0,l.Wm)(o)]),IX]),(0,l._)("li",null,[(0,l._)("a",qX,[HX,(0,l.Wm)(o)]),DX]),(0,l._)("li",null,[(0,l._)("a",OX,[EX,(0,l.Wm)(o)]),NX]),(0,l._)("li",null,[(0,l._)("a",BX,[QX,(0,l.Wm)(o)]),JX]),(0,l._)("li",null,[(0,l._)("a",FX,[VX,(0,l.Wm)(o)]),XX]),(0,l._)("li",null,[(0,l._)("a",KX,[YX,(0,l.Wm)(o)]),ZX]),(0,l._)("li",null,[(0,l._)("a",$X,[eK,(0,l.Wm)(o)]),rK]),(0,l._)("li",null,[(0,l._)("a",oK,[lK,(0,l.Wm)(o)]),tK,(0,l._)("a",nK,[aK,(0,l.Wm)(o)]),iK]),(0,l._)("li",null,[(0,l._)("a",hK,[kK,(0,l.Wm)(o)]),_K]),(0,l._)("li",null,[(0,l._)("a",uK,[gK,(0,l.Wm)(o)]),pK]),(0,l._)("li",null,[(0,l._)("a",mK,[sK,(0,l.Wm)(o)]),bK]),(0,l._)("li",null,[(0,l._)("a",fK,[cK,(0,l.Wm)(o)]),UK]),(0,l._)("li",null,[(0,l._)("a",GK,[dK,(0,l.Wm)(o)]),WK]),(0,l._)("li",null,[(0,l._)("a",vK,[wK,(0,l.Wm)(o)]),yK,(0,l._)("a",xK,[SK,(0,l.Wm)(o)]),PK]),(0,l._)("li",null,[(0,l._)("a",TK,[AK,(0,l.Wm)(o)]),zK]),(0,l._)("li",null,[(0,l._)("a",jK,[MK,(0,l.Wm)(o)]),CK]),(0,l._)("li",null,[(0,l._)("a",LK,[RK,(0,l.Wm)(o)]),IK]),(0,l._)("li",null,[(0,l._)("a",qK,[HK,(0,l.Wm)(o)]),DK]),(0,l._)("li",null,[(0,l._)("a",OK,[EK,(0,l.Wm)(o)]),NK]),(0,l._)("li",null,[(0,l._)("a",BK,[QK,(0,l.Wm)(o)]),JK]),(0,l._)("li",null,[(0,l._)("a",FK,[VK,(0,l.Wm)(o)]),XK]),(0,l._)("li",null,[(0,l._)("a",KK,[YK,(0,l.Wm)(o)]),ZK]),(0,l._)("li",null,[(0,l._)("a",$K,[eY,(0,l.Wm)(o)]),rY]),(0,l._)("li",null,[(0,l._)("a",oY,[lY,(0,l.Wm)(o)]),tY]),(0,l._)("li",null,[(0,l._)("a",nY,[aY,(0,l.Wm)(o)]),iY]),(0,l._)("li",null,[(0,l._)("a",hY,[kY,(0,l.Wm)(o)]),_Y]),(0,l._)("li",null,[(0,l._)("a",uY,[gY,(0,l.Wm)(o)]),pY]),(0,l._)("li",null,[(0,l._)("a",mY,[sY,(0,l.Wm)(o)]),bY]),(0,l._)("li",null,[(0,l._)("a",fY,[cY,(0,l.Wm)(o)]),UY]),(0,l._)("li",null,[(0,l._)("a",GY,[dY,(0,l.Wm)(o)]),WY]),(0,l._)("li",null,[(0,l._)("a",vY,[wY,(0,l.Wm)(o)]),yY]),(0,l._)("li",null,[(0,l._)("a",xY,[SY,(0,l.Wm)(o)]),PY]),(0,l._)("li",null,[(0,l._)("a",TY,[AY,(0,l.Wm)(o)]),zY]),(0,l._)("li",null,[(0,l._)("a",jY,[MY,(0,l.Wm)(o)]),CY]),(0,l._)("li",null,[(0,l._)("a",LY,[RY,(0,l.Wm)(o)]),IY]),(0,l._)("li",null,[(0,l._)("a",qY,[HY,(0,l.Wm)(o)]),DY]),(0,l._)("li",null,[(0,l._)("a",OY,[EY,(0,l.Wm)(o)]),NY]),(0,l._)("li",null,[(0,l._)("a",BY,[QY,(0,l.Wm)(o)]),JY]),(0,l._)("li",null,[(0,l._)("a",FY,[VY,(0,l.Wm)(o)]),XY]),(0,l._)("li",null,[(0,l._)("a",KY,[YY,(0,l.Wm)(o)]),ZY]),(0,l._)("li",null,[(0,l._)("a",$Y,[eZ,(0,l.Wm)(o)]),rZ]),(0,l._)("li",null,[(0,l._)("a",oZ,[lZ,(0,l.Wm)(o)]),tZ]),(0,l._)("li",null,[(0,l._)("a",nZ,[aZ,(0,l.Wm)(o)]),iZ]),(0,l._)("li",null,[(0,l._)("a",hZ,[kZ,(0,l.Wm)(o)]),_Z]),(0,l._)("li",null,[(0,l._)("a",uZ,[gZ,(0,l.Wm)(o)]),pZ]),(0,l._)("li",null,[(0,l._)("a",mZ,[sZ,(0,l.Wm)(o)]),bZ]),(0,l._)("li",null,[(0,l._)("a",fZ,[cZ,(0,l.Wm)(o)]),UZ]),(0,l._)("li",null,[(0,l._)("a",GZ,[dZ,(0,l.Wm)(o)]),WZ]),(0,l._)("li",null,[(0,l._)("a",vZ,[wZ,(0,l.Wm)(o)]),yZ]),(0,l._)("li",null,[(0,l._)("a",xZ,[SZ,(0,l.Wm)(o)]),PZ]),(0,l._)("li",null,[(0,l._)("a",TZ,[AZ,(0,l.Wm)(o)]),zZ,jZ,MZ,CZ,LZ]),(0,l._)("li",null,[(0,l._)("a",RZ,[IZ,(0,l.Wm)(o)]),qZ]),(0,l._)("li",null,[(0,l._)("a",HZ,[DZ,(0,l.Wm)(o)]),OZ,EZ,NZ]),(0,l._)("li",null,[(0,l._)("a",BZ,[QZ,(0,l.Wm)(o)]),JZ]),(0,l._)("li",null,[(0,l._)("a",FZ,[VZ,(0,l.Wm)(o)]),XZ]),(0,l._)("li",null,[(0,l._)("a",KZ,[YZ,(0,l.Wm)(o)]),ZZ]),(0,l._)("li",null,[(0,l._)("a",$Z,[e$,(0,l.Wm)(o)]),r$]),(0,l._)("li",null,[(0,l._)("a",o$,[l$,(0,l.Wm)(o)]),t$]),(0,l._)("li",null,[(0,l._)("a",n$,[a$,(0,l.Wm)(o)]),i$]),(0,l._)("li",null,[(0,l._)("a",h$,[k$,(0,l.Wm)(o)]),_$]),(0,l._)("li",null,[(0,l._)("a",u$,[g$,(0,l.Wm)(o)]),p$]),(0,l._)("li",null,[(0,l._)("a",m$,[s$,(0,l.Wm)(o)]),b$]),(0,l._)("li",null,[(0,l._)("a",f$,[c$,(0,l.Wm)(o)]),U$]),(0,l._)("li",null,[(0,l._)("a",G$,[d$,(0,l.Wm)(o)]),W$]),(0,l._)("li",null,[(0,l._)("a",v$,[w$,(0,l.Wm)(o)]),y$]),(0,l._)("li",null,[(0,l._)("a",x$,[S$,(0,l.Wm)(o)]),P$]),(0,l._)("li",null,[(0,l._)("a",T$,[A$,(0,l.Wm)(o)]),z$]),(0,l._)("li",null,[(0,l._)("a",j$,[M$,(0,l.Wm)(o)]),C$]),(0,l._)("li",null,[(0,l._)("a",L$,[R$,(0,l.Wm)(o)]),I$]),(0,l._)("li",null,[(0,l._)("a",q$,[H$,(0,l.Wm)(o)]),D$]),(0,l._)("li",null,[(0,l._)("a",O$,[E$,(0,l.Wm)(o)]),N$]),(0,l._)("li",null,[(0,l._)("a",B$,[Q$,(0,l.Wm)(o)]),J$]),(0,l._)("li",null,[(0,l._)("a",F$,[V$,(0,l.Wm)(o)]),X$]),(0,l._)("li",null,[(0,l._)("a",K$,[Y$,(0,l.Wm)(o)]),Z$]),(0,l._)("li",null,[(0,l._)("a",$$,[e0,(0,l.Wm)(o)]),r0]),(0,l._)("li",null,[(0,l._)("a",o0,[l0,(0,l.Wm)(o)]),t0]),(0,l._)("li",null,[(0,l._)("a",n0,[a0,(0,l.Wm)(o)]),i0]),(0,l._)("li",null,[(0,l._)("a",h0,[k0,(0,l.Wm)(o)]),_0]),(0,l._)("li",null,[(0,l._)("a",u0,[g0,(0,l.Wm)(o)]),p0]),(0,l._)("li",null,[(0,l._)("a",m0,[s0,(0,l.Wm)(o)]),b0]),(0,l._)("li",null,[(0,l._)("a",f0,[c0,(0,l.Wm)(o)]),U0]),(0,l._)("li",null,[(0,l._)("a",G0,[d0,(0,l.Wm)(o)]),W0]),(0,l._)("li",null,[(0,l._)("a",v0,[w0,(0,l.Wm)(o)]),y0]),(0,l._)("li",null,[(0,l._)("a",x0,[S0,(0,l.Wm)(o)]),P0]),(0,l._)("li",null,[(0,l._)("a",T0,[A0,(0,l.Wm)(o)]),z0]),(0,l._)("li",null,[(0,l._)("a",j0,[M0,(0,l.Wm)(o)]),C0]),(0,l._)("li",null,[(0,l._)("a",L0,[R0,(0,l.Wm)(o)]),I0]),(0,l._)("li",null,[(0,l._)("a",q0,[H0,(0,l.Wm)(o)]),D0]),(0,l._)("li",null,[(0,l._)("a",O0,[E0,(0,l.Wm)(o)]),N0]),(0,l._)("li",null,[(0,l._)("a",B0,[Q0,(0,l.Wm)(o)]),J0]),(0,l._)("li",null,[(0,l._)("a",F0,[V0,(0,l.Wm)(o)]),X0]),(0,l._)("li",null,[(0,l._)("a",K0,[Y0,(0,l.Wm)(o)]),Z0]),(0,l._)("li",null,[(0,l._)("a",$0,[e1,(0,l.Wm)(o)]),r1]),(0,l._)("li",null,[(0,l._)("a",o1,[l1,(0,l.Wm)(o)]),t1]),(0,l._)("li",null,[(0,l._)("a",n1,[a1,(0,l.Wm)(o)]),i1]),(0,l._)("li",null,[(0,l._)("a",h1,[k1,(0,l.Wm)(o)]),_1]),(0,l._)("li",null,[(0,l._)("a",u1,[g1,(0,l.Wm)(o)]),p1]),(0,l._)("li",null,[(0,l._)("a",m1,[s1,(0,l.Wm)(o)]),b1]),(0,l._)("li",null,[(0,l._)("a",f1,[c1,(0,l.Wm)(o)]),U1]),(0,l._)("li",null,[(0,l._)("a",G1,[d1,(0,l.Wm)(o)]),W1]),(0,l._)("li",null,[(0,l._)("a",v1,[w1,(0,l.Wm)(o)]),y1]),(0,l._)("li",null,[(0,l._)("a",x1,[S1,(0,l.Wm)(o)]),P1]),(0,l._)("li",null,[(0,l._)("a",T1,[A1,(0,l.Wm)(o)]),z1]),(0,l._)("li",null,[(0,l._)("a",j1,[M1,(0,l.Wm)(o)]),C1]),(0,l._)("li",null,[(0,l._)("a",L1,[R1,(0,l.Wm)(o)]),I1])]),q1,H1,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",D1,[O1,(0,l.Wm)(o)]),E1]),(0,l._)("li",null,[(0,l._)("a",N1,[B1,(0,l.Wm)(o)]),Q1]),(0,l._)("li",null,[(0,l._)("a",J1,[F1,(0,l.Wm)(o)]),V1]),(0,l._)("li",null,[(0,l._)("a",X1,[K1,(0,l.Wm)(o)]),Y1])]),Z1,$1,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",e2,[r2,(0,l.Wm)(o)]),o2]),(0,l._)("li",null,[(0,l._)("a",l2,[t2,(0,l.Wm)(o)]),n2]),(0,l._)("li",null,[(0,l._)("a",a2,[i2,(0,l.Wm)(o)]),h2]),(0,l._)("li",null,[(0,l._)("a",k2,[_2,(0,l.Wm)(o)]),u2])]),g2,p2,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",m2,[s2,(0,l.Wm)(o)]),b2]),(0,l._)("li",null,[(0,l._)("a",f2,[c2,(0,l.Wm)(o)]),U2]),(0,l._)("li",null,[(0,l._)("a",G2,[d2,(0,l.Wm)(o)]),W2]),(0,l._)("li",null,[(0,l._)("a",v2,[w2,(0,l.Wm)(o)]),y2]),(0,l._)("li",null,[(0,l._)("a",x2,[S2,(0,l.Wm)(o)]),P2])]),T2,A2,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",z2,[j2,(0,l.Wm)(o)]),M2]),(0,l._)("li",null,[(0,l._)("a",C2,[L2,(0,l.Wm)(o)]),R2]),(0,l._)("li",null,[(0,l._)("a",I2,[q2,(0,l.Wm)(o)]),H2]),(0,l._)("li",null,[(0,l._)("a",D2,[O2,(0,l.Wm)(o)]),E2]),(0,l._)("li",null,[(0,l._)("a",N2,[B2,(0,l.Wm)(o)]),Q2]),(0,l._)("li",null,[(0,l._)("a",J2,[F2,(0,l.Wm)(o)]),V2]),(0,l._)("li",null,[(0,l._)("a",X2,[K2,(0,l.Wm)(o)]),Y2]),(0,l._)("li",null,[(0,l._)("a",Z2,[$2,(0,l.Wm)(o)]),e3]),(0,l._)("li",null,[(0,l._)("a",r3,[o3,(0,l.Wm)(o)]),l3]),(0,l._)("li",null,[(0,l._)("a",t3,[n3,(0,l.Wm)(o)]),a3]),(0,l._)("li",null,[(0,l._)("a",i3,[h3,(0,l.Wm)(o)]),k3]),(0,l._)("li",null,[(0,l._)("a",_3,[u3,(0,l.Wm)(o)]),g3]),(0,l._)("li",null,[(0,l._)("a",p3,[m3,(0,l.Wm)(o)]),s3]),(0,l._)("li",null,[(0,l._)("a",b3,[f3,(0,l.Wm)(o)]),c3]),(0,l._)("li",null,[(0,l._)("a",U3,[G3,(0,l.Wm)(o)]),d3]),(0,l._)("li",null,[(0,l._)("a",W3,[v3,(0,l.Wm)(o)]),w3]),(0,l._)("li",null,[(0,l._)("a",y3,[x3,(0,l.Wm)(o)]),S3]),(0,l._)("li",null,[(0,l._)("a",P3,[T3,(0,l.Wm)(o)]),A3]),(0,l._)("li",null,[(0,l._)("a",z3,[j3,(0,l.Wm)(o)]),M3]),(0,l._)("li",null,[(0,l._)("a",C3,[L3,(0,l.Wm)(o)]),R3]),(0,l._)("li",null,[(0,l._)("a",I3,[q3,(0,l.Wm)(o)]),H3]),(0,l._)("li",null,[(0,l._)("a",D3,[O3,(0,l.Wm)(o)]),E3]),(0,l._)("li",null,[(0,l._)("a",N3,[B3,(0,l.Wm)(o)]),Q3]),(0,l._)("li",null,[(0,l._)("a",J3,[F3,(0,l.Wm)(o)]),V3]),(0,l._)("li",null,[(0,l._)("a",X3,[K3,(0,l.Wm)(o)]),Y3,Z3,$3]),(0,l._)("li",null,[(0,l._)("a",e4,[r4,(0,l.Wm)(o)]),o4]),(0,l._)("li",null,[(0,l._)("a",l4,[t4,(0,l.Wm)(o)]),n4]),(0,l._)("li",null,[(0,l._)("a",a4,[i4,(0,l.Wm)(o)]),h4]),(0,l._)("li",null,[(0,l._)("a",k4,[_4,(0,l.Wm)(o)]),u4]),(0,l._)("li",null,[(0,l._)("a",g4,[p4,(0,l.Wm)(o)]),m4]),(0,l._)("li",null,[(0,l._)("a",s4,[b4,(0,l.Wm)(o)]),f4]),(0,l._)("li",null,[(0,l._)("a",c4,[U4,(0,l.Wm)(o)]),G4]),(0,l._)("li",null,[(0,l._)("a",d4,[W4,(0,l.Wm)(o)]),v4])]),w4,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",y4,[x4,(0,l.Wm)(o)]),S4]),(0,l._)("li",null,[(0,l._)("a",P4,[T4,(0,l.Wm)(o)]),A4])]),z4,j4,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",M4,[C4,(0,l.Wm)(o)]),L4]),(0,l._)("li",null,[(0,l._)("a",R4,[I4,(0,l.Wm)(o)]),q4]),(0,l._)("li",null,[(0,l._)("a",H4,[D4,(0,l.Wm)(o)]),O4]),(0,l._)("li",null,[(0,l._)("a",E4,[N4,(0,l.Wm)(o)]),B4]),(0,l._)("li",null,[(0,l._)("a",Q4,[J4,(0,l.Wm)(o)]),F4])]),V4,X4,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",K4,[Y4,(0,l.Wm)(o)]),Z4]),(0,l._)("li",null,[(0,l._)("a",$4,[e5,(0,l.Wm)(o)]),r5]),(0,l._)("li",null,[(0,l._)("a",o5,[l5,(0,l.Wm)(o)]),t5]),(0,l._)("li",null,[(0,l._)("a",n5,[a5,(0,l.Wm)(o)]),i5]),(0,l._)("li",null,[(0,l._)("a",h5,[k5,(0,l.Wm)(o)]),_5,u5,g5])]),p5,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",m5,[s5,(0,l.Wm)(o)]),b5]),(0,l._)("li",null,[(0,l._)("a",f5,[c5,(0,l.Wm)(o)]),U5]),(0,l._)("li",null,[(0,l._)("a",G5,[d5,(0,l.Wm)(o)]),W5]),(0,l._)("li",null,[(0,l._)("a",v5,[w5,(0,l.Wm)(o)]),y5]),(0,l._)("li",null,[(0,l._)("a",x5,[S5,(0,l.Wm)(o)]),P5]),(0,l._)("li",null,[(0,l._)("a",T5,[A5,(0,l.Wm)(o)]),z5]),(0,l._)("li",null,[(0,l._)("a",j5,[M5,(0,l.Wm)(o)]),C5]),(0,l._)("li",null,[(0,l._)("a",L5,[R5,(0,l.Wm)(o)]),I5]),(0,l._)("li",null,[(0,l._)("a",q5,[H5,(0,l.Wm)(o)]),D5]),(0,l._)("li",null,[(0,l._)("a",O5,[E5,(0,l.Wm)(o)]),N5]),(0,l._)("li",null,[(0,l._)("a",B5,[Q5,(0,l.Wm)(o)]),J5]),(0,l._)("li",null,[(0,l._)("a",F5,[V5,(0,l.Wm)(o)]),X5])]),K5,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Y5,[Z5,(0,l.Wm)(o)]),$5]),(0,l._)("li",null,[(0,l._)("a",e9,[r9,(0,l.Wm)(o)]),o9]),(0,l._)("li",null,[(0,l._)("a",l9,[t9,(0,l.Wm)(o)]),n9]),(0,l._)("li",null,[(0,l._)("a",a9,[i9,(0,l.Wm)(o)]),h9]),(0,l._)("li",null,[(0,l._)("a",k9,[_9,(0,l.Wm)(o)]),u9,g9,p9,m9,s9]),(0,l._)("li",null,[(0,l._)("a",b9,[f9,(0,l.Wm)(o)]),c9]),(0,l._)("li",null,[(0,l._)("a",U9,[G9,(0,l.Wm)(o)]),d9,W9,v9]),(0,l._)("li",null,[(0,l._)("a",w9,[y9,(0,l.Wm)(o)]),x9,S9,P9]),(0,l._)("li",null,[(0,l._)("a",T9,[A9,(0,l.Wm)(o)]),z9]),(0,l._)("li",null,[(0,l._)("a",j9,[M9,(0,l.Wm)(o)]),C9]),(0,l._)("li",null,[(0,l._)("a",L9,[R9,(0,l.Wm)(o)]),I9]),(0,l._)("li",null,[(0,l._)("a",q9,[H9,(0,l.Wm)(o)]),D9]),(0,l._)("li",null,[(0,l._)("a",O9,[E9,(0,l.Wm)(o)]),N9]),(0,l._)("li",null,[(0,l._)("a",B9,[Q9,(0,l.Wm)(o)]),J9]),(0,l._)("li",null,[(0,l._)("a",F9,[V9,(0,l.Wm)(o)]),X9]),(0,l._)("li",null,[(0,l._)("a",K9,[Y9,(0,l.Wm)(o)]),Z9]),(0,l._)("li",null,[(0,l._)("a",$9,[e7,(0,l.Wm)(o)]),r7]),(0,l._)("li",null,[(0,l._)("a",o7,[l7,(0,l.Wm)(o)]),t7]),(0,l._)("li",null,[(0,l._)("a",n7,[a7,(0,l.Wm)(o)]),i7]),(0,l._)("li",null,[(0,l._)("a",h7,[k7,(0,l.Wm)(o)]),_7,u7,g7,p7]),(0,l._)("li",null,[(0,l._)("a",m7,[s7,(0,l.Wm)(o)]),b7])]),f7,c7,U7,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",G7,[d7,(0,l.Wm)(o)]),W7]),(0,l._)("li",null,[(0,l._)("a",v7,[w7,(0,l.Wm)(o)]),y7]),(0,l._)("li",null,[(0,l._)("a",x7,[S7,(0,l.Wm)(o)]),P7]),(0,l._)("li",null,[(0,l._)("a",T7,[A7,(0,l.Wm)(o)]),z7]),(0,l._)("li",null,[(0,l._)("a",j7,[M7,(0,l.Wm)(o)]),C7]),(0,l._)("li",null,[(0,l._)("a",L7,[R7,(0,l.Wm)(o)]),I7]),(0,l._)("li",null,[(0,l._)("a",q7,[H7,(0,l.Wm)(o)]),D7]),(0,l._)("li",null,[(0,l._)("a",O7,[E7,(0,l.Wm)(o)]),N7]),(0,l._)("li",null,[(0,l._)("a",B7,[Q7,(0,l.Wm)(o)]),J7]),(0,l._)("li",null,[(0,l._)("a",F7,[V7,(0,l.Wm)(o)]),X7]),(0,l._)("li",null,[(0,l._)("a",K7,[Y7,(0,l.Wm)(o)]),Z7]),(0,l._)("li",null,[(0,l._)("a",$7,[e8,(0,l.Wm)(o)]),r8]),(0,l._)("li",null,[(0,l._)("a",o8,[l8,(0,l.Wm)(o)]),t8]),(0,l._)("li",null,[(0,l._)("a",n8,[a8,(0,l.Wm)(o)]),i8]),(0,l._)("li",null,[(0,l._)("a",h8,[k8,(0,l.Wm)(o)]),_8]),(0,l._)("li",null,[(0,l._)("a",u8,[g8,(0,l.Wm)(o)]),p8]),(0,l._)("li",null,[(0,l._)("a",m8,[s8,(0,l.Wm)(o)]),b8]),(0,l._)("li",null,[(0,l._)("a",f8,[c8,(0,l.Wm)(o)]),U8]),(0,l._)("li",null,[(0,l._)("a",G8,[d8,(0,l.Wm)(o)]),W8,v8,w8]),(0,l._)("li",null,[(0,l._)("a",y8,[x8,(0,l.Wm)(o)]),S8]),(0,l._)("li",null,[(0,l._)("a",P8,[T8,(0,l.Wm)(o)]),A8]),(0,l._)("li",null,[(0,l._)("a",z8,[j8,(0,l.Wm)(o)]),M8])]),C8,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",L8,[R8,(0,l.Wm)(o)]),I8]),(0,l._)("li",null,[(0,l._)("a",q8,[H8,(0,l.Wm)(o)]),D8]),(0,l._)("li",null,[(0,l._)("a",O8,[E8,(0,l.Wm)(o)]),N8]),(0,l._)("li",null,[(0,l._)("a",B8,[Q8,(0,l.Wm)(o)]),J8]),(0,l._)("li",null,[(0,l._)("a",F8,[V8,(0,l.Wm)(o)]),X8]),(0,l._)("li",null,[(0,l._)("a",K8,[Y8,(0,l.Wm)(o)]),Z8]),(0,l._)("li",null,[(0,l._)("a",$8,[e6,(0,l.Wm)(o)]),r6]),(0,l._)("li",null,[(0,l._)("a",o6,[l6,(0,l.Wm)(o)]),t6]),(0,l._)("li",null,[(0,l._)("a",n6,[a6,(0,l.Wm)(o)]),i6]),(0,l._)("li",null,[(0,l._)("a",h6,[k6,(0,l.Wm)(o)]),_6]),(0,l._)("li",null,[(0,l._)("a",u6,[g6,(0,l.Wm)(o)]),p6]),(0,l._)("li",null,[(0,l._)("a",m6,[s6,(0,l.Wm)(o)]),b6])]),f6,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",c6,[U6,(0,l.Wm)(o)]),G6,d6,W6,v6,w6]),(0,l._)("li",null,[(0,l._)("a",y6,[x6,(0,l.Wm)(o)]),S6]),(0,l._)("li",null,[(0,l._)("a",P6,[T6,(0,l.Wm)(o)]),A6]),(0,l._)("li",null,[(0,l._)("a",z6,[j6,(0,l.Wm)(o)]),M6]),(0,l._)("li",null,[(0,l._)("a",C6,[L6,(0,l.Wm)(o)]),R6]),(0,l._)("li",null,[(0,l._)("a",I6,[q6,(0,l.Wm)(o)]),H6]),(0,l._)("li",null,[(0,l._)("a",D6,[O6,(0,l.Wm)(o)]),E6]),(0,l._)("li",null,[(0,l._)("a",N6,[B6,(0,l.Wm)(o)]),Q6])]),J6,F6,V6,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",X6,[K6,(0,l.Wm)(o)]),Y6]),(0,l._)("li",null,[(0,l._)("a",Z6,[$6,(0,l.Wm)(o)]),eee]),(0,l._)("li",null,[(0,l._)("a",ree,[oee,(0,l.Wm)(o)]),lee]),(0,l._)("li",null,[(0,l._)("a",tee,[nee,(0,l.Wm)(o)]),aee]),(0,l._)("li",null,[(0,l._)("a",iee,[hee,(0,l.Wm)(o)]),kee]),(0,l._)("li",null,[(0,l._)("a",_ee,[uee,(0,l.Wm)(o)]),gee]),(0,l._)("li",null,[(0,l._)("a",pee,[mee,(0,l.Wm)(o)]),see]),(0,l._)("li",null,[(0,l._)("a",bee,[fee,(0,l.Wm)(o)]),cee]),(0,l._)("li",null,[(0,l._)("a",Uee,[Gee,(0,l.Wm)(o)]),dee]),(0,l._)("li",null,[(0,l._)("a",Wee,[vee,(0,l.Wm)(o)]),wee]),(0,l._)("li",null,[(0,l._)("a",yee,[xee,(0,l.Wm)(o)]),See,Pee,Tee]),(0,l._)("li",null,[(0,l._)("a",Aee,[zee,(0,l.Wm)(o)]),jee]),(0,l._)("li",null,[(0,l._)("a",Mee,[Cee,(0,l.Wm)(o)]),Lee,(0,l._)("a",Ree,[Iee,(0,l.Wm)(o)]),qee]),(0,l._)("li",null,[(0,l._)("a",Hee,[Dee,(0,l.Wm)(o)]),Oee]),(0,l._)("li",null,[(0,l._)("a",Eee,[Nee,(0,l.Wm)(o)]),Bee]),(0,l._)("li",null,[(0,l._)("a",Qee,[Jee,(0,l.Wm)(o)]),Fee]),(0,l._)("li",null,[(0,l._)("a",Vee,[Xee,(0,l.Wm)(o)]),Kee]),(0,l._)("li",null,[(0,l._)("a",Yee,[Zee,(0,l.Wm)(o)]),$ee]),(0,l._)("li",null,[(0,l._)("a",ere,[rre,(0,l.Wm)(o)]),ore]),(0,l._)("li",null,[(0,l._)("a",lre,[tre,(0,l.Wm)(o)]),nre]),(0,l._)("li",null,[(0,l._)("a",are,[ire,(0,l.Wm)(o)]),hre]),(0,l._)("li",null,[(0,l._)("a",kre,[_re,(0,l.Wm)(o)]),ure]),(0,l._)("li",null,[(0,l._)("a",gre,[pre,(0,l.Wm)(o)]),mre]),(0,l._)("li",null,[(0,l._)("a",sre,[bre,(0,l.Wm)(o)]),fre]),(0,l._)("li",null,[(0,l._)("a",cre,[Ure,(0,l.Wm)(o)]),Gre]),(0,l._)("li",null,[(0,l._)("a",dre,[Wre,(0,l.Wm)(o)]),vre]),(0,l._)("li",null,[(0,l._)("a",wre,[yre,(0,l.Wm)(o)]),xre]),(0,l._)("li",null,[(0,l._)("a",Sre,[Pre,(0,l.Wm)(o)]),Tre]),(0,l._)("li",null,[(0,l._)("a",Are,[zre,(0,l.Wm)(o)]),jre]),(0,l._)("li",null,[(0,l._)("a",Mre,[Cre,(0,l.Wm)(o)]),Lre]),(0,l._)("li",null,[(0,l._)("a",Rre,[Ire,(0,l.Wm)(o)]),qre]),(0,l._)("li",null,[(0,l._)("a",Hre,[Dre,(0,l.Wm)(o)]),Ore]),(0,l._)("li",null,[(0,l._)("a",Ere,[Nre,(0,l.Wm)(o)]),Bre]),(0,l._)("li",null,[(0,l._)("a",Qre,[Jre,(0,l.Wm)(o)]),Fre]),(0,l._)("li",null,[(0,l._)("a",Vre,[Xre,(0,l.Wm)(o)]),Kre]),(0,l._)("li",null,[(0,l._)("a",Yre,[Zre,(0,l.Wm)(o)]),$re]),(0,l._)("li",null,[(0,l._)("a",eoe,[roe,(0,l.Wm)(o)]),ooe]),(0,l._)("li",null,[(0,l._)("a",loe,[toe,(0,l.Wm)(o)]),noe]),(0,l._)("li",null,[(0,l._)("a",aoe,[ioe,(0,l.Wm)(o)]),hoe]),(0,l._)("li",null,[(0,l._)("a",koe,[_oe,(0,l.Wm)(o)]),uoe])]),goe,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",poe,[moe,(0,l.Wm)(o)]),soe]),(0,l._)("li",null,[(0,l._)("a",boe,[foe,(0,l.Wm)(o)]),coe]),(0,l._)("li",null,[(0,l._)("a",Uoe,[Goe,(0,l.Wm)(o)]),doe]),(0,l._)("li",null,[(0,l._)("a",Woe,[voe,(0,l.Wm)(o)]),woe]),(0,l._)("li",null,[(0,l._)("a",yoe,[xoe,(0,l.Wm)(o)]),Soe]),(0,l._)("li",null,[(0,l._)("a",Poe,[Toe,(0,l.Wm)(o)]),Aoe]),(0,l._)("li",null,[(0,l._)("a",zoe,[joe,(0,l.Wm)(o)]),Moe]),(0,l._)("li",null,[(0,l._)("a",Coe,[Loe,(0,l.Wm)(o)]),Roe]),(0,l._)("li",null,[(0,l._)("a",Ioe,[qoe,(0,l.Wm)(o)]),Hoe]),(0,l._)("li",null,[(0,l._)("a",Doe,[Ooe,(0,l.Wm)(o)]),Eoe]),(0,l._)("li",null,[(0,l._)("a",Noe,[Boe,(0,l.Wm)(o)]),Qoe]),(0,l._)("li",null,[(0,l._)("a",Joe,[Foe,(0,l.Wm)(o)]),Voe]),(0,l._)("li",null,[(0,l._)("a",Xoe,[Koe,(0,l.Wm)(o)]),Yoe]),(0,l._)("li",null,[(0,l._)("a",Zoe,[$oe,(0,l.Wm)(o)]),ele]),(0,l._)("li",null,[(0,l._)("a",rle,[ole,(0,l.Wm)(o)]),lle]),(0,l._)("li",null,[(0,l._)("a",tle,[nle,(0,l.Wm)(o)]),ale]),(0,l._)("li",null,[(0,l._)("a",ile,[hle,(0,l.Wm)(o)]),kle]),(0,l._)("li",null,[(0,l._)("a",_le,[ule,(0,l.Wm)(o)]),gle]),(0,l._)("li",null,[(0,l._)("a",ple,[mle,(0,l.Wm)(o)]),sle]),(0,l._)("li",null,[(0,l._)("a",ble,[fle,(0,l.Wm)(o)]),cle]),(0,l._)("li",null,[(0,l._)("a",Ule,[Gle,(0,l.Wm)(o)]),dle]),(0,l._)("li",null,[(0,l._)("a",Wle,[vle,(0,l.Wm)(o)]),wle]),(0,l._)("li",null,[(0,l._)("a",yle,[xle,(0,l.Wm)(o)]),Sle]),(0,l._)("li",null,[(0,l._)("a",Ple,[Tle,(0,l.Wm)(o)]),Ale]),(0,l._)("li",null,[(0,l._)("a",zle,[jle,(0,l.Wm)(o)]),Mle]),(0,l._)("li",null,[(0,l._)("a",Cle,[Lle,(0,l.Wm)(o)]),Rle]),(0,l._)("li",null,[(0,l._)("a",Ile,[qle,(0,l.Wm)(o)]),Hle]),(0,l._)("li",null,[(0,l._)("a",Dle,[Ole,(0,l.Wm)(o)]),Ele]),(0,l._)("li",null,[(0,l._)("a",Nle,[Ble,(0,l.Wm)(o)]),Qle]),(0,l._)("li",null,[(0,l._)("a",Jle,[Fle,(0,l.Wm)(o)]),Vle]),(0,l._)("li",null,[(0,l._)("a",Xle,[Kle,(0,l.Wm)(o)]),Yle]),(0,l._)("li",null,[(0,l._)("a",Zle,[$le,(0,l.Wm)(o)]),ete]),(0,l._)("li",null,[(0,l._)("a",rte,[ote,(0,l.Wm)(o)]),lte]),(0,l._)("li",null,[(0,l._)("a",tte,[nte,(0,l.Wm)(o)]),ate]),(0,l._)("li",null,[(0,l._)("a",ite,[hte,(0,l.Wm)(o)]),kte]),(0,l._)("li",null,[(0,l._)("a",_te,[ute,(0,l.Wm)(o)]),gte]),(0,l._)("li",null,[(0,l._)("a",pte,[mte,(0,l.Wm)(o)]),ste]),(0,l._)("li",null,[(0,l._)("a",bte,[fte,(0,l.Wm)(o)]),cte]),(0,l._)("li",null,[(0,l._)("a",Ute,[Gte,(0,l.Wm)(o)]),dte]),(0,l._)("li",null,[(0,l._)("a",Wte,[vte,(0,l.Wm)(o)]),wte]),(0,l._)("li",null,[(0,l._)("a",yte,[xte,(0,l.Wm)(o)]),Ste]),(0,l._)("li",null,[(0,l._)("a",Pte,[Tte,(0,l.Wm)(o)]),Ate]),(0,l._)("li",null,[(0,l._)("a",zte,[jte,(0,l.Wm)(o)]),Mte]),(0,l._)("li",null,[(0,l._)("a",Cte,[Lte,(0,l.Wm)(o)]),Rte])]),Ite,qte,Hte,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Dte,[Ote,(0,l.Wm)(o)]),Ete]),(0,l._)("li",null,[(0,l._)("a",Nte,[Bte,(0,l.Wm)(o)]),Qte]),(0,l._)("li",null,[(0,l._)("a",Jte,[Fte,(0,l.Wm)(o)]),Vte]),(0,l._)("li",null,[(0,l._)("a",Xte,[Kte,(0,l.Wm)(o)]),Yte]),(0,l._)("li",null,[(0,l._)("a",Zte,[$te,(0,l.Wm)(o)]),ene]),(0,l._)("li",null,[(0,l._)("a",rne,[one,(0,l.Wm)(o)]),lne]),(0,l._)("li",null,[(0,l._)("a",tne,[nne,(0,l.Wm)(o)]),ane]),(0,l._)("li",null,[(0,l._)("a",ine,[hne,(0,l.Wm)(o)]),kne]),(0,l._)("li",null,[(0,l._)("a",_ne,[une,(0,l.Wm)(o)]),gne]),(0,l._)("li",null,[(0,l._)("a",pne,[mne,(0,l.Wm)(o)]),sne]),(0,l._)("li",null,[(0,l._)("a",bne,[fne,(0,l.Wm)(o)]),cne]),(0,l._)("li",null,[(0,l._)("a",Une,[Gne,(0,l.Wm)(o)]),dne]),(0,l._)("li",null,[(0,l._)("a",Wne,[vne,(0,l.Wm)(o)]),wne]),(0,l._)("li",null,[(0,l._)("a",yne,[xne,(0,l.Wm)(o)]),Sne])]),Pne,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Tne,[Ane,(0,l.Wm)(o)]),zne]),(0,l._)("li",null,[(0,l._)("a",jne,[Mne,(0,l.Wm)(o)]),Cne]),(0,l._)("li",null,[(0,l._)("a",Lne,[Rne,(0,l.Wm)(o)]),Ine]),(0,l._)("li",null,[(0,l._)("a",qne,[Hne,(0,l.Wm)(o)]),Dne]),(0,l._)("li",null,[(0,l._)("a",One,[Ene,(0,l.Wm)(o)]),Nne]),(0,l._)("li",null,[(0,l._)("a",Bne,[Qne,(0,l.Wm)(o)]),Jne]),(0,l._)("li",null,[(0,l._)("a",Fne,[Vne,(0,l.Wm)(o)]),Xne]),(0,l._)("li",null,[(0,l._)("a",Kne,[Yne,(0,l.Wm)(o)]),Zne]),(0,l._)("li",null,[(0,l._)("a",$ne,[eae,(0,l.Wm)(o)]),rae]),(0,l._)("li",null,[(0,l._)("a",oae,[lae,(0,l.Wm)(o)]),tae]),(0,l._)("li",null,[(0,l._)("a",nae,[aae,(0,l.Wm)(o)]),iae])]),hae,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",kae,[_ae,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",uae,[gae,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",pae,[mae,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",sae,[bae,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",fae,[cae,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",Uae,[Gae,(0,l.Wm)(o)]),dae]),(0,l._)("li",null,[(0,l._)("a",Wae,[vae,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",wae,[yae,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",xae,[Sae,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",Pae,[Tae,(0,l.Wm)(o)])])]),Aae,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",zae,[jae,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",Mae,[Cae,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",Lae,[Rae,(0,l.Wm)(o)])]),(0,l._)("li",null,[(0,l._)("a",Iae,[qae,(0,l.Wm)(o)])])]),Hae,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Dae,[Oae,(0,l.Wm)(o)]),Eae]),(0,l._)("li",null,[(0,l._)("a",Nae,[Bae,(0,l.Wm)(o)]),Qae]),(0,l._)("li",null,[(0,l._)("a",Jae,[Fae,(0,l.Wm)(o)]),Vae]),(0,l._)("li",null,[(0,l._)("a",Xae,[Kae,(0,l.Wm)(o)]),Yae]),(0,l._)("li",null,[(0,l._)("a",Zae,[$ae,(0,l.Wm)(o)]),eie]),(0,l._)("li",null,[(0,l._)("a",rie,[oie,(0,l.Wm)(o)]),lie]),(0,l._)("li",null,[(0,l._)("a",tie,[nie,(0,l.Wm)(o)]),aie]),(0,l._)("li",null,[(0,l._)("a",iie,[hie,(0,l.Wm)(o)]),kie]),(0,l._)("li",null,[(0,l._)("a",_ie,[uie,(0,l.Wm)(o)]),gie]),(0,l._)("li",null,[(0,l._)("a",pie,[mie,(0,l.Wm)(o)]),sie]),(0,l._)("li",null,[(0,l._)("a",bie,[fie,(0,l.Wm)(o)]),cie]),(0,l._)("li",null,[(0,l._)("a",Uie,[Gie,(0,l.Wm)(o)]),die]),(0,l._)("li",null,[(0,l._)("a",Wie,[vie,(0,l.Wm)(o)]),wie]),(0,l._)("li",null,[(0,l._)("a",yie,[xie,(0,l.Wm)(o)]),Sie]),(0,l._)("li",null,[(0,l._)("a",Pie,[Tie,(0,l.Wm)(o)]),Aie]),(0,l._)("li",null,[(0,l._)("a",zie,[jie,(0,l.Wm)(o)]),Mie]),(0,l._)("li",null,[(0,l._)("a",Cie,[Lie,(0,l.Wm)(o)]),Rie]),(0,l._)("li",null,[(0,l._)("a",Iie,[qie,(0,l.Wm)(o)]),Hie]),(0,l._)("li",null,[(0,l._)("a",Die,[Oie,(0,l.Wm)(o)]),Eie])]),Nie,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",Bie,[Qie,(0,l.Wm)(o)]),Jie]),(0,l._)("li",null,[(0,l._)("a",Fie,[Vie,(0,l.Wm)(o)]),Xie]),(0,l._)("li",null,[(0,l._)("a",Kie,[Yie,(0,l.Wm)(o)]),Zie]),(0,l._)("li",null,[(0,l._)("a",$ie,[ehe,(0,l.Wm)(o)]),rhe]),(0,l._)("li",null,[(0,l._)("a",ohe,[lhe,(0,l.Wm)(o)]),the]),(0,l._)("li",null,[(0,l._)("a",nhe,[ahe,(0,l.Wm)(o)]),ihe]),(0,l._)("li",null,[(0,l._)("a",hhe,[khe,(0,l.Wm)(o)]),_he]),(0,l._)("li",null,[(0,l._)("a",uhe,[ghe,(0,l.Wm)(o)]),phe]),(0,l._)("li",null,[(0,l._)("a",mhe,[she,(0,l.Wm)(o)]),bhe])])])}]])}}]);