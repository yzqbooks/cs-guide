"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[94465],{664:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e=JSON.parse('{"key":"v-4d1095bc","path":"/linux-tutor/linux-tips/linux-nodejs.html","title":"linux的node配置","lang":"zh-CN","frontmatter":{"summary":"linux的node配置 问题 usr/bin/env: \\"node\\": 没有那个文件或目录 手动创建软连接 或者: cli常用命令 yarn add 添加依赖包 yarn cache 全局缓冲 yarn config 配置文件 yarn global 全局安装 yarn info 查看包的信息 yarn install 安装全部依赖 yarn remove","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/linux-tutor/linux-tips/linux-nodejs.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"linux的node配置"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-04-05T13:45:58.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-04-05T13:45:58.000Z"}]]},"excerpt":"","headers":[],"git":{"createdTime":1649166358000,"updatedTime":1649166358000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":4.46,"words":1338},"filePathRelative":"linux-tutor/linux-tips/linux-nodejs.md","localizedDate":"2022年4月5日"}')},84001:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});var e=a(66252);const r=[(0,e.uE)('<h1 id="linux的node配置" tabindex="-1"><a class="header-anchor" href="#linux的node配置" aria-hidden="true">#</a> linux的node配置</h1><p>问题 usr/bin/env: &quot;node&quot;: 没有那个文件或目录</p><p>手动创建软连接</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> -s <span class="token variable"><span class="token variable">`</span><span class="token function">which</span> <span class="token function">node</span><span class="token variable">`</span></span> /usr/bin/node\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> -s /usr/bin/nodejs /usr/bin/node\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>cli常用命令</p><p><strong>yarn add 添加依赖包</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> webpack  安装 latest   最新版本\n<span class="token function">yarn</span> <span class="token function">add</span> package-name@1.2.3    从 registry 里安装这个包的指定版本。\n<span class="token function">yarn</span> <span class="token function">add</span> package-name@tag      安装某个 “tag” 标识的版本（比如 beta、next 或者 latest）\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yarn cache 全局缓冲</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> cache list 列出已缓存的每个包\n<span class="token function">yarn</span> cache <span class="token function">dir</span>  当前的 <span class="token function">yarn</span> 全局缓存在哪里\n<span class="token function">yarn</span> cache clean  运行此命令将清除全局缓存\n<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> cache-folder <span class="token operator">&lt;</span>path<span class="token operator">&gt;</span> 配置缓存目录。\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yarn config 配置文件</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> config 查看配置\nC:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>用户<span class="token operator">&gt;</span>yarn config get bin-links   查看某一项配置\n<span class="token boolean">true</span>\n<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> registry <span class="token string">&#39;https://registry.npm.taobao.org&#39;</span>  转成淘宝镜像\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yarn global 全局安装</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>// <span class="token function">yarn</span> 默认是不建议全局安装的，因为全局安装的包无法通过.lock来捕获到，当你的项目移到别的地方运行的时候就可能出现问题\n<span class="token function">yarn</span> global <span class="token function">add</span> webpack\n<span class="token function">yarn</span> global upgrade webpack\n<span class="token function">yarn</span> global remove webpack\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yarn info 查看包的信息</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> info react \n<span class="token function">yarn</span> info react --json json化一下\n<span class="token function">yarn</span> info react@15.3.0  查看指定版本\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yarn install 安装全部依赖</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>yarn install\n或者\nyarn\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yarn remove 移除依赖</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>yarn remove webpack\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>yarn run 运行一个定义好的脚本</strong></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-package&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;babel src -d lib&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;jest&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yarn upgrade 更新</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> upgrade\n<span class="token function">yarn</span> upgrade left-pad\n<span class="token function">yarn</span> upgrade left-pad@^1.0.0\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yarn why 显示一个包为何要安装</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> why jest\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>yarn publish 发布自己的包</strong></p><p><strong>yarn init 初始化一个项目</strong> 在系统<code>System.getProperty(&quot;user.home&quot;)</code>目录新建.npmrc文件,写入下面的内容</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">registry</span><span class="token operator">=</span>https://registry.npmmirror.com\n<span class="token assign-left variable">disturl</span><span class="token operator">=</span>https://npmmirror.com/dist\nchromedriver-cdnurl<span class="token operator">=</span>https://npmmirror.com/mirrors/chromedriver\ncouchbase-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/couchbase/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\ndebug-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/node-inspector\nelectron-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/electron/\nflow-bin-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/flow/v\nfse-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/fsevents\nfuse-bindings-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/fuse-bindings/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\ngit4win-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/git-for-windows\ngl-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/gl/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\ngrpc-node-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors\nhackrf-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/hackrf/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\nleveldown-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/leveldown/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\nleveldown-hyper-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/leveldown-hyper/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\nmknod-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/mknod/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\nnode-sqlite3-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors\nnode-tk5-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/node-tk5/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\nnodegit-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/nodegit/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>/\noperadriver-cdnurl<span class="token operator">=</span>https://npmmirror.com/mirrors/operadriver\nphantomjs-cdnurl<span class="token operator">=</span>https://npmmirror.com/mirrors/phantomjs\nprofiler-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/node-inspector/\npuppeteer-download-host<span class="token operator">=</span>https://npmmirror.com/mirrors\npython-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/python\nrabin-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/rabin/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\nsass-binary-site<span class="token operator">=</span>https://npmmirror.com/mirrors/node-sass\nsodium-prebuilt-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/sodium-prebuilt/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\nsqlite3-binary-site<span class="token operator">=</span>https://npmmirror.com/mirrors/sqlite3\nutf-8-validate-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/utf-8-validate/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\nutp-native-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/utp-native/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\nzmq-prebuilt-binary-host-mirror<span class="token operator">=</span>https://npmmirror.com/mirrors/zmq-prebuilt/v<span class="token punctuation">{</span>version<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com -g\n<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> disturl https://npmmirror.com/dist -g\n<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> electron_mirror https://npmmirror.com/mirrors/electron/ -g\n<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> sass_binary_site https://npmmirror.com/mirrors/node-sass/ -g\n<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> phantomjs_cdnurl https://npmmirror.com/mirrors/phantomjs/ -g\n<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> chromedriver_cdnurl https://npmmirror.com/dist/chromedriver -g\n<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> operadriver_cdnurl https://npmmirror.com/dist/operadriver -g\n<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> fse_binary_host_mirror https://npmmirror.com/mirrors/fsevents -g\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要更改镜像可以全局安装nrm nvm yrm mirror-config-china等包 npm查找全局安装包: <code>npm root -g</code> 查看安装的所有全局包: <code>npm ls -g</code> 仅查看一级目录:<code>npm ls -g --depth 0 | grep packageName --depth 0</code> yarn查找全局安装包: <code>yarn global dir</code> 配置文件位置 :<code>c:\\Users\\用户名\\</code>  名称: <code>.npmrc .yarnrc</code> 问题描述： npm 和  yarn 的一些缓存和全局安装的包，默认都会在C盘存储，这个对于C盘的宝贵空间来说，实在是不能忍啊。 于是乎，百度了如何改变npm默认的缓存位置 在CMD命令行中执行</p><h1 id="_1-改变npm-全局安装位置" tabindex="-1"><a class="header-anchor" href="#_1-改变npm-全局安装位置" aria-hidden="true">#</a> 1.改变npm 全局安装位置</h1><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">&quot;你的磁盘路径&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="这里是我的路径" tabindex="-1"><a class="header-anchor" href="#这里是我的路径" aria-hidden="true">#</a> 这里是我的路径</h1><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">&quot;D:<span class="token entity" title="\\a">\\a</span>ppCache<span class="token entity" title="\\n">\\n</span>odejs<span class="token entity" title="\\n">\\n</span>ode_global&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="_2-改变-npm-缓存位置" tabindex="-1"><a class="header-anchor" href="#_2-改变-npm-缓存位置" aria-hidden="true">#</a> 2. 改变 npm 缓存位置</h1><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">&quot;你的磁盘路径&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="这里是我的路径-1" tabindex="-1"><a class="header-anchor" href="#这里是我的路径-1" aria-hidden="true">#</a> 这里是我的路径</h1><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">&quot;D:<span class="token entity" title="\\a">\\a</span>ppCache<span class="token entity" title="\\n">\\n</span>odejs<span class="token entity" title="\\n">\\n</span>ode_cache&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后配置一下系统环境变量 将 <code>D:\\appCache\\nodejs\\node_global</code>和 <code>D:\\appCache\\nodejs\\node_global\\node_modules</code>这两个添加到你的系统环境变量中。 Yarn 的安装： 在官网下载 安装包。 修改全局安装位置 和 缓存位置 在CMD命令行中执行</p><h1 id="_1-改变-yarn-全局安装位置" tabindex="-1"><a class="header-anchor" href="#_1-改变-yarn-全局安装位置" aria-hidden="true">#</a> 1.改变 yarn 全局安装位置</h1><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> config  <span class="token builtin class-name">set</span> global-folder <span class="token string">&quot;你的磁盘路径&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="_2-然后你会在你的用户目录找到-yarnrc-的文件-打开它-找到-global-folder-改为-global-folder" tabindex="-1"><a class="header-anchor" href="#_2-然后你会在你的用户目录找到-yarnrc-的文件-打开它-找到-global-folder-改为-global-folder" aria-hidden="true">#</a> 2.然后你会在你的用户目录找到 <code>.yarnrc</code> 的文件，打开它，找到 <code>global-folder</code> ，改为 <code>--global-folder</code></h1><h1 id="这里是我的路径-2" tabindex="-1"><a class="header-anchor" href="#这里是我的路径-2" aria-hidden="true">#</a> 这里是我的路径</h1><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> global-folder <span class="token string">&quot;D:<span class="token entity" title="\\a">\\a</span>ppCache\\yarn\\global&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="_2-改变-yarn-缓存位置" tabindex="-1"><a class="header-anchor" href="#_2-改变-yarn-缓存位置" aria-hidden="true">#</a> 2. 改变 yarn 缓存位置</h1><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> config cache-folder <span class="token string">&quot;你的磁盘路径&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="这里是我的路径-3" tabindex="-1"><a class="header-anchor" href="#这里是我的路径-3" aria-hidden="true">#</a> 这里是我的路径</h1><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> config cache-folder <span class="token string">&quot;D:<span class="token entity" title="\\a">\\a</span>ppCache\\yarn<span class="token entity" title="\\c">\\c</span>ache&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在我们使用 全局安装 包的时候，会在 <code>“D:\\appCache\\yarn\\global”</code>下 生成 node_modules.bin 目录 我们需要将<code>D:\\appCache\\yarn\\global\\node_modules\\.bin</code>整个目录 添加到系统环境变量中去，否则通过yarn 添加的全局包 在cmd 中是找不到的。 检查当前yarn 的 bin的 位置</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> global bin\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>检查当前 yarn 的 全局安装位置</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> global <span class="token function">dir</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>nvm设置镜像</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>nvm 设置淘宝镜像\nwindows版本\n设置npm_mirror:\nnvm npm_mirror https://npmmirror.com/mirrors/npm/\n\n设置node_mirror:\nnvm node_mirror https://npmmirror.com/mirrors/node/\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>linux版本\n在.bashrc中添加下面的内容\nexport NVM_NODEJS_ORG_MIRROR=http://npmmirror.com/mirrors/node\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',57)],i={},o=(0,a(83744).Z)(i,[["render",function(n,s){return(0,e.wg)(),(0,e.iD)("div",null,r)}]])}}]);