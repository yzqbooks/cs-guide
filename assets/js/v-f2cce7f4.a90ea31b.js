"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[67164],{3372:(e,t,o)=>{o.r(t),o.d(t,{data:()=>n});const n=JSON.parse('{"key":"v-f2cce7f4","path":"/linux-tutor/server/Kubernetes-Install-And-Usage.html","title":"Kubernetes 部署","lang":"zh-CN","frontmatter":{"summary":"Kubernetes 部署 环境说明 CentOS 7.4; 购买自阿里云普通的 ECS 华南地区（如果你是购买美国地区的服务器，则直接使用 kubespray 原项目，那些镜像地址不用修改，其他照着文档即可）; 所有机子都是干净的不需要先安装 Docker 等其他容器相关的东西; 建议还是用美国服务器，不然各种网络的坑; 机器简称 内网 IP 地址 部署软","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/linux-tutor/server/Kubernetes-Install-And-Usage.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"Kubernetes 部署"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-06-04T21:01:43.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-06-04T21:01:43.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"环境说明","slug":"环境说明","children":[]},{"level":2,"title":"所有机子都需要的环境准备","slug":"所有机子都需要的环境准备","children":[]},{"level":2,"title":"安装过程","slug":"安装过程","children":[]},{"level":2,"title":"资料","slug":"资料","children":[]}],"git":{"createdTime":1653615455000,"updatedTime":1654376503000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":2}]},"readingTime":{"minutes":6.08,"words":1823},"filePathRelative":"linux-tutor/server/Kubernetes-Install-And-Usage.md","localizedDate":"2022年5月27日"}')},38494:(e,t,o)=>{o.r(t),o.d(t,{default:()=>Y});var n=o(66252);const r=(0,n.uE)('<h1 id="kubernetes-部署" tabindex="-1"><a class="header-anchor" href="#kubernetes-部署" aria-hidden="true">#</a> Kubernetes 部署</h1><h2 id="环境说明" tabindex="-1"><a class="header-anchor" href="#环境说明" aria-hidden="true">#</a> 环境说明</h2><ul><li>CentOS 7.4</li><li>购买自阿里云普通的 ECS 华南地区（如果你是购买美国地区的服务器，则直接使用 kubespray 原项目，那些镜像地址不用修改，其他照着文档即可）</li><li>所有机子都是干净的不需要先安装 Docker 等其他容器相关的东西</li><li>建议还是用美国服务器，不然各种网络的坑</li></ul><table><thead><tr><th>机器简称</th><th>内网 IP 地址</th><th>部署软件</th><th>系统环境</th><th>硬件配置</th></tr></thead><tbody><tr><td>操作机</td><td>172.20.229.224</td><td>ansible</td><td>CentOS 7.4</td><td>1 vCPU + 2 GB</td></tr><tr><td>node1</td><td>172.20.229.225</td><td>master</td><td>CentOS 7.4</td><td>1 vCPU + 4 GB</td></tr><tr><td>node2</td><td>172.20.229.226</td><td>worker</td><td>CentOS 7.4</td><td>1 vCPU + 4 GB</td></tr><tr><td>node3</td><td>172.20.229.227</td><td>worker</td><td>CentOS 7.4</td><td>1 vCPU + 4 GB</td></tr></tbody></table><h2 id="所有机子都需要的环境准备" tabindex="-1"><a class="header-anchor" href="#所有机子都需要的环境准备" aria-hidden="true">#</a> 所有机子都需要的环境准备</h2><ul><li>关闭 SELinux <ul><li>编辑配置文件：<code>vim /etc/selinux/config</code></li><li>把 <code>SELINUX=enforcing</code> 改为 <code>SELINUX=disabled</code></li></ul></li></ul><p>所有节点关闭防火墙：<code>systemctl stop firewalld &amp;&amp; systemctl disable firewalld</code></p><p>安装自己常用的一些组件（非必须）：vim zsh zip unzip lrzsz git</p><h2 id="安装过程" tabindex="-1"><a class="header-anchor" href="#安装过程" aria-hidden="true">#</a> 安装过程</h2><h4 id="操作机安装-ansible" tabindex="-1"><a class="header-anchor" href="#操作机安装-ansible" aria-hidden="true">#</a> 操作机安装 ansible</h4><h1 id="yum-install-y-epel-releaseyum-install-y-python34-python34-pip-python-pip-python-netaddr-ansible-gitpip-install-upgrade-jinja2yum-install-y-gcc-libffi-devel-python-devel-openssl-devel" tabindex="-1"><a class="header-anchor" href="#yum-install-y-epel-releaseyum-install-y-python34-python34-pip-python-pip-python-netaddr-ansible-gitpip-install-upgrade-jinja2yum-install-y-gcc-libffi-devel-python-devel-openssl-devel" aria-hidden="true">#</a> ================================= yum install -y epel-release yum install -y python34 python34-pip python-pip python-netaddr ansible git pip install --upgrade Jinja2 yum install -y gcc libffi-devel python-devel openssl-devel</h1><p>操作机免密码登录到其他节点</p><p>如果还不懂可以具体看我的这篇文章： ssh-keygen ssh-copy-id -i /root/.ssh/id_rsa.pub -p 22 root@172.20.229.225 ssh-copy-id -i /root/.ssh/id_rsa.pub -p 22 root@172.20.229.226 ssh-copy-id -i /root/.ssh/id_rsa.pub -p 22 root@172.20.229.227</p><p>测试下是否可以免登陆： ssh -p 22 root@172.20.229.225 ssh -p 22 root@172.20.229.226 ssh -p 22 root@172.20.229.227</p><h4 id="修改-kubespray-项目配置" tabindex="-1"><a class="header-anchor" href="#修改-kubespray-项目配置" aria-hidden="true">#</a> 修改 kubespray 项目配置</h4>',15),s=(0,n.Uk)("kubespray 项目官网："),l={href:"https://github.com/kubernetes-incubator/kubespray",target:"_blank",rel:"noopener noreferrer"},a=(0,n.Uk)("https://github.com/kubernetes-incubator/kubespray"),i=(0,n._)("p",null,"在本地机子上",-1),u=(0,n.Uk)("git clone "),d={href:"https://github.com/kubernetes-incubator/kubespray.git",target:"_blank",rel:"noopener noreferrer"},c=(0,n.Uk)("https://github.com/kubernetes-incubator/kubespray.git"),p=(0,n._)("p",null,"当前时间（2018-02）最新版本是：v2.4.0，所以我 checkout v2.4.0 的 tag",-1),m=(0,n._)("p",null,"用 IntelliJ IDEA 打开该项目，然后批量替换：",-1),q=(0,n._)("li",null,[(0,n._)("code",null,"gcr.io/"),(0,n.Uk)(" 替换成："),(0,n._)("code",null,"registry.cn-hangzhou.aliyuncs.com/")],-1),h=(0,n.Uk)("因为 gcr.io 这个网站的本地址是："),b={href:"https://cloud.google.com/container-registry/",target:"_blank",rel:"noopener noreferrer"},y=(0,n.Uk)("https://cloud.google.com/container-registry/"),v=(0,n.Uk)("，国内的环境当然就没资格上了，所以才要替换。"),g=(0,n.Uk)("但是需要注意的是，官网的这些镜像阿里云不一定有，所以稳妥点，你最好可以去阿里云检查下的："),k={href:"https://dev.aliyun.com/search.html",target:"_blank",rel:"noopener noreferrer"},f=(0,n.Uk)("https://dev.aliyun.com/search.html"),_=(0,n.Uk)("，或者是："),w={href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"},x=(0,n.Uk)("https://hub.docker.com/"),E=(0,n.uE)('<p>======================================================</p><p>cd /opt/kubespray &amp;&amp; cp -rfp inventory/sample inventory/mycluster</p><p>修改：inventory/mycluster/hosts.ini python3 contrib/inventory_builder/inventory.py 172.20.229.225 172.20.229.226 172.20.229.227</p><h1 id="review-and-change-parameters-under-inventory-mycluster-group-vars" tabindex="-1"><a class="header-anchor" href="#review-and-change-parameters-under-inventory-mycluster-group-vars" aria-hidden="true">#</a> Review and change parameters under <code>inventory/mycluster/group_vars</code></h1><p>cat inventory/mycluster/group_vars/all.yml cat inventory/mycluster/group_vars/k8s-cluster.yml</p><p>修改 /kubespray/inventory/mycluster/hosts.ini，改为如下内容：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>node1 ansible_ssh_host=172.20.229.225 ansible_user=root ip=172.20.229.225\nnode2 ansible_ssh_host=172.20.229.226 ansible_user=root ip=172.20.229.226\nnode3 ansible_ssh_host=172.20.229.227 ansible_user=root ip=172.20.229.227\n\n[kube-master]\nnode1\n\n[etcd]\nnode1\n\n[kube-node]\nnode2\nnode3\n\n[k8s-cluster:children]\nkube-node\nkube-master\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后把这个项目压缩成 zip 上传到操作机的 /opt 根目录上，然后解压。</p><p>然后在操作机上执行：<code>cd /opt/kubespray &amp;&amp; ansible-playbook -i inventory/mycluster/hosts.ini cluster.yml</code> 然后会开始输出一大堆执行任务的东西，等等吧，预计需要 20~60 分钟左右。</p><p>然后报错：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Thursday 08 February 2018  18:03:14 +0800 (0:00:00.038)       0:04:14.420 ***** \nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (4 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (4 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (4 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (3 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (3 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (3 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (2 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (2 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (2 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (1 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (1 retries left).\nfatal: [node1]: FAILED! =&gt; {&quot;attempts&quot;: 4, &quot;changed&quot;: true, &quot;cmd&quot;: [&quot;/usr/bin/docker&quot;, &quot;pull&quot;, &quot;registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64:1.1.2&quot;], &quot;delta&quot;: &quot;0:00:00.413852&quot;, &quot;end&quot;: &quot;2018-02-08 18:03:38.396245&quot;, &quot;msg&quot;: &quot;non-zero return code&quot;, &quot;rc&quot;: 1, &quot;start&quot;: &quot;2018-02-08 18:03:37.982393&quot;, &quot;stderr&quot;: &quot;Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access&quot;, &quot;stderr_lines&quot;: [&quot;Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access&quot;], &quot;stdout&quot;: &quot;&quot;, &quot;stdout_lines&quot;: []}\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (1 retries left).\nfatal: [node3]: FAILED! =&gt; {&quot;attempts&quot;: 4, &quot;changed&quot;: true, &quot;cmd&quot;: [&quot;/usr/bin/docker&quot;, &quot;pull&quot;, &quot;registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64:1.1.2&quot;], &quot;delta&quot;: &quot;0:00:00.421977&quot;, &quot;end&quot;: &quot;2018-02-08 18:03:42.334875&quot;, &quot;msg&quot;: &quot;non-zero return code&quot;, &quot;rc&quot;: 1, &quot;start&quot;: &quot;2018-02-08 18:03:41.912898&quot;, &quot;stderr&quot;: &quot;Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access&quot;, &quot;stderr_lines&quot;: [&quot;Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access&quot;], &quot;stdout&quot;: &quot;&quot;, &quot;stdout_lines&quot;: []}\nfatal: [node2]: FAILED! =&gt; {&quot;attempts&quot;: 4, &quot;changed&quot;: true, &quot;cmd&quot;: [&quot;/usr/bin/docker&quot;, &quot;pull&quot;, &quot;registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64:1.1.2&quot;], &quot;delta&quot;: &quot;0:00:00.390301&quot;, &quot;end&quot;: &quot;2018-02-08 18:03:46.246213&quot;, &quot;msg&quot;: &quot;non-zero return code&quot;, &quot;rc&quot;: 1, &quot;start&quot;: &quot;2018-02-08 18:03:45.855912&quot;, &quot;stderr&quot;: &quot;Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access&quot;, &quot;stderr_lines&quot;: [&quot;Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access&quot;], &quot;stdout&quot;: &quot;&quot;, &quot;stdout_lines&quot;: []}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明这个镜像在阿里云没有，所以我有在 docker 官网找了下，有一个这个：<code>mirrorgooglecontainers/cluster-proportional-autoscaler-amd64</code></p><p>建议你可以找个有 docker 的服务器试一下：<code>docker pull mirrorgooglecontainers/cluster-proportional-autoscaler-amd64</code>，如果能下载，那就说明没问题了。 同时也发现这个 docker hub 用户是北京的，应该同道。</p><p>然后又报了下面这个错误。主要是这个脚本：/usr/local/bin/etcd-scripts/make-ssl-etcd.sh 有这个错误：$&#39;\\r&#39;: command not found 而这个脚本是来自操作机上的 /opt/kubespray/roles/etcd/files 目录</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>fatal: [node1 -&gt; 172.20.229.225]: FAILED! =&gt; {&quot;changed&quot;: true, &quot;cmd&quot;: [&quot;bash&quot;, &quot;-x&quot;, &quot;/usr/local/bin/etcd-scripts/make-ssl-etcd.sh&quot;, &quot;-f&quot;, &quot;/etc/ssl/etcd/openssl.conf&quot;, &quot;-d&quot;, &quot;/etc/ssl/etcd/ssl&quot;], &quot;delta&quot;: &quot;0:00:00.012822&quot;, &quot;end&quot;: &quot;2018-02-08 18:42:09.815776&quot;, &quot;msg&quot;: &quot;non-zero return code&quot;, &quot;rc&quot;: 2, &quot;start&quot;: &quot;2018-02-08 18:42:09.802954&quot;, &quot;stderr&quot;: &quot;+ $&#39;\\\\r&#39;\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 2: $&#39;\\\\r&#39;: command not found\\n+ $&#39;\\\\r&#39;\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 16: $&#39;\\\\r&#39;: command not found\\n+ set -o $&#39;errexit\\\\r&#39;\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 17: set: errexit\\r: invalid option name\\n+ set -o $&#39;pipefail\\\\r&#39;\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 18: set: pipefail\\r: invalid option name\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 19: syntax error near unexpected token `$&#39;\\\\r&#39;&#39;\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 19: `usage()\\r&#39;&quot;, &quot;stderr_lines&quot;: [&quot;+ $&#39;\\\\r&#39;&quot;, &quot;/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 2: $&#39;\\\\r&#39;: command not found&quot;, &quot;+ $&#39;\\\\r&#39;&quot;, &quot;/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 16: $&#39;\\\\r&#39;: command not found&quot;, &quot;+ set -o $&#39;errexit\\\\r&#39;&quot;, &quot;/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 17: set: errexit&quot;, &quot;: invalid option name&quot;, &quot;+ set -o $&#39;pipefail\\\\r&#39;&quot;, &quot;/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 18: set: pipefail&quot;, &quot;: invalid option name&quot;, &quot;/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 19: syntax error near unexpected token `$&#39;\\\\r&#39;&#39;&quot;, &quot;/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 19: `usage()&quot;, &quot;&#39;&quot;], &quot;stdout&quot;: &quot;&quot;, &quot;stdout_lines&quot;: []}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们需要操作这个机节点做这样的操作：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>yum install -y dos2unix unix2dos\n\ncd /opt/kubespray/roles/etcd/files &amp;&amp; dos2unix make-ssl-etcd.sh\ncd /opt/kubespray/roles/kubernetes/secrets/files &amp;&amp; dos2unix make-ssl.sh\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h4><p>SSH 连上 master 节点：ssh root@172.20.229.225 输入：<code>kubectl get nodes</code></p><p>展示出如下信息： NAME STATUS AGE VERSION node1 Ready,SchedulingDisabled 1m v1.6.1+coreos.0 node2 Ready 1m v1.6.1+coreos.0 node3 Ready 1m v1.6.1+coreos.0</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料" aria-hidden="true">#</a> 资料</h2>',21),I={href:"http://www.wisely.top/2017/05/16/kargo-ansible-kubernetes/",target:"_blank",rel:"noopener noreferrer"},D=(0,n.Uk)("http://www.wisely.top/2017/05/16/kargo-ansible-kubernetes/"),R={href:"https://github.com/wiselyman/kubespray",target:"_blank",rel:"noopener noreferrer"},z=(0,n.Uk)("https://github.com/wiselyman/kubespray"),U=(0,n._)("p",null,"======================================================",-1),A=(0,n._)("p",null,"安装bzip2软件",-1),L=(0,n._)("p",null,"yum install -y bzip2",-1),T=(0,n._)("p",null,"tar -xjvf k8s_images.tar.bz2",-1),N=(0,n._)("p",null,"设置 hostname",-1),S=(0,n._)("p",null,"hostnamectl --static set-hostname k8s-master",-1),F=(0,n._)("p",null,"hostnamectl --static set-hostname k8s-node-1",-1),G=(0,n._)("p",null,"在master和slave的/etc/hosts文件中均加入以下内容：",-1),C=(0,n._)("p",null,"172.18.218.96 k8s-master 172.18.218.96 etcd 172.18.218.96 registry 172.18.218.97 k8s-node-1",-1),$={},Y=(0,o(83744).Z)($,[["render",function(e,t){const o=(0,n.up)("ExternalLinkIcon");return(0,n.wg)(),(0,n.iD)("div",null,[r,(0,n._)("ul",null,[(0,n._)("li",null,[s,(0,n._)("a",l,[a,(0,n.Wm)(o)])])]),i,(0,n._)("p",null,[u,(0,n._)("a",d,[c,(0,n.Wm)(o)])]),p,m,(0,n._)("ul",null,[q,(0,n._)("li",null,[h,(0,n._)("a",b,[y,(0,n.Wm)(o)]),v]),(0,n._)("li",null,[g,(0,n._)("a",k,[f,(0,n.Wm)(o)]),_,(0,n._)("a",w,[x,(0,n.Wm)(o)])])]),E,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",I,[D,(0,n.Wm)(o)])]),(0,n._)("li",null,[(0,n._)("a",R,[z,(0,n.Wm)(o)])])]),U,A,L,T,N,S,F,G,C])}]])}}]);