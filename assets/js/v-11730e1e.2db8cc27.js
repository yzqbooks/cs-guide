"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[97583],{22995:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-11730e1e","path":"/java-tutor/stackoverflow/how-can-i-pad-an-integers-with-zeros-on-the-left.html","title":"如何在整数左填充0","lang":"zh-CN","frontmatter":{"summary":"如何在整数左填充0 问题 如何在整数左填充0 举例 1 = \\"0001\\" 答案一，String.format 用0填充，总长度为5 答案二，ApacheCommonsLanguage 如果需要在Java 1.5前使用，可以利用 Apache Commons Language 方法 答案三，DecimalFormat 答案四，自己实现 如果效率很重要的话，相比","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/java-tutor/stackoverflow/how-can-i-pad-an-integers-with-zeros-on-the-left.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"如何在整数左填充0"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-06-04T10:21:53.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-06-04T10:21:53.000Z"}]]},"excerpt":"","headers":[{"level":3,"title":"问题","slug":"问题","children":[]},{"level":3,"title":"答案一，String.format","slug":"答案一-string-format","children":[]},{"level":3,"title":"答案二，ApacheCommonsLanguage","slug":"答案二-apachecommonslanguage","children":[]},{"level":3,"title":"答案三，DecimalFormat","slug":"答案三-decimalformat","children":[]},{"level":3,"title":"答案四，自己实现","slug":"答案四-自己实现","children":[]},{"level":3,"title":"答案，Google Guava","slug":"答案-google-guava","children":[]}],"git":{"createdTime":1647947241000,"updatedTime":1654338113000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":2}]},"readingTime":{"minutes":1.3,"words":390},"filePathRelative":"java-tutor/stackoverflow/how-can-i-pad-an-integers-with-zeros-on-the-left.md","localizedDate":"2022年3月22日"}')},64280:(n,s,a)=>{a.r(s),a.d(s,{default:()=>d});var t=a(66252);const p=(0,t.uE)('<h1 id="如何在整数左填充0" tabindex="-1"><a class="header-anchor" href="#如何在整数左填充0" aria-hidden="true">#</a> 如何在整数左填充0</h1><h3 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h3><p>如何在整数左填充0 举例 1 = &quot;0001&quot;</p><h3 id="答案一-string-format" tabindex="-1"><a class="header-anchor" href="#答案一-string-format" aria-hidden="true">#</a> 答案一，String.format</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%05d&quot;</span><span class="token punctuation">,</span> yournumber<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',5),e=(0,t.Uk)("用0填充，总长度为5 "),o={href:"https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html"),l=(0,t.uE)('<h3 id="答案二-apachecommonslanguage" tabindex="-1"><a class="header-anchor" href="#答案二-apachecommonslanguage" aria-hidden="true">#</a> 答案二，ApacheCommonsLanguage</h3><p>如果需要在Java 1.5前使用，可以利用 Apache Commons Language 方法</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>StringUtils</span><span class="token punctuation">.</span><span class="token function">leftPad</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="答案三-decimalformat" tabindex="-1"><a class="header-anchor" href="#答案三-decimalformat" aria-hidden="true">#</a> 答案三，DecimalFormat</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">DecimalFormat</span></span><span class="token punctuation">;</span>\n    <span class="token keyword">class</span> <span class="token class-name">TestingAndQualityAssuranceDepartment</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            <span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>\n            <span class="token class-name">DecimalFormat</span> df <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DecimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="答案四-自己实现" tabindex="-1"><a class="header-anchor" href="#答案四-自己实现" aria-hidden="true">#</a> 答案四，自己实现</h3><p>如果效率很重要的话，相比于 String.format 函数的可以自己实现</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**\n     * <span class="token keyword">@param</span> <span class="token parameter">in</span> The integer value\n     * <span class="token keyword">@param</span> <span class="token parameter">fill</span> The number of digits to fill\n     * <span class="token keyword">@return</span> The given value left padded with the given number of digits\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">lPadZero</span><span class="token punctuation">(</span><span class="token keyword">int</span> in<span class="token punctuation">,</span> <span class="token keyword">int</span> fill<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n        <span class="token keyword">boolean</span> negative <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> value<span class="token punctuation">,</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span><span class="token punctuation">(</span>in <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            value <span class="token operator">=</span> in<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            negative <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            value <span class="token operator">=</span> <span class="token operator">-</span> in<span class="token punctuation">;</span>\n            in <span class="token operator">=</span> <span class="token operator">-</span> in<span class="token punctuation">;</span>\n            len <span class="token operator">++</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            len <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>         \n            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span> value <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span> len <span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                value <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span><span class="token punctuation">(</span>negative<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> fill<span class="token punctuation">;</span> i <span class="token operator">&gt;</span> len<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       \n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效率对比</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Random</span> rdm<span class="token punctuation">;</span>\n        <span class="token keyword">long</span> start<span class="token punctuation">;</span>\n\n        <span class="token comment">// Using own function</span>\n        rdm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10000000</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token function">lPadZero</span><span class="token punctuation">(</span>rdm<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">20000</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Own function: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000000</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;ms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Using String.format</span>\n        rdm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        \n        start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10000000</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%04d&quot;</span><span class="token punctuation">,</span> rdm<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">20000</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;String.format: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000000</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;ms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果 自己的实现：1697ms String.format：38134ms</p><h3 id="答案-google-guava" tabindex="-1"><a class="header-anchor" href="#答案-google-guava" aria-hidden="true">#</a> 答案，Google Guava</h3><p>Maven：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.google.guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>14.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>样例：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token class-name">Strings</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span> returns <span class="token string">&quot;007&quot;</span>\n    <span class="token class-name">Strings</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token string">&quot;2020&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span> returns <span class="token string">&quot;2020&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意： Guava 是非常有用的库，它提供了很多有用的功能，包括了Collections, Caches, Functional idioms, Concurrency, Strings, Primitives, Ranges, IO, Hashing, EventBus等</p>',17),i=(0,t.Uk)("stackoverflow原址： "),u={href:"http://stackoverflow.com/questions/473282/how-can-i-pad-an-integers-with-zeros-on-the-left",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("http://stackoverflow.com/questions/473282/how-can-i-pad-an-integers-with-zeros-on-the-left"),k={},d=(0,a(83744).Z)(k,[["render",function(n,s){const a=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[p,(0,t._)("p",null,[e,(0,t._)("a",o,[c,(0,t.Wm)(a)])]),l,(0,t._)("p",null,[i,(0,t._)("a",u,[r,(0,t.Wm)(a)])])])}]])}}]);