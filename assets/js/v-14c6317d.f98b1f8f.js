"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[60906],{34108:(e,s,n)=>{n.r(s),n.d(s,{data:()=>a});const a=JSON.parse('{"key":"v-14c6317d","path":"/linux-tutor/base/05_process_manage.html","title":"进程管理工具","lang":"zh-CN","frontmatter":{"index":5,"summary":"进程管理工具 这一节我们介绍进程管理工具； 使用进程管理工具，我们可以查询程序当前的运行状态，或终止一个进程； 任何进程都与文件关联；我们会用到lsof工具（list opened files），作用是列举系统中已经被打开的文件。在linux环境中，任何事物都是文件，设备是文件，目录是文件，甚至sockets也是文件。用好lsof命令，对日常的linux管理","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/linux-tutor/base/05_process_manage.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"进程管理工具"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-10T12:31:56.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-07-10T12:31:56.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"查询进程","slug":"查询进程","children":[]},{"level":2,"title":"终止进程","slug":"终止进程","children":[]},{"level":2,"title":"进程监控","slug":"进程监控","children":[]},{"level":2,"title":"分析线程栈","slug":"分析线程栈","children":[]},{"level":2,"title":"综合运用","slug":"综合运用","children":[]},{"level":2,"title":"总结","slug":"总结","children":[]}],"git":{"createdTime":1653565176000,"updatedTime":1657456316000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":2}]},"readingTime":{"minutes":2.46,"words":737},"filePathRelative":"linux-tutor/base/05_process_manage.md","localizedDate":"2022年5月26日"}')},12301:(e,s,n)=>{n.r(s),n.d(s,{default:()=>l});var a=n(66252);const i=[(0,a.uE)('<h1 id="进程管理工具" tabindex="-1"><a class="header-anchor" href="#进程管理工具" aria-hidden="true">#</a> 进程管理工具</h1><div class="custom-container tip"><p class="custom-container-title">提示</p><p>这一节我们介绍进程管理工具；</p><p>使用进程管理工具，我们可以查询程序当前的运行状态，或终止一个进程；</p><p>任何进程都与文件关联；我们会用到lsof工具（list opened files），作用是列举系统中已经被打开的文件。在linux环境中，任何事物都是文件，设备是文件，目录是文件，甚至sockets也是文件。用好lsof命令，对日常的linux管理非常有帮助。</p></div><h2 id="查询进程" tabindex="-1"><a class="header-anchor" href="#查询进程" aria-hidden="true">#</a> 查询进程</h2><p>查询正在运行的进程信息 :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ps</span> -ef\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>eg:查询归属于用户colin115的进程 :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> colin115\n<span class="token function">ps</span> -lu colin115\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查询进程ID（适合只记得部分进程字段） :</p><pre><code>$pgrep 查找进程\n\neg:查询进程名中含有re的进程\n[/home/weber#]pgrep -l re\n2 kthreadd\n28 ecryptfs-kthrea\n29515 redis-server\n</code></pre><p>以完整的格式显示所有的进程 :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ps</span> -ajx\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示进程信息，并实时更新 :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">top</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看端口占用的进程状态： :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">lsof</span> -i:3306\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看用户username的进程所打开的文件 :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">lsof</span> -u username\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询init进程当前打开的文件 :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">lsof</span> -c init\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询指定的进程ID(23295)打开的文件： :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">lsof</span> -p <span class="token number">23295</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询指定目录下被进程开启的文件（使用+D 递归目录）： :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">lsof</span> +d mydir1/\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="终止进程" tabindex="-1"><a class="header-anchor" href="#终止进程" aria-hidden="true">#</a> 终止进程</h2><p>杀死指定PID的进程 (PID为Process ID) :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">kill</span> PID\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>杀死相关进程 :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">kill</span> -9 <span class="token number">3434</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>杀死job工作 (job为job number) :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">kill</span> %job\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="进程监控" tabindex="-1"><a class="header-anchor" href="#进程监控" aria-hidden="true">#</a> 进程监控</h2><p>查看系统中使用CPU、使用内存最多的进程； :</p><pre><code>$top\n(-&gt;)P\n</code></pre><p>输入top命令后，进入到交互界面；接着输入字符命令后显示相应的进程状态：</p><p>对于进程，平时我们最常想知道的就是哪些进程占用CPU最多，占用内存最多。以下两个命令就可以满足要求:</p><pre><code>P：根据CPU使用百分比大小进行排序。\nM：根据驻留内存大小进行排序。\ni：使top不显示任何闲置或者僵死进程。\n</code></pre><p>这里介绍最使用的几个选项,对于更详细的使用，详见 <code>top</code>{.interpreted-text role=&quot;ref&quot;} ;</p><h2 id="分析线程栈" tabindex="-1"><a class="header-anchor" href="#分析线程栈" aria-hidden="true">#</a> 分析线程栈</h2><p>使用命令pmap，来输出进程内存的状况，可以用来分析线程堆栈； :</p><pre><code>$pmap PID\n\neg:\n[/home/weber#]ps -fe| grep redis\nweber    13508 13070  0 08:14 pts/0    00:00:00 grep --color=auto redis\nweber    29515     1  0  2013 ?        02:55:59 ./redis-server redis.conf\n[/home/weber#]pmap 29515\n29515:   ./redis-server redis.conf\n08048000    768K r-x--  /home/weber/soft/redis-2.6.16/src/redis-server\n08108000      4K r----  /home/weber/soft/redis-2.6.16/src/redis-server\n08109000     12K rw---  /home/weber/soft/redis-2.6.16/src/redis-server\n</code></pre><h2 id="综合运用" tabindex="-1"><a class="header-anchor" href="#综合运用" aria-hidden="true">#</a> 综合运用</h2><p>将用户colin115下的所有进程名以av_开头的进程终止:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\n<span class="token function">ps</span> -u colin115 <span class="token operator">|</span>  <span class="token function">awk</span> <span class="token string">&#39;/av_/ {print &quot;kill -9 &quot; $1}&#39;</span> <span class="token operator">|</span> <span class="token function">sh</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>将用户colin115下所有进程名中包含HOST的进程终止:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ps</span> -fe<span class="token operator">|</span> <span class="token function">grep</span> colin115<span class="token operator">|</span><span class="token function">grep</span> HOST <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> -9<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>ps top lsof kill pmap</p>',47)],r={},l=(0,n(83744).Z)(r,[["render",function(e,s){return(0,a.wg)(),(0,a.iD)("div",null,i)}]])}}]);