"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[51199],{51871:(e,n,i)=>{i.r(n),i.d(n,{data:()=>a});const a=JSON.parse('{"key":"v-425fc586","path":"/python-tutor/python-config/pip-tutor.html","title":"pip配置","lang":"zh-CN","frontmatter":{"summary":"pip配置 安装 python3已经自带了pip,运行python -m pip -V ,就可以看到了 配置文件路径 On Unix and macOS the configuration file is: $HOME/.pip/pip.conf; On Windows the configuration file is: %HOME%\\\\pip\\\\pip.in","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/python-tutor/python-config/pip-tutor.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"pip配置"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-10T12:31:56.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-07-10T12:31:56.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"安装","slug":"安装","children":[]},{"level":2,"title":"配置国内镜像源","slug":"配置国内镜像源","children":[]},{"level":2,"title":"安装依赖","slug":"安装依赖","children":[]}],"git":{"createdTime":1649171852000,"updatedTime":1657456316000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":2}]},"readingTime":{"minutes":2.08,"words":624},"filePathRelative":"python-tutor/python-config/pip-tutor.md","localizedDate":"2022年4月5日"}')},44858:(e,n,i)=>{i.r(n),i.d(n,{default:()=>P});var a=i(66252);const s=(0,a.uE)('<h1 id="pip配置" tabindex="-1"><a class="header-anchor" href="#pip配置" aria-hidden="true">#</a> pip配置</h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>python3已经自带了pip,运行<code>python -m pip -V</code> ,就可以看到了</p><p>配置文件路径</p><ul><li>On Unix and macOS the configuration file is: <code>$HOME/.pip/pip.conf</code></li><li>On Windows the configuration file is: <code>%HOME%\\pip\\pip.ini</code></li></ul><h2 id="配置国内镜像源" tabindex="-1"><a class="header-anchor" href="#配置国内镜像源" aria-hidden="true">#</a> 配置国内镜像源</h2><p>将pip源更换到国内镜像 用pip管理工具安装库文件时，默认使用国外的源文件，因此在国内的下载速度会比较慢，可能只有50KB/s。幸好，国内的一些顶级科研机构已经给我们准备好了各种镜像，下载速度可达2MB/s。 其中，比较常用的国内镜像包括：</p>',7),p=(0,a.Uk)("阿里云 "),t={href:"http://mirrors.aliyun.com/pypi/simple/",target:"_blank",rel:"noopener noreferrer"},l=(0,a.Uk)("http://mirrors.aliyun.com/pypi/simple/"),r=(0,a.Uk)("豆瓣"),o={href:"http://pypi.douban.com/simple/",target:"_blank",rel:"noopener noreferrer"},d=(0,a.Uk)("http://pypi.douban.com/simple/"),c=(0,a.Uk)("清华大学 "),u={href:"https://pypi.tuna.tsinghua.edu.cn/simple/",target:"_blank",rel:"noopener noreferrer"},m=(0,a.Uk)("https://pypi.tuna.tsinghua.edu.cn/simple/"),h=(0,a.Uk)("中国科学技术大学 "),v={href:"http://pypi.mirrors.ustc.edu.cn/simple/",target:"_blank",rel:"noopener noreferrer"},g=(0,a.Uk)("http://pypi.mirrors.ustc.edu.cn/simple/"),b=(0,a.Uk)("华中科技大学"),k={href:"http://pypi.hustunique.com/",target:"_blank",rel:"noopener noreferrer"},y=(0,a.Uk)("http://pypi.hustunique.com/"),f=(0,a._)("p",null,"注意：新版ubuntu要求使用https源。",-1),_=(0,a.Uk)("设置方法：（以清华镜像为例，其它镜像同理）"),x=(0,a._)("br",null,null,-1),U=(0,a.Uk)(" （1）临时使用："),O=(0,a._)("br",null,null,-1),q=(0,a.Uk)(" 可以在使用pip的时候，加上参数-i和镜像地址(如 "),W={href:"https://pypi.tuna.tsinghua.edu.cn/simple",target:"_blank",rel:"noopener noreferrer"},w=(0,a.Uk)("https://pypi.tuna.tsinghua.edu.cn/simple)"),E=(0,a.Uk)(")， 例如：pip install -i "),z={href:"https://pypi.tuna.tsinghua.edu.cn/simple",target:"_blank",rel:"noopener noreferrer"},S=(0,a.Uk)("https://pypi.tuna.tsinghua.edu.cn/simple"),C=(0,a.Uk)(" pandas，这样就会从清华镜像安装pandas库。"),H=(0,a.uE)('<p>（2）永久修改，一劳永逸：<br> （a）Linux下，修改 ~/.pip/pip.conf (没有就创建一个文件夹及文件。文件夹要加“.”，表示是隐藏文件夹) 内容如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n[install]\ntrusted-host = https://pypi.tuna.tsinghua.edu.cn\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(b) windows下，直接在user目录中创建一个pip目录，如：C:\\Users\\xx\\pip，然后新建文件pip.ini，即 %HOMEPATH%\\pip\\pip.ini，在pip.ini文件中输入以下内容（以豆瓣镜像为例）：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[global]\nindex-url = http://pypi.douban.com/simple\n[install]\ntrusted-host = pypi.douban.com\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者使用命令行</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pip config <span class="token builtin class-name">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a> 安装依赖</h2><p>注意:pip默认安装依赖的位置在 <code>python文件夹\\Lib\\site-packages</code> 比如我的就是在<code>C:\\Users\\yanni\\miniconda3\\envs\\condapkg\\Lib\\site-packages</code> conda在某个环境比如condapkg安装依赖比如pandas的时候,会在两个目录生成pandas包目录 使用conda安装依赖和pip安装依赖在pycharm中依赖的位置是一样的,没区别哦</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>miniconda3/pkgs   <span class="token comment"># 这个目录是全局的</span>\nminiconda3/envs/condapkg/Lib/site-packages   <span class="token comment">#这个是condapkg环境的依赖</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>python -m pip <span class="token function">install</span> SomePackage            <span class="token comment"># latest version</span>\npython -m pip <span class="token function">install</span> <span class="token assign-left variable">SomePackage</span><span class="token operator">==</span><span class="token number">1.0</span>.4     <span class="token comment"># specific version</span>\npython -m pip <span class="token function">install</span> <span class="token string">&#39;SomePackage&gt;=1.0.4&#39;</span>     <span class="token comment"># minimum version</span>\npython -m pip uninstall SomePackage            <span class="token comment">#删除依赖</span>\npython -m pip list                <span class="token comment">#列出依赖</span>\npython -m pip search <span class="token string">&quot;query&quot;</span>\n\n\n<span class="token comment">#安装和生成requirements中的依赖</span>\npython -m pip freeze <span class="token operator">&gt;</span> requirements.txt\npython -m pip <span class="token function">install</span> -r requirements.txt\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',11),M={},P=(0,i(83744).Z)(M,[["render",function(e,n){const i=(0,a.up)("ExternalLinkIcon");return(0,a.wg)(),(0,a.iD)("div",null,[s,(0,a._)("ul",null,[(0,a._)("li",null,[p,(0,a._)("a",t,[l,(0,a.Wm)(i)])]),(0,a._)("li",null,[r,(0,a._)("a",o,[d,(0,a.Wm)(i)])]),(0,a._)("li",null,[c,(0,a._)("a",u,[m,(0,a.Wm)(i)])]),(0,a._)("li",null,[h,(0,a._)("a",v,[g,(0,a.Wm)(i)])]),(0,a._)("li",null,[b,(0,a._)("a",k,[y,(0,a.Wm)(i)])])]),f,(0,a._)("p",null,[_,x,U,O,q,(0,a._)("a",W,[w,(0,a.Wm)(i)]),E,(0,a._)("a",z,[S,(0,a.Wm)(i)]),C]),H])}]])}}]);