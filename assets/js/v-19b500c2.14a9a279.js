"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[19679],{31129:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-19b500c2","path":"/java-tutor/springboot/spring-controller.html","title":"springboot使用controller传递参数","lang":"zh-CN","frontmatter":{"summary":"springboot使用controller传递参数 see https://github.com/yzqdev/spring-tutor/tree/dev/spring-transfer 额外内容 AntPathMatcher和PathPattern的区别 详细文档见spring.io 基本传参方式 直接上代码 注意 multipart/form-data","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/java-tutor/springboot/spring-controller.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"springboot使用controller传递参数"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-04-05T15:17:32.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-04-05T15:17:32.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"基本传参方式","slug":"基本传参方式","children":[]},{"level":2,"title":"map传参方式(不推荐)","slug":"map传参方式-不推荐","children":[]}],"git":{"createdTime":1649171852000,"updatedTime":1649171852000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":1.94,"words":583},"filePathRelative":"java-tutor/springboot/spring-controller.md","localizedDate":"2022年4月5日"}')},54027:(n,s,a)=>{a.r(s),a.d(s,{default:()=>q});var t=a(66252);const e=(0,t._)("h1",{id:"springboot使用controller传递参数",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#springboot使用controller传递参数","aria-hidden":"true"},"#"),(0,t.Uk)(" springboot使用controller传递参数")],-1),p={class:"custom-container tip"},o=(0,t._)("p",{class:"custom-container-title"},"提示",-1),c=(0,t.Uk)("see "),l={href:"https://github.com/yzqdev/spring-tutor/tree/dev/spring-transfer",target:"_blank",rel:"noopener noreferrer"},i=(0,t.Uk)("https://github.com/yzqdev/spring-tutor/tree/dev/spring-transfer"),u=(0,t._)("br",null,null,-1),r=(0,t.Uk)(" 额外内容 "),k={href:"https://spring.io/blog/2020/06/30/url-matching-with-pathpattern-in-spring-mvc",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("AntPathMatcher和PathPattern的区别"),v=(0,t._)("br",null,null,-1),m=(0,t.Uk)(" 详细文档见"),g={href:"https://docs.spring.io/spring-framework/docs/5.3.17/reference/html/web.html#mvc-ann-requestmapping-uri-templates",target:"_blank",rel:"noopener noreferrer"},b=(0,t.Uk)("spring.io"),h=(0,t.uE)('<h2 id="基本传参方式" tabindex="-1"><a class="header-anchor" href="#基本传参方式" aria-hidden="true">#</a> 基本传参方式</h2><p>直接上代码</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p><strong>注意</strong> multipart/form-data与x-www-form-urlencoded的区别: multipart/form-data：可以上传文件或者键值对，最后都会转化为一条消息 x-www-form-urlencoded：只能上传键值对，而且键值对都是通过&amp;间隔分开的。 application/json: 上传的是json键值对</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@RequiredArgsConstructor</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">IUserService</span> userService<span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * 获取用户\n     * api使用: http://localhost:9400/user/getUser\n     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">User</span></span><span class="token punctuation">}</span>\n     */</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * 使用pathvariable\n     * api使用: http://localhost:9400/userByPath/abcdde\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">id</span> id\n     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">String</span></span><span class="token punctuation">}</span>\n     */</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;userByPath/{id}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUserByPath</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> id<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 添加用户\n     * api使用: http://localhost:9400/user/addUserstr?username=aa&amp;password=bb\n     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">User</span></span><span class="token punctuation">}</span>\n     */</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/addUser&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> user<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * 添加用户\n     * api使用: http://localhost:9400/user/addUserbody\n     *<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span>\n     <span class="token code-section">*     <span class="token line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span></span>\n     * <span class="token line"><span class="token code language-java"><span class="token punctuation">{</span></span></span>\n     *             <span class="token line"><span class="token code language-java"><span class="token string">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">,</span></span></span>\n     *             <span class="token line"><span class="token code language-java"><span class="token string">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bb&quot;</span></span></span>\n     *         <span class="token line"><span class="token code language-java"><span class="token punctuation">}</span></span></span>\n     *     <span class="token line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span></span>\n     *</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>\n     * <span class="token keyword">@param</span> <span class="token parameter">user</span> 用户\n     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">User</span></span><span class="token punctuation">}</span>\n     */</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/addUserBody&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">addUserBody</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> user<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token doc-comment comment">/**\n     * 添加用户\n     *api使用: http://localhost:9400/user/addUserstr?username=aa&amp;password=bb\n     * <span class="token keyword">@param</span> <span class="token parameter">username</span> 用户名\n     * <span class="token keyword">@param</span> <span class="token parameter">password</span> 密码\n     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">User</span></span><span class="token punctuation">}</span>\n     */</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/addUserstr&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">addUserString</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">username</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> user<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * 删除多个用户\n     * api使用: http://localhost:9400/user/deleteUsers\n     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span>\n     <span class="token code-section">*     <span class="token line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span></span>\n     *         <span class="token line"><span class="token code language-java"><span class="token punctuation">{</span></span></span>\n     *   <span class="token line"><span class="token code language-java"><span class="token string">&quot;userIds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span></span>\n     *     <span class="token line"><span class="token code language-java"><span class="token string">&quot;string&quot;</span></span></span>\n     *   <span class="token line"><span class="token code language-java"><span class="token punctuation">]</span></span></span>\n     * <span class="token line"><span class="token code language-java"><span class="token punctuation">}</span></span></span>\n     *     <span class="token line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span></span>\n     *</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>\n     * <span class="token keyword">@param</span> <span class="token parameter">userDelDto</span> 用户del dto\n     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">HashMap</span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>{@link</span> <span class="token attr-name">String},</span> <span class="token attr-name">{@link</span> <span class="token attr-name">Object}</span><span class="token punctuation">&gt;</span></span>\n     */</span>\n    <span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/deleteUsers&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">deleteUsers</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserDelDto</span> userDelDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;obj&quot;</span><span class="token punctuation">,</span> userDelDto<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> res<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * 删除users1\n     * api使用: http://localhost:9400/user/deleteUsers1\n     *[\n     *   &quot;string&quot;\n     * ]\n     * <span class="token keyword">@param</span> <span class="token parameter">ids</span> id\n     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">HashMap</span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>{@link</span> <span class="token attr-name">String},</span> <span class="token attr-name">{@link</span> <span class="token attr-name">Object}</span><span class="token punctuation">&gt;</span></span>\n     */</span>\n    <span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/deleteUsers1&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">deleteUsers1</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;obj&quot;</span><span class="token punctuation">,</span> ids<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> res<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * 获取请求头信息\n     *\n     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">HashMap</span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>{@link</span> <span class="token attr-name">String},</span> <span class="token attr-name">{@link</span> <span class="token attr-name">Object}</span><span class="token punctuation">&gt;</span></span>\n     */</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/users&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token class-name">RequestHelper</span><span class="token punctuation">.</span><span class="token function">getRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> auth <span class="token operator">=</span> <span class="token class-name">RequestHelper</span><span class="token punctuation">.</span><span class="token function">getRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">,</span> auth<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> res<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * 检索\n     *api使用: http://localhost:9400/user/retrieve?username=aa\n     * <span class="token keyword">@param</span> <span class="token parameter">username</span> 用户名\n     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">User</span></span><span class="token punctuation">}</span>\n     */</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/retrieve&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">retrieve</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">getOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUsername</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="map传参方式-不推荐" tabindex="-1"><a class="header-anchor" href="#map传参方式-不推荐" aria-hidden="true">#</a> map传参方式(不推荐)</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/my&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * 保存\n     * 用map接收\n     * api使用: http://localhost:9400/my/save\n     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span>\n     <span class="token code-section">*     <span class="token line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span></span>\n     *         <span class="token line"><span class="token code language-java"><span class="token punctuation">{</span></span></span>\n     *   <span class="token line"><span class="token code language-java"><span class="token string">&quot;additionalProp1&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span></span>\n     *   <span class="token line"><span class="token code language-java"><span class="token string">&quot;additionalProp2&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span></span>\n     *   <span class="token line"><span class="token code language-java"><span class="token string">&quot;additionalProp3&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span></span>\n     * <span class="token line"><span class="token code language-java"><span class="token punctuation">}</span></span></span>\n     *     <span class="token line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span></span>\n     *</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>\n     * <span class="token keyword">@param</span> <span class="token parameter">map</span> 地图\n     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Map</span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>{@link</span> <span class="token attr-name">String},</span> <span class="token attr-name">{@link</span> <span class="token attr-name">String}</span><span class="token punctuation">&gt;</span></span>\n     */</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/save&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n       <span class="token keyword">return</span> map<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',6),y={},q=(0,a(83744).Z)(y,[["render",function(n,s){const a=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[e,(0,t._)("div",p,[o,(0,t._)("p",null,[c,(0,t._)("a",l,[i,(0,t.Wm)(a)]),u,r,(0,t._)("a",k,[d,(0,t.Wm)(a)]),v,m,(0,t._)("a",g,[b,(0,t.Wm)(a)])])]),h])}]])}}]);