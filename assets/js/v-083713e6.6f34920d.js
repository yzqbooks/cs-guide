"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[19188],{79545:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e=JSON.parse('{"key":"v-083713e6","path":"/linux-tutor/server/Logstash-Base.html","title":"Logstash 知识","lang":"zh-CN","frontmatter":{"summary":"Logstash 知识 基础知识 基于 ruby 写的; 官网文档：; 如果是通过网络来收集，并不需要所有机子都装，但是如果是要通过读取文件来收集，那文件所在的那个机子就的安装; 配置文件的写法格式：; logstash 5.5.0 安装 假设你已经看了 Elasticsearch 专题文，并且设置了仓库地址：Elasticsearch 相关知识; 安装：y","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/linux-tutor/server/Logstash-Base.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"Logstash 知识"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-06-04T21:01:43.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-06-04T21:01:43.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"基础知识","slug":"基础知识","children":[{"level":3,"title":"logstash 5.5.0 安装","slug":"logstash-5-5-0-安装","children":[]},{"level":3,"title":"logstash 2.4.1 安装","slug":"logstash-2-4-1-安装","children":[]}]},{"level":2,"title":"配置文件中的 Filter 讲解","slug":"配置文件中的-filter-讲解","children":[]},{"level":2,"title":"配置文件中的 multiline 多行内容收集插件讲解","slug":"配置文件中的-multiline-多行内容收集插件讲解","children":[]},{"level":2,"title":"案例","slug":"案例","children":[{"level":3,"title":"测试模式","slug":"测试模式","children":[]},{"level":3,"title":"Nginx 日志收集","slug":"nginx-日志收集","children":[]},{"level":3,"title":"Tomcat 日志收集","slug":"tomcat-日志收集","children":[]},{"level":3,"title":"MySQL 慢 SQL 日志收集","slug":"mysql-慢-sql-日志收集","children":[]},{"level":3,"title":"Logstash 不直接写到 ES 先写到 Redis 再写到 ES","slug":"logstash-不直接写到-es-先写到-redis-再写到-es","children":[]},{"level":3,"title":"Logstash 不直接写到 ES 先写到 MQ 再写到 ES","slug":"logstash-不直接写到-es-先写到-mq-再写到-es","children":[]}]},{"level":2,"title":"资料","slug":"资料","children":[]}],"git":{"createdTime":1653615455000,"updatedTime":1654376503000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":2}]},"readingTime":{"minutes":7.96,"words":2388},"filePathRelative":"linux-tutor/server/Logstash-Base.md","localizedDate":"2022年5月27日"}')},17144:(n,s,a)=>{a.r(s),a.d(s,{default:()=>mn});var e=a(66252);const t=(0,e._)("h1",{id:"logstash-知识",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#logstash-知识","aria-hidden":"true"},"#"),(0,e.Uk)(" Logstash 知识")],-1),i=(0,e._)("h2",{id:"基础知识",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#基础知识","aria-hidden":"true"},"#"),(0,e.Uk)(" 基础知识")],-1),l=(0,e._)("li",null,"基于 ruby 写的",-1),o=(0,e.Uk)("官网文档："),c={href:"https://www.elastic.co/guide/en/logstash/5.2/first-event.html",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("https://www.elastic.co/guide/en/logstash/5.2/first-event.html"),r=(0,e._)("li",null,"如果是通过网络来收集，并不需要所有机子都装，但是如果是要通过读取文件来收集，那文件所在的那个机子就的安装",-1),d=(0,e.Uk)("配置文件的写法格式："),p={href:"https://www.elastic.co/guide/en/logstash/5.2/configuration-file-structure.html",target:"_blank",rel:"noopener noreferrer"},v=(0,e.Uk)("https://www.elastic.co/guide/en/logstash/5.2/configuration-file-structure.html"),g=(0,e._)("h3",{id:"logstash-5-5-0-安装",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#logstash-5-5-0-安装","aria-hidden":"true"},"#"),(0,e.Uk)(" logstash 5.5.0 安装")],-1),k=(0,e.Uk)("假设你已经看了 Elasticsearch 专题文，并且设置了仓库地址："),m=(0,e.Uk)("Elasticsearch 相关知识"),b=(0,e._)("li",null,[(0,e.Uk)("安装："),(0,e._)("code",null,"yum install -y logstash")],-1),h=(0,e.uE)('<h3 id="logstash-2-4-1-安装" tabindex="-1"><a class="header-anchor" href="#logstash-2-4-1-安装" aria-hidden="true">#</a> logstash 2.4.1 安装</h3><ul><li>logstash 基于 ruby，也需要 JDK 环境</li><li>如果是通过网络来收集，并不需要所有机子都装，但是如果是要通过读取文件来收集，那文件所在的那个机子就的安装 logstash</li><li>安装： <ul><li>切换到存放目录：<code>cd /usr/program/elk</code></li><li>解压：<code>tar zxvf logstash-2.4.1.tar.gz</code></li></ul></li><li>切换到 root 用户下，启动 logstash</li><li>带控制台的启动（比较慢）进行最简单的 hello world 测试：<code>/usr/program/elk/logstash-2.4.1/bin/logstash -e &#39;input { stdin { } } output { stdout { codec =&gt; rubydebug} }&#39;</code><ul><li>启动后显示如下内容：</li></ul></li></ul><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code>Settings: Default pipeline workers: 1\nPipeline main started\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后此时的光标是为可输入状态，我们输入：hello world 回车，然后应该会得到这样的结果：</li></ul><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n       <span class="token string">&quot;message&quot;</span> =&gt; <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;@version&quot;</span> =&gt; <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;@timestamp&quot;</span> =&gt; <span class="token string">&quot;2017-03-14T06:56:44.690Z&quot;</span><span class="token punctuation">,</span>\n          <span class="token string">&quot;host&quot;</span> =&gt; <span class="token string">&quot;youmeeklocalhost&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>现在进一步加深，把控制台输入的内容放在 elasticsearch 索引中</li><li>记得先切换到 elasticsearch 用户下，然后先启动 elasticsearch。先确保 elasticsearch 集群是启动的。</li><li>带控制台的启动（比较慢）：<code>/usr/program/elk/logstash-2.4.1/bin/logstash -e &#39;input { stdin { } } output { elasticsearch { hosts =&gt; [&quot;192.168.1.127:9200&quot;] } }&#39;</code><ul><li>启动后显示如下内容：</li></ul></li></ul><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code>Settings: Default pipeline workers: 1\nPipeline main started\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后此时的光标是为可输入状态，我们输入任意内容回车，然后访问 elasticsearch 的 head 插件控制台：<code>http://192.168.1.127:9200/_plugin/head/</code></li><li>然后你可以看到有一个类似这样的名称格式的索引：<code>logstash-2017.03.14</code>，这一步必须有，等下 kibana 会用到这个索引</li></ul><h2 id="配置文件中的-filter-讲解" tabindex="-1"><a class="header-anchor" href="#配置文件中的-filter-讲解" aria-hidden="true">#</a> 配置文件中的 Filter 讲解</h2>',9),q=(0,e._)("li",null,"grok 比较耗 CPU 能少用就尽量少用",-1),_=(0,e.Uk)("主要讲解 grok 这个插件，官网资料："),y={href:"https://www.elastic.co/guide/en/logstash/5.2/plugins-filters-grok.html",target:"_blank",rel:"noopener noreferrer"},w=(0,e.Uk)("https://www.elastic.co/guide/en/logstash/5.2/plugins-filters-grok.html"),f=(0,e.Uk)("官网给我们整理的 120 个正则表达式变量："),x={href:"https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns",target:"_blank",rel:"noopener noreferrer"},U=(0,e.Uk)("https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns"),E=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("内置的变量格式为，eg："),(0,e._)("code",null,"%{IP}")]),(0,e._)("li",null,[(0,e.Uk)("而这个格式 "),(0,e._)("code",null,"%{IP:client}"),(0,e.Uk)(" 表示把日志中匹配 IP 格式的内容存储到 ES 中的 client 域（字段）中，这样 ES 界面就有单独字段查看，方便。")])],-1),L=(0,e._)("li",null,[(0,e.Uk)("安装完 logstash 本地也是有这些文件的，路径："),(0,e._)("code",null,"/usr/program/elk/logstash-2.4.1/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-2.0.5/patterns")],-1),R=(0,e._)("li",null,"官网简单的日志讲解：",-1),M=(0,e._)("li",null,[(0,e._)("strong",null,"新建"),(0,e.Uk)(" 配置文件："),(0,e._)("code",null,"vim /usr/program/elk/logstash-2.4.1/config/filter-grok-test.conf"),(0,e.Uk)("：")],-1),S=(0,e.uE)('<div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">input</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">stdin</span></span> <span class="token punctuation">{</span>\n\t\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">filter</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">grok</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">match</span> =&gt;</span> <span class="token punctuation">{</span> &quot;message&quot; =&gt; &quot;%<span class="token punctuation">{</span>IP:client<span class="token punctuation">}</span> %<span class="token punctuation">{</span>WORD:method<span class="token punctuation">}</span> %<span class="token punctuation">{</span>URIPATHPARAM:request<span class="token punctuation">}</span> %<span class="token punctuation">{</span>NUMBER:bytes<span class="token punctuation">}</span> %<span class="token punctuation">{</span>NUMBER:duration<span class="token punctuation">}</span>&quot; <span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">output</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">elasticsearch</span></span> <span class="token punctuation">{</span> \n\t\thosts =&gt; [&quot;192.168.1.127:9200&quot;]\n\t\tindex =&gt; &quot;filter-grok-test&quot;\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动 Logstash 并加载该配置文件：<code>/usr/program/elk/logstash-2.4.1/bin/logstash -f /usr/program/elk/logstash-2.4.1/config/filter-grok-test.conf</code><ul><li>然后我们在交互界面中分别输入下面内容： <ul><li><code>55.3.244.1 GET /index.html 15824 0.043</code></li><li><code>125.4.234.22 GET /GitNavi.html 124 0.13</code></li></ul></li><li>然后你开始关注 elasticsearch 集群的索引变化。</li></ul></li></ul><h2 id="配置文件中的-multiline-多行内容收集插件讲解" tabindex="-1"><a class="header-anchor" href="#配置文件中的-multiline-多行内容收集插件讲解" aria-hidden="true">#</a> 配置文件中的 multiline 多行内容收集插件讲解</h2><ul><li>配置的格式如下：</li><li>在 file 中的：<code>codec =&gt; multiline</code></li></ul><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">input</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">file</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">path</span> =&gt; [<span class="token string">&quot;/usr/program/tomcat8/logs/logbackOutFile.log.*.log&quot;</span>]\n\t\ttype =&gt; <span class="token string">&quot;tomcat-log&quot;</span>\n\t\tstart_position =&gt; <span class="token string">&quot;beginning&quot;</span>\n\t\tcodec =&gt; multiline</span> <span class="token punctuation">{</span>\n\t\t    pattern =&gt; &quot;^\\[&quot;\n\t\t    negate =&gt; true\n\t\t    what =&gt; &quot;previous&quot;\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">output</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">if</span> [type] == <span class="token string">&quot;tomcat-log&quot;</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">elasticsearch</span></span> <span class="token punctuation">{</span> \n\t\t\thosts =&gt; [&quot;192.168.1.127:9200&quot;]\n\t\t\tindex =&gt; &quot;tomcat-log-%<span class="token punctuation">{</span>+YYYY.MM.dd<span class="token punctuation">}</span>&quot;\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><h3 id="测试模式" tabindex="-1"><a class="header-anchor" href="#测试模式" aria-hidden="true">#</a> 测试模式</h3><h4 id="自己写正则表达式-匹配后输出到控制台先看下" tabindex="-1"><a class="header-anchor" href="#自己写正则表达式-匹配后输出到控制台先看下" aria-hidden="true">#</a> 自己写正则表达式，匹配后输出到控制台先看下：</h4><ul><li>新建目录（如果存在就不用）：<code>mkdir -p /usr/program/elk/logstash-2.4.1/config</code></li><li><strong>新建</strong> 配置文件：<code>vim /usr/program/elk/logstash-2.4.1/config/regexp-test.conf</code>：</li></ul><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">input</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">stdin</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">codec</span> =&gt; multiline</span> <span class="token punctuation">{</span>\n\t\t\tpattern =&gt; &quot;^\\[&quot;\n\t\t\tnegate =&gt; true\n\t\t\twhat =&gt; &quot;previous&quot;\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">output</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">stdout</span></span> <span class="token punctuation">{</span> \n\t\tcodec =&gt; &quot;rubydebug&quot;\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动 Logstash 并加载该配置文件：<code>/usr/program/elk/logstash-2.4.1/bin/logstash -f /usr/program/elk/logstash-2.4.1/config/regexp-test.conf</code></li></ul><h4 id="读取文件-输出到控制台先看下" tabindex="-1"><a class="header-anchor" href="#读取文件-输出到控制台先看下" aria-hidden="true">#</a> 读取文件，输出到控制台先看下：</h4><ul><li>新建目录（如果存在就不用）：<code>mkdir -p /usr/program/elk/logstash-2.4.1/config</code></li><li><strong>新建</strong> 配置文件：<code>vim /usr/program/elk/logstash-2.4.1/config/file-test.conf</code>：</li></ul><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">input</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">file</span></span> <span class="token punctuation">{</span>\n\t\tpath =&gt; [&quot;/var/log/nginx/access.log&quot;]\n\t\ttype =&gt; &quot;nginx-access-log&quot;\n\t\tstart_position =&gt; &quot;beginning&quot;\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">output</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">stdout</span></span> <span class="token punctuation">{</span> \n\t\tcodec =&gt; &quot;rubydebug&quot;\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动 Logstash 并加载该配置文件：<code>/usr/program/elk/logstash-2.4.1/bin/logstash -f /usr/program/elk/logstash-2.4.1/config/regexp-test.conf</code></li></ul><h3 id="nginx-日志收集" tabindex="-1"><a class="header-anchor" href="#nginx-日志收集" aria-hidden="true">#</a> Nginx 日志收集</h3>',16),j=(0,e._)("li",null,[(0,e.Uk)("机子：192.168.1.121 "),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("Nginx 日志位置： "),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("code",null,"/var/log/nginx/access.log")]),(0,e._)("li",null,[(0,e._)("code",null,"/var/log/nginx/error.log")])])])])],-1),N=(0,e.Uk)("安装 Logstash 过程请看："),B=(0,e.Uk)("ELK 日志收集系统安装和配置"),P=(0,e._)("li",null,[(0,e.Uk)("新建目录（如果存在就不用）："),(0,e._)("code",null,"mkdir -p /usr/program/elk/logstash-2.4.1/config")],-1),T=(0,e._)("li",null,[(0,e._)("strong",null,"新建"),(0,e.Uk)(" 配置文件："),(0,e._)("code",null,"vim /usr/program/elk/logstash-2.4.1/config/nginx.conf"),(0,e.Uk)("：")],-1),W=(0,e.uE)('<div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">input</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">file</span></span> <span class="token punctuation">{</span>\n\t\tpath =&gt; [&quot;/var/log/nginx/access.log&quot;]\n\t\ttype =&gt; &quot;nginx-access-log&quot;\n\t\tstart_position =&gt; &quot;beginning&quot;\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token directive"><span class="token keyword">file</span></span> <span class="token punctuation">{</span>\n\t\tpath =&gt; [&quot;/var/log/nginx/error.log&quot;]\n\t\ttype =&gt; &quot;nginx-error-log&quot;\n\t\tstart_position =&gt; &quot;beginning&quot;\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">output</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">if</span> [type] == <span class="token string">&quot;nginx-access-log&quot;</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">elasticsearch</span></span> <span class="token punctuation">{</span> \n\t\t\thosts =&gt; [&quot;192.168.1.127:9200&quot;]\n\t\t\tindex =&gt; &quot;nginx-access-log&quot;\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token directive"><span class="token keyword">if</span> [type] == <span class="token string">&quot;nginx-error-log&quot;</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">elasticsearch</span></span> <span class="token punctuation">{</span> \n\t\t\thosts =&gt; [&quot;192.168.1.127:9200&quot;]\n\t\t\tindex =&gt; &quot;nginx-error-log&quot;\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动 Logstash 并加载该配置文件：<code>/usr/program/elk/logstash-2.4.1/bin/logstash -f /usr/program/elk/logstash-2.4.1/config/nginx.conf</code></li><li>然后你开始访问 nginx，再关注 elasticsearch 集群的索引变化，如果有新增索引那就表示可以了。</li></ul><h4 id="进一步优化-把-nginx-的日志输出格式改为-json" tabindex="-1"><a class="header-anchor" href="#进一步优化-把-nginx-的日志输出格式改为-json" aria-hidden="true">#</a> 进一步优化：把 nginx 的日志输出格式改为 json</h4><ul><li>配置 nginx 访问日志的输出格式：<code>vim /usr/local/nginx/conf/nginx.conf</code></li></ul><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">user</span> root</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">worker_processes</span>  <span class="token number">1</span></span><span class="token punctuation">;</span>\n\n<span class="token directive"><span class="token keyword">events</span></span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">worker_connections</span>  <span class="token number">1024</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">include</span>       mime.types</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">default_type</span>  application/octet-stream</span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">sendfile</span>        <span class="token boolean">on</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">keepalive_timeout</span>  <span class="token number">65</span></span><span class="token punctuation">;</span>\n    \n    <span class="token directive"><span class="token keyword">log_format</span> json <span class="token string">&#39;{&quot;@timestamp&quot;:&quot;<span class="token variable">$time_iso8601</span>&quot;,&#39;</span>\n                     <span class="token string">&#39;&quot;host&quot;:&quot;<span class="token variable">$server_addr</span>&quot;,&#39;</span>\n                     <span class="token string">&#39;&quot;clientip&quot;:&quot;<span class="token variable">$remote_addr</span>&quot;,&#39;</span>\n                     <span class="token string">&#39;&quot;size&quot;:<span class="token variable">$body_bytes_sent,</span>&#39;</span>\n                     <span class="token string">&#39;&quot;responsetime&quot;:<span class="token variable">$request_time,</span>&#39;</span>\n                     <span class="token string">&#39;&quot;upstreamtime&quot;:&quot;<span class="token variable">$upstream_response_time</span>&quot;,&#39;</span>\n                     <span class="token string">&#39;&quot;upstreamhost&quot;:&quot;<span class="token variable">$upstream_addr</span>&quot;,&#39;</span>\n                     <span class="token string">&#39;&quot;http_host&quot;:&quot;<span class="token variable">$host</span>&quot;,&#39;</span>\n                     <span class="token string">&#39;&quot;url&quot;:&quot;<span class="token variable">$uri</span>&quot;,&#39;</span>\n                     <span class="token string">&#39;&quot;xff&quot;:&quot;<span class="token variable">$http_x_forwarded_for</span>&quot;,&#39;</span>\n                     <span class="token string">&#39;&quot;referer&quot;:&quot;<span class="token variable">$http_referer</span>&quot;,&#39;</span>\n                     <span class="token string">&#39;&quot;agent&quot;:&quot;<span class="token variable">$http_user_agent</span>&quot;,&#39;</span>\n                     <span class="token string">&#39;&quot;status&quot;:&quot;<span class="token variable">$status</span>&quot;}&#39;</span></span><span class="token punctuation">;</span>\n\t<span class="token comment">#全局日志</span>\n    <span class="token directive"><span class="token keyword">access_log</span> /var/log/nginx/access.log</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">error_log</span> /var/log/nginx/error.log</span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">listen</span>       <span class="token number">80</span></span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">server_name</span>  localhost</span><span class="token punctuation">;</span>\n\t\t\n\t\t<span class="token comment"># 针对服务的日志输出</span>\n\t\t<span class="token directive"><span class="token keyword">access_log</span> /var/log/nginx/access-json.log json</span><span class="token punctuation">;</span>\n\n        <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">root</span>   html</span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">index</span>  index.html index.htm</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token directive"><span class="token keyword">error_page</span>   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  /50x.html</span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">location</span> = /50x.html</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">root</span>   html</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改 Logstash 的收集</li><li><strong>编辑</strong> 配置文件：<code>vim /usr/program/elk/logstash-2.4.1/config/nginx.conf</code>：</li></ul><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">input</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">file</span></span> <span class="token punctuation">{</span>\n\t\tpath =&gt; [&quot;/var/log/nginx/access-json.log&quot;]\n\t\tcodec =&gt; json\n\t\ttype =&gt; &quot;nginx-access-json-log&quot;\n\t\tstart_position =&gt; &quot;beginning&quot;\n\t<span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">output</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">if</span> [type] == <span class="token string">&quot;nginx-access-json-log&quot;</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">elasticsearch</span></span> <span class="token punctuation">{</span> \n\t\t\thosts =&gt; [&quot;192.168.1.127:9200&quot;]\n\t\t\tindex =&gt; &quot;nginx-access-json-log&quot;\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动 Logstash 并加载该配置文件：<code>/usr/program/elk/logstash-2.4.1/bin/logstash -f /usr/program/elk/logstash-2.4.1/config/nginx.conf</code></li><li>然后你开始访问 nginx，再关注 elasticsearch 集群的索引变化，如果有新增索引那就表示可以了。</li></ul><h3 id="tomcat-日志收集" tabindex="-1"><a class="header-anchor" href="#tomcat-日志收集" aria-hidden="true">#</a> Tomcat 日志收集</h3>',9),Y=(0,e._)("li",null,[(0,e.Uk)("机子：192.168.1.121 "),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("Tomcat 日志位置："),(0,e._)("code",null,"/usr/program/tomcat8/logs")])])],-1),I=(0,e.Uk)("安装 Logstash 过程请看："),$=(0,e.Uk)("ELK 日志收集系统安装和配置"),Q=(0,e._)("li",null,[(0,e.Uk)("新建目录（如果存在就不用）："),(0,e._)("code",null,"mkdir -p /usr/program/elk/logstash-2.4.1/config")],-1),z=(0,e._)("li",null,[(0,e._)("strong",null,"新建"),(0,e.Uk)(" 配置文件："),(0,e._)("code",null,"vim /usr/program/elk/logstash-2.4.1/config/tomcat.conf"),(0,e.Uk)("：")],-1),A=(0,e.uE)('<div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">input</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">file</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">path</span> =&gt; [<span class="token string">&quot;/usr/program/tomcat8/logs/logbackOutFile.log.*.log&quot;</span>]\n\t\ttype =&gt; <span class="token string">&quot;tomcat-log&quot;</span>\n\t\tstart_position =&gt; <span class="token string">&quot;beginning&quot;</span>\n\t\tcodec =&gt; multiline</span> <span class="token punctuation">{</span>\n\t\t    pattern =&gt; &quot;^\\[&quot;\n\t\t    negate =&gt; true\n\t\t    what =&gt; &quot;previous&quot;\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">output</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">if</span> [type] == <span class="token string">&quot;tomcat-log&quot;</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">elasticsearch</span></span> <span class="token punctuation">{</span> \n\t\t\thosts =&gt; [&quot;192.168.1.127:9200&quot;]\n\t\t\tindex =&gt; &quot;tomcat-log-%<span class="token punctuation">{</span>+YYYY.MM.dd<span class="token punctuation">}</span>&quot;\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动 Logstash 并加载该配置文件：<code>/usr/program/elk/logstash-2.4.1/bin/logstash -f /usr/program/elk/logstash-2.4.1/config/tomcat.conf</code></li><li>然后你开始访问 nginx，再关注 elasticsearch 集群的索引变化，如果有新增索引那就表示可以了。</li></ul><h3 id="mysql-慢-sql-日志收集" tabindex="-1"><a class="header-anchor" href="#mysql-慢-sql-日志收集" aria-hidden="true">#</a> MySQL 慢 SQL 日志收集</h3>',3),D=(0,e._)("li",null,"其他的细节都跟上面一样不多说了，配置文件这里需要用到 grok 进行正则的拆分",-1),K=(0,e.Uk)("这里有资料，我觉得别人已经说得很好了（Google 关键字："),Z=(0,e._)("code",null,"grok mysql slow",-1),C=(0,e.Uk)("）： "),G={href:"http://soft.dog/2016/01/30/logstash-mysql-slow-log/",target:"_blank",rel:"noopener noreferrer"},F=(0,e.Uk)("http://soft.dog/2016/01/30/logstash-mysql-slow-log/"),O={href:"https://kibana.logstash.es/content/logstash/examples/mysql-slow.html",target:"_blank",rel:"noopener noreferrer"},H=(0,e.Uk)("https://kibana.logstash.es/content/logstash/examples/mysql-slow.html"),J={href:"https://leejo.github.io/2013/11/21/parsing_mysql_slow_query_log_with_logstash/",target:"_blank",rel:"noopener noreferrer"},V=(0,e.Uk)("https://leejo.github.io/2013/11/21/parsing_mysql_slow_query_log_with_logstash/"),X={href:"https://www.phase2technology.com/blog/adding-mysql-slow-query-logs-to-logstash/",target:"_blank",rel:"noopener noreferrer"},nn=(0,e.Uk)("https://www.phase2technology.com/blog/adding-mysql-slow-query-logs-to-logstash/"),sn={href:"https://discuss.elastic.co/t/grok-filter-for-mysql-slow-logs-produces-grokparsefailure-but-passes-tests/55799",target:"_blank",rel:"noopener noreferrer"},an=(0,e.Uk)("https://discuss.elastic.co/t/grok-filter-for-mysql-slow-logs-produces-grokparsefailure-but-passes-tests/55799"),en=(0,e.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&quot;(?m)^#\\s+User@Host:\\s+%{USER:user}\\[[^\\]]+\\]\\s+@\\s+%{USER:clienthost}\\s+\\[(?:%{IP:clientip})?\\]\\s+Id:\\s+%{NUMBER:id:int}\\n#\\s+Schema:\\s+%{USER:schema}\\s+Last_errno:\\s+%{NUMBER:lasterrorno:int}\\s+Killed:\\s+%{NUMBER:killedno:int}\\n#\\s+Query_time:\\s+%{NUMBER:query_time:float}\\s+Lock_time:\\s+%{NUMBER:lock_time:float}\\s+Rows_sent:\\s+%{NUMBER:rows_sent:int}\\s+Rows_examined:\\s+%{NUMBER:rows_examined:int}\\s+Rows_affected:\\s+%{NUMBER:rows_affected:int}\\n#\\s+Bytes_sent:\\s+%{NUMBER:bytes_sent:int}\\n\\s*(?:use\\s+%{USER:usedatabase};\\s*\\n)?SET\\s+timestamp=%{NUMBER:timestamp};\\n\\s*(?&lt;query&gt;(?&lt;action&gt;\\w+)\\b.*)\\s*(?:\\n#\\s+Time)?.*$&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="logstash-不直接写到-es-先写到-redis-再写到-es" tabindex="-1"><a class="header-anchor" href="#logstash-不直接写到-es-先写到-redis-再写到-es" aria-hidden="true">#</a> Logstash 不直接写到 ES 先写到 Redis 再写到 ES</h3>',2),tn=(0,e.Uk)("官网 Redis 插件使用说明："),ln={href:"https://www.elastic.co/guide/en/logstash/2.4/plugins-inputs-redis.html",target:"_blank",rel:"noopener noreferrer"},on=(0,e.Uk)("https://www.elastic.co/guide/en/logstash/2.4/plugins-inputs-redis.html"),cn=(0,e.uE)('<h4 id="一台-logstash-把数据写到-redis" tabindex="-1"><a class="header-anchor" href="#一台-logstash-把数据写到-redis" aria-hidden="true">#</a> 一台 Logstash 把数据写到 Redis</h4><ul><li>Redis 机器 IP：192.168.1.125</li><li>Logstash 机器 IP：192.168.1.121</li><li>Logstash 机器 <strong>新建</strong> 配置文件：<code>vim /usr/program/elk/logstash-2.4.1/config/redis-test.conf</code>：</li></ul><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">input</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">stdin</span></span> <span class="token punctuation">{</span>\n\t\t\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">output</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">redis</span></span> <span class="token punctuation">{</span>\n\t\thost =&gt; &quot;192.168.1.125&quot;\n\t\tport =&gt; &quot;6379&quot;\n\t\tdb =&gt; &quot;2&quot;\n\t\tdata_type =&gt; &quot;list&quot;\n\t\tkey =&gt; &quot;gitnavi-logstash-info&quot;\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动 Logstash 并加载该配置文件：<code>/usr/program/elk/logstash-2.4.1/bin/logstash -f /usr/program/elk/logstash-2.4.1/config/redis-test.conf</code><ul><li>然后我们在交互界面中分别输入下面内容：</li><li><code>hello</code> 回车</li><li><code>world</code> 回车</li></ul></li><li>进入 Redis 机器上的数据： <ul><li>进入 redis 交互端：<code>redis-cli</code></li><li>查询 db2：<code>select 2</code></li><li>查询 db2 下的所有内容：<code>keys *</code>，可以看到有一个：&quot;gitnavi-logstash-info&quot;</li><li>查询该 list 类型的数据：<code>LRANGE gitnavi-logstash-info 0 1</code>，正常可以得到这样的数据</li></ul></li></ul><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token number">1</span>) <span class="token string">&quot;{\\&quot;message\\&quot;:\\&quot;hello\\&quot;,\\&quot;@version\\&quot;:\\&quot;1\\&quot;,\\&quot;@timestamp\\&quot;:\\&quot;2017-03-15T15:23:35.064Z\\&quot;,\\&quot;host\\&quot;:\\&quot;youmeekhost\\&quot;}&quot;</span>\n<span class="token number">2</span>) <span class="token string">&quot;{\\&quot;message\\&quot;:\\&quot;world\\&quot;,\\&quot;@version\\&quot;:\\&quot;1\\&quot;,\\&quot;@timestamp\\&quot;:\\&quot;2017-03-15T15:23:37.245Z\\&quot;,\\&quot;host\\&quot;:\\&quot;youmeekhost\\&quot;}&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="一台-logstash-把数据从-redis-读取出来写到-es" tabindex="-1"><a class="header-anchor" href="#一台-logstash-把数据从-redis-读取出来写到-es" aria-hidden="true">#</a> 一台 Logstash 把数据从 Redis 读取出来写到 ES</h4><ul><li>Redis 机器 IP：192.168.1.125</li><li>Logstash 机器 IP：192.168.1.125</li><li>Logstash 机器 <strong>新建</strong> 配置文件：<code>vim /usr/program/elk/logstash-2.4.1/config/redis-test.conf</code>：</li></ul><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">input</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">redis</span></span> <span class="token punctuation">{</span>\n\t\ttype =&gt; &quot;redis-log&quot;\n\t\thost =&gt; &quot;192.168.1.125&quot;\n\t\tport =&gt; &quot;6379&quot;\n\t\tdb =&gt; &quot;2&quot;\n\t\tdata_type =&gt; &quot;list&quot;\n\t\tkey =&gt; &quot;gitnavi-logstash-info&quot;\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">output</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">if</span> [type] == <span class="token string">&quot;redis-log&quot;</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">elasticsearch</span></span> <span class="token punctuation">{</span>\n\t        hosts =&gt; [&quot;192.168.1.127:9200&quot;]\n\t        index =&gt; &quot;redis-log&quot;\n\t    <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动 Logstash 并加载该配置文件：<code>/usr/program/elk/logstash-2.4.1/bin/logstash -f /usr/program/elk/logstash-2.4.1/config/redis-test.conf</code></li><li>然后现在在 Logstash 机器 IP：192.168.1.121 上继续输入一些内容，看下 ES 集群是否有对应的索引创建。</li></ul><h3 id="logstash-不直接写到-es-先写到-mq-再写到-es" tabindex="-1"><a class="header-anchor" href="#logstash-不直接写到-es-先写到-mq-再写到-es" aria-hidden="true">#</a> Logstash 不直接写到 ES 先写到 MQ 再写到 ES</h3>',10),un=(0,e.Uk)("官网 RabbitMQ 插件使用说明："),rn={href:"https://www.elastic.co/guide/en/logstash/2.4/plugins-inputs-rabbitmq.html",target:"_blank",rel:"noopener noreferrer"},dn=(0,e.Uk)("https://www.elastic.co/guide/en/logstash/2.4/plugins-inputs-rabbitmq.html"),pn=(0,e.uE)('<h4 id="一台-logstash-把数据写到-rabbitmq" tabindex="-1"><a class="header-anchor" href="#一台-logstash-把数据写到-rabbitmq" aria-hidden="true">#</a> 一台 Logstash 把数据写到 rabbitMQ</h4><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">input</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">file</span></span> <span class="token punctuation">{</span>\n\t\tpath =&gt; &quot;/usr/local/tomcat/logs/tomcat_json.log&quot;\n\t\tcodec =&gt; &quot;json&quot;\n\t\ttype =&gt; &quot;tomcat&quot;\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">output</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">rabbitmq</span></span> <span class="token punctuation">{</span> \n\t\thost =&gt; &quot;RabbitMQ_server&quot;\n\t\tport =&gt; &quot;5672&quot;\n\t\tvhost =&gt; &quot;elk&quot;\n\t\texchange =&gt; &quot;elk_exchange&quot;\n\t\texchange_type =&gt; &quot;direct&quot;\n\t\tkey =&gt; &quot;elk_key&quot;\n\t\tuser =&gt; &quot;liang&quot;\n\t\tpassword =&gt; &quot;liang123&quot;\n\t<span class="token punctuation">}</span>\n\t<span class="token directive"><span class="token keyword">stdout</span></span> <span class="token punctuation">{</span> \n\t\tcodec =&gt; rubydebug \n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="一台-logstash-把数据从-rabbitmq-读取出来写到-es-还未测试" tabindex="-1"><a class="header-anchor" href="#一台-logstash-把数据从-rabbitmq-读取出来写到-es-还未测试" aria-hidden="true">#</a> 一台 Logstash 把数据从 rabbitMQ 读取出来写到 ES （还未测试）</h4><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">input</span></span> <span class="token punctuation">{</span>\n\t<span class="token directive"><span class="token keyword">rabbitmq</span></span> <span class="token punctuation">{</span>\n\t\thost =&gt; &quot;127.0.0.1&quot;\n\t\tsubscription_retry_interval_seconds =&gt; &quot;5&quot;\n\t\tvhost =&gt; &quot;elk&quot;\n\t\texchange =&gt; &quot;elk_exchange&quot;\n\t\tqueue =&gt; &quot;elk_queue&quot;\n\t\tdurable =&gt; &quot;true&quot;\n\t\tkey =&gt; &quot;elk_key&quot;\n\t\tuser =&gt; &quot;liang&quot;\n\t\tpassword =&gt; &quot;liang123&quot;\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">output</span></span> <span class="token punctuation">{</span>\n\n\t<span class="token directive"><span class="token keyword">if</span> [type] == <span class="token string">&quot;nginx&quot;</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">elasticsearch</span></span> <span class="token punctuation">{</span>\n\t\t\thosts =&gt; &quot;192.168.1.127:9200&quot;\n\t\t\tuser =&gt; &quot;logstash&quot;\n\t\t\tpassword =&gt; &quot;123456&quot;\n\t\t\tindex =&gt; &quot;nginx-%<span class="token punctuation">{</span>+YYYY.MM.dd<span class="token punctuation">}</span>&quot;\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token directive"><span class="token keyword">if</span> [type] == <span class="token string">&quot;tomcat&quot;</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token directive"><span class="token keyword">elasticsearch</span></span> <span class="token punctuation">{</span>\n\t\t\thosts =&gt; &quot;192.168.1.127:9200&quot;\n\t\t\tuser =&gt; &quot;logstash&quot;\n\t\t\tpassword =&gt; &quot;123456&quot;\n\t\t\tindex =&gt; &quot;tomcat-%<span class="token punctuation">{</span>+YYYY.MM.dd<span class="token punctuation">}</span>&quot;\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token directive"><span class="token keyword">stdout</span></span> <span class="token punctuation">{</span> \n\t\tcodec =&gt; rubydebug \n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料" aria-hidden="true">#</a> 资料</h2>',5),vn={href:"https://liang178.github.io/2016/08/11/elk+rabbitmq/",target:"_blank",rel:"noopener noreferrer"},gn=(0,e.Uk)("https://liang178.github.io/2016/08/11/elk+rabbitmq/"),kn={},mn=(0,a(83744).Z)(kn,[["render",function(n,s){const a=(0,e.up)("ExternalLinkIcon"),kn=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)("div",null,[t,i,(0,e._)("ul",null,[l,(0,e._)("li",null,[o,(0,e._)("a",c,[u,(0,e.Wm)(a)])]),r,(0,e._)("li",null,[d,(0,e._)("a",p,[v,(0,e.Wm)(a)])])]),g,(0,e._)("ul",null,[(0,e._)("li",null,[k,(0,e.Wm)(kn,{to:"/linux-tutor/server/Elasticsearch-Base.html"},{default:(0,e.w5)((()=>[m])),_:1})]),b]),h,(0,e._)("ul",null,[q,(0,e._)("li",null,[_,(0,e._)("a",y,[w,(0,e.Wm)(a)])]),(0,e._)("li",null,[f,(0,e._)("a",x,[U,(0,e.Wm)(a)]),E]),L,R,M]),S,(0,e._)("ul",null,[j,(0,e._)("li",null,[N,(0,e.Wm)(kn,{to:"/linux-tutor/server/ELK-Install-And-Settings.html"},{default:(0,e.w5)((()=>[B])),_:1})]),P,T]),W,(0,e._)("ul",null,[Y,(0,e._)("li",null,[I,(0,e.Wm)(kn,{to:"/linux-tutor/server/ELK-Install-And-Settings.html"},{default:(0,e.w5)((()=>[$])),_:1})]),Q,z]),A,(0,e._)("ul",null,[D,(0,e._)("li",null,[K,Z,C,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",G,[F,(0,e.Wm)(a)])]),(0,e._)("li",null,[(0,e._)("a",O,[H,(0,e.Wm)(a)])]),(0,e._)("li",null,[(0,e._)("a",J,[V,(0,e.Wm)(a)])]),(0,e._)("li",null,[(0,e._)("a",X,[nn,(0,e.Wm)(a)])]),(0,e._)("li",null,[(0,e._)("a",sn,[an,(0,e.Wm)(a)])])])])]),en,(0,e._)("ul",null,[(0,e._)("li",null,[tn,(0,e._)("a",ln,[on,(0,e.Wm)(a)])])]),cn,(0,e._)("ul",null,[(0,e._)("li",null,[un,(0,e._)("a",rn,[dn,(0,e.Wm)(a)])])]),pn,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",vn,[gn,(0,e.Wm)(a)])])])])}]])}}]);