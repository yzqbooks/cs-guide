"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[54472],{15221:(e,a,t)=>{t.r(a),t.d(a,{data:()=>r});const r=JSON.parse('{"key":"v-f556c28c","path":"/java-tutor/stackoverflow/differences-between-hashmap-and-hashtable.html","title":"HashMap和Hashtable的区别","lang":"zh-CN","frontmatter":{"summary":"HashMap和Hashtable的区别 问题 在Java中HashMap和Hashtable的区别？ 哪一个对于多线程应用程序更好？ 回答 1. Hashtable是同步的，加了synchronized锁，而HashMap不是。没有加synchronized锁的对象，性能通常比加了synchronized锁的对象要更好一些，因此，如果是非多线程程序，不需要","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/java-tutor/stackoverflow/differences-between-hashmap-and-hashtable.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"HashMap和Hashtable的区别"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-06-18T06:54:45.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-06-18T06:54:45.000Z"}]]},"excerpt":"","headers":[{"level":3,"title":"问题","slug":"问题","children":[]},{"level":3,"title":"回答","slug":"回答","children":[]},{"level":3,"title":"相关推荐","slug":"相关推荐","children":[]}],"git":{"createdTime":1647947241000,"updatedTime":1655535285000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":2}]},"readingTime":{"minutes":0.84,"words":251},"filePathRelative":"java-tutor/stackoverflow/differences-between-hashmap-and-hashtable.md","localizedDate":"2022年3月22日"}')},85004:(e,a,t)=>{t.r(a),t.d(a,{default:()=>x});var r=t(66252);const o=(0,r.uE)('<h1 id="hashmap和hashtable的区别" tabindex="-1"><a class="header-anchor" href="#hashmap和hashtable的区别" aria-hidden="true">#</a> HashMap和Hashtable的区别</h1><h3 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h3><p>在Java中<code>HashMap</code>和<code>Hashtable</code>的区别？ 哪一个对于多线程应用程序更好？</p><h3 id="回答" tabindex="-1"><a class="header-anchor" href="#回答" aria-hidden="true">#</a> 回答</h3>',4),h=(0,r.uE)("<li><code>Hashtable</code>是同步的，加了<code>synchronized</code>锁，而<code>HashMap</code>不是。没有加<code>synchronized</code>锁的对象，性能通常比加了<code>synchronized</code>锁的对象要更好一些，因此，如果是非多线程程序，不需要考虑锁、同步等问题，那么使用<code>HashMap</code>更好。</li><li><code>Hashtable</code>不允许有空的键或值。<code>HashMap</code>允许空键和空值。</li>",2),n=(0,r.Uk)("HashMap有一个子类"),s={href:"http://docs.oracle.com/javase/7/docs/api/java/util/LinkedHashMap.html",target:"_blank",rel:"noopener noreferrer"},l=(0,r.Uk)("LinkedHashMap"),c=(0,r.Uk)(",对这个类对象进行迭代时，它的顺序是有序的（按插入顺序排序）。如有需要，你也能轻易的从"),d=(0,r._)("code",null,"LinkedHashMap",-1),i=(0,r.Uk)("转化成"),p=(0,r._)("code",null,"HashMap",-1),u=(0,r.Uk)("。"),m=(0,r._)("code",null,"Hashtable",-1),b=(0,r.Uk)("就没那么简单了，"),f=(0,r.Uk)("总之，如果你无需关心同步（synchronized）问题，我会建议用"),k=(0,r._)("code",null,"HashMap",-1),H=(0,r.Uk)("。反之，你可以考虑使用"),v={href:"http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentHashMap.html",target:"_blank",rel:"noopener noreferrer"},_=(0,r.Uk)("ConcurrentHashMap"),g={href:"http://stackoverflow.com/questions/40471/differences-between-hashmap-and-hashtable",target:"_blank",rel:"noopener noreferrer"},y=(0,r.Uk)("http://stackoverflow.com/questions/40471/differences-between-hashmap-and-hashtable"),w=(0,r._)("h3",{id:"相关推荐",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#相关推荐","aria-hidden":"true"},"#"),(0,r.Uk)(" 相关推荐")],-1),M=(0,r.Uk)("importnew:"),z={href:"http://www.importnew.com/7010.html",target:"_blank",rel:"noopener noreferrer"},U=(0,r.Uk)("HashMap和Hashtable的区别"),j={},x=(0,t(83744).Z)(j,[["render",function(e,a){const t=(0,r.up)("ExternalLinkIcon");return(0,r.wg)(),(0,r.iD)("div",null,[o,(0,r._)("ol",null,[h,(0,r._)("li",null,[n,(0,r._)("a",s,[l,(0,r.Wm)(t)]),c,d,i,p,u,m,b])]),(0,r._)("p",null,[f,k,H,(0,r._)("a",v,[_,(0,r.Wm)(t)])]),(0,r._)("p",null,[(0,r._)("a",g,[y,(0,r.Wm)(t)])]),w,(0,r._)("p",null,[M,(0,r._)("a",z,[U,(0,r.Wm)(t)])])])}]])}}]);