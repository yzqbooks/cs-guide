"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[67945],{87777:(s,a,e)=>{e.r(a),e.d(a,{data:()=>n});const n=JSON.parse('{"key":"v-57a8c86a","path":"/windows-tutor/powershell/web-request.html","title":"web请求","lang":"zh-CN","frontmatter":{"summary":"web请求 提交key1=value1&key2=value2类型参数： 方法一： 方法二： 提交json类型参数，未测试","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/windows-tutor/powershell/web-request.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"web请求"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-23T13:51:55.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-07-23T13:51:55.000Z"}]]},"excerpt":"","headers":[],"git":{"createdTime":1658584315000,"updatedTime":1658584315000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":0.46,"words":138},"filePathRelative":"windows-tutor/powershell/web-request.md","localizedDate":"2022年7月23日"}')},62591:(s,a,e)=>{e.r(a),e.d(a,{default:()=>p});var n=e(66252);const t=[(0,n.uE)('<h1 id="web请求" tabindex="-1"><a class="header-anchor" href="#web请求" aria-hidden="true">#</a> web请求</h1><p>提交key1=value1&amp;key2=value2类型参数：</p><p>方法一：</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token variable">$textmod</span>=<span class="token string">&quot;key=<span class="token variable">$key</span>&amp;content=<span class="token variable">$data</span>&amp;touser=<span class="token variable">$touser</span>&quot;</span>\n\n<span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>UseBasicParsing <span class="token variable">$url</span>  <span class="token operator">-</span>Method POST <span class="token operator">-</span>Body <span class="token variable">$textmod</span>\n<span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>UseBasicParsing <span class="token variable">$url</span> <span class="token operator">-</span>ContentType <span class="token string">&#39;application/x-www-form-urlencoded;charset=UTF-8&#39;</span> <span class="token operator">-</span>Method POST <span class="token operator">-</span>Body <span class="token variable">$textmod</span>  <span class="token comment">#提交的数据中如果包含符号&amp;使用%26代替，contentType解决中文乱码问题</span>\n \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法二：</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token comment">#中文和特殊符号无需特殊处理</span>\n<span class="token variable">$textmod</span> = @<span class="token punctuation">{</span>key=<span class="token variable">$key</span><span class="token punctuation">;</span>content=<span class="token variable">$data</span><span class="token punctuation">;</span>touser=<span class="token variable">$touser</span><span class="token punctuation">}</span>\n<span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>UseBasicParsing <span class="token variable">$url</span> <span class="token operator">-</span>Method POST <span class="token operator">-</span>Body <span class="token variable">$textmod</span>  \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提交json类型参数，未测试</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token variable">$text</span> = @<span class="token punctuation">{</span>\n <span class="token string">&quot;content&quot;</span> = <span class="token variable">$data</span><span class="token punctuation">,</span>\n <span class="token string">&quot;touser&quot;</span> = <span class="token variable">$touser</span><span class="token punctuation">,</span>\n <span class="token string">&quot;sn&quot;</span> = <span class="token variable">$sn</span>\n<span class="token punctuation">}</span> <span class="token punctuation">|</span> <span class="token function">ConvertTo-Json</span>\n\n<span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>UseBasicParsing <span class="token variable">$url</span> <span class="token operator">-</span>ContentType <span class="token string">&quot;application/json&quot;</span> <span class="token operator">-</span>Method POST <span class="token operator">-</span>Body <span class="token variable">$text</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',8)],o={},p=(0,e(83744).Z)(o,[["render",function(s,a){return(0,n.wg)(),(0,n.iD)("div",null,t)}]])}}]);