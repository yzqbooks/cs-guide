"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[91656],{89502:(n,t,s)=>{s.r(t),s.d(t,{data:()=>a});const a=JSON.parse('{"key":"v-3fc0bd20","path":"/go-tutor/gorm/go-id.html","title":"id生成策略","lang":"zh-CN","frontmatter":{"summary":"id生成策略 雪花算法生成id 使用https://github.com/bwmarrin/snowflake 生成uuid package id format :--------------------------------------------------------------------- :---------------------------","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/go-tutor/gorm/go-id.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"id生成策略"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-06-26T15:12:04.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-06-26T15:12:04.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"雪花算法生成id","slug":"雪花算法生成id","children":[]},{"level":2,"title":"生成uuid","slug":"生成uuid","children":[]}],"git":{"createdTime":1656256324000,"updatedTime":1656256324000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":1.02,"words":307},"filePathRelative":"go-tutor/gorm/go-id.md","localizedDate":"2022年6月26日"}')},79357:(n,t,s)=>{s.r(t),s.d(t,{default:()=>un});var a=s(66252);const e=(0,a._)("h1",{id:"id生成策略",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#id生成策略","aria-hidden":"true"},"#"),(0,a.Uk)(" id生成策略")],-1),o=(0,a._)("h2",{id:"雪花算法生成id",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#雪花算法生成id","aria-hidden":"true"},"#"),(0,a.Uk)(" 雪花算法生成id")],-1),i=(0,a.Uk)("使用"),l={href:"https://github.com/bwmarrin/snowflake",target:"_blank",rel:"noopener noreferrer"},p=(0,a.Uk)("https://github.com/bwmarrin/snowflake"),c=(0,a.uE)('<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main\n\n<span class="token keyword">import</span> <span class="token punctuation">(</span>\n <span class="token string">&quot;fmt&quot;</span>\n\n <span class="token string">&quot;github.com/bwmarrin/snowflake&quot;</span>\n<span class="token punctuation">)</span>\n\n<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n <span class="token comment">// Create a new Node with a Node number of 1</span>\n node<span class="token punctuation">,</span> err <span class="token operator">:=</span> snowflake<span class="token punctuation">.</span><span class="token function">NewNode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>\n  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n  <span class="token keyword">return</span>\n <span class="token punctuation">}</span>\n\n <span class="token comment">// Generate a snowflake ID.</span>\n id <span class="token operator">:=</span> node<span class="token punctuation">.</span><span class="token function">Generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n <span class="token comment">// Print out the ID in a few different ways.</span>\n fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Int64  ID: %d\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span>\n fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;String ID: %s\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span>\n fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Base2  ID: %s\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span><span class="token function">Base2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Base64 ID: %s\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span><span class="token function">Base64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n <span class="token comment">// Print out the ID&#39;s timestamp</span>\n fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;ID Time  : %d\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span><span class="token function">Time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n <span class="token comment">// Print out the ID&#39;s node number</span>\n fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;ID Node  : %d\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span><span class="token function">Node</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n <span class="token comment">// Print out the ID&#39;s sequence number</span>\n fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;ID Step  : %d\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span><span class="token function">Step</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// Generate and print, all in one.</span>\n  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;ID       : %d\\n&quot;</span><span class="token punctuation">,</span> node<span class="token punctuation">.</span><span class="token function">Generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生成uuid" tabindex="-1"><a class="header-anchor" href="#生成uuid" aria-hidden="true">#</a> 生成uuid</h2>',2),u=(0,a._)("thead",null,[(0,a._)("tr",null,[(0,a._)("th",{style:{"text-align":"left"}},"package"),(0,a._)("th",{style:{"text-align":"left"}},"id"),(0,a._)("th",{style:{"text-align":"left"}},"format")])],-1),r={style:{"text-align":"left"}},d={href:"https://github.com/segmentio/ksuid",target:"_blank",rel:"noopener noreferrer"},k=(0,a.Uk)("github.com/segmentio/ksuid"),m=(0,a.Uk)("421"),f=(0,a._)("td",{style:{"text-align":"left"}},[(0,a._)("code",null,"0pPKHjWprnVxGH7dEsAoXX2YQvU")],-1),g=(0,a._)("td",{style:{"text-align":"left"}},"4 bytes of time (seconds) + 16 random bytes",-1),b={style:{"text-align":"left"}},v={href:"https://github.com/rs/xid",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Uk)("github.com/rs/xid"),_=(0,a.Uk)("960"),y=(0,a._)("td",{style:{"text-align":"left"}},[(0,a._)("code",null,"b50vl5e54p1000fo3gh0")],-1),x=(0,a._)("td",{style:{"text-align":"left"}},"4 bytes of time (seconds) + 3 byte machine id + 2 byte process id + 3 bytes random",-1),q={style:{"text-align":"left"}},w={href:"https://github.com/kjk/betterguid",target:"_blank",rel:"noopener noreferrer"},U=(0,a.Uk)("github.com/kjk/betterguid"),I=(0,a.Uk)("96"),D=(0,a._)("td",{style:{"text-align":"left"}},[(0,a._)("code",null,"-Kmdih_fs4ZZccpx2Hl1")],-1),P=(0,a._)("td",{style:{"text-align":"left"}},"8 bytes of time (milliseconds) + 9 random bytes",-1),W={style:{"text-align":"left"}},N={href:"https://github.com/sony/sonyflake",target:"_blank",rel:"noopener noreferrer"},C=(0,a.Uk)("github.com/sony/sonyflake"),T=(0,a.Uk)("283"),B=(0,a._)("td",{style:{"text-align":"left"}},[(0,a._)("code",null,"20f8707d6000108")],-1),z=(0,a._)("td",{style:{"text-align":"left"}},"~6 bytes of time (10 ms) + 1 byte sequence + 2 bytes machine id",-1),G={style:{"text-align":"left"}},Z={href:"https://github.com/oklog/ulid",target:"_blank",rel:"noopener noreferrer"},S=(0,a.Uk)("github.com/oklog/ulid"),E=(0,a.Uk)("142"),F=(0,a._)("td",{style:{"text-align":"left"}},[(0,a._)("code",null,"01BJMVNPBBZC3E36FJTGVF0C4S")],-1),J=(0,a._)("td",{style:{"text-align":"left"}},"6 bytes of time (milliseconds) + 8 bytes random",-1),j={style:{"text-align":"left"}},H={href:"https://github.com/chilts/sid",target:"_blank",rel:"noopener noreferrer"},V=(0,a.Uk)("github.com/chilts/sid"),A=(0,a.Uk)("105"),K=(0,a._)("td",{style:{"text-align":"left"}},[(0,a._)("code",null,"1JADkqpWxPx-4qaWY47~FqI")],-1),R=(0,a._)("td",{style:{"text-align":"left"}},"8 bytes of time (ns) + 8 random bytes",-1),X={style:{"text-align":"left"}},Y={href:"https://github.com/gofrs/uuid",target:"_blank",rel:"noopener noreferrer"},L=(0,a.Uk)("github.com/satori/go.uuid"),M=(0,a.Uk)("582"),O=(0,a._)("td",{style:{"text-align":"left"}},[(0,a._)("code",null,"5b52d72c-82b3-4f8e-beb5-437a974842c")],-1),Q={style:{"text-align":"left"}},$=(0,a.Uk)("UUIDv4 from "),nn={href:"http://tools.ietf.org/html/rfc4122",target:"_blank",rel:"noopener noreferrer"},tn=(0,a.Uk)("RFC 4112"),sn=(0,a.Uk)("44 for comparison"),an={style:{"text-align":"left"}},en={href:"https://github.com/edwingeng/wuid",target:"_blank",rel:"noopener noreferrer"},on=(0,a.Uk)("https://github.com/edwingeng/wuid"),ln=(0,a._)("td",{style:{"text-align":"left"}},[(0,a._)("code",null,"187500764")],-1),pn=(0,a._)("td",{style:{"text-align":"left"}},"6 bytes",-1),cn={},un=(0,s(83744).Z)(cn,[["render",function(n,t){const s=(0,a.up)("ExternalLinkIcon");return(0,a.wg)(),(0,a.iD)("div",null,[e,o,(0,a._)("p",null,[i,(0,a._)("a",l,[p,(0,a.Wm)(s)])]),c,(0,a._)("table",null,[u,(0,a._)("tbody",null,[(0,a._)("tr",null,[(0,a._)("td",r,[(0,a._)("a",d,[k,(0,a.Wm)(s)]),m]),f,g]),(0,a._)("tr",null,[(0,a._)("td",b,[(0,a._)("a",v,[h,(0,a.Wm)(s)]),_]),y,x]),(0,a._)("tr",null,[(0,a._)("td",q,[(0,a._)("a",w,[U,(0,a.Wm)(s)]),I]),D,P]),(0,a._)("tr",null,[(0,a._)("td",W,[(0,a._)("a",N,[C,(0,a.Wm)(s)]),T]),B,z]),(0,a._)("tr",null,[(0,a._)("td",G,[(0,a._)("a",Z,[S,(0,a.Wm)(s)]),E]),F,J]),(0,a._)("tr",null,[(0,a._)("td",j,[(0,a._)("a",H,[V,(0,a.Wm)(s)]),A]),K,R]),(0,a._)("tr",null,[(0,a._)("td",X,[(0,a._)("a",Y,[L,(0,a.Wm)(s)]),M]),O,(0,a._)("td",Q,[$,(0,a._)("a",nn,[tn,(0,a.Wm)(s)]),sn])]),(0,a._)("tr",null,[(0,a._)("td",an,[(0,a._)("a",en,[on,(0,a.Wm)(s)])]),ln,pn])])])])}]])}}]);