"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[93862],{68470:(n,e,s)=>{s.r(e),s.d(e,{data:()=>i});const i=JSON.parse('{"key":"v-639a4196","path":"/python-tutor/python-config/pipenv.html","title":"pipenv使用","lang":"zh-CN","frontmatter":{"summary":"pipenv使用 安装 安装python 安装包 windows安装后会自动吧pip和python加入到环境变量 安装pipenv 使用pipenv 默认安装的虚拟环境都在c盘%userprofile%的.virtualenvs文件夹下面,如果想更换,可以添加PIPENVVENVIN_PROJECT环境变量,并设置值为1,就是在项目下面创建虚拟环境 如何运行","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/python-tutor/python-config/pipenv.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"pipenv使用"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-26T16:41:58.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-07-26T16:41:58.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"安装","slug":"安装","children":[]},{"level":2,"title":"安装pipenv","slug":"安装pipenv","children":[]},{"level":2,"title":"使用pipenv","slug":"使用pipenv","children":[]}],"git":{"createdTime":1658761077000,"updatedTime":1658853718000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":2}]},"readingTime":{"minutes":1.76,"words":529},"filePathRelative":"python-tutor/python-config/pipenv.md","localizedDate":"2022年7月25日"}')},5216:(n,e,s)=>{s.r(e),s.d(e,{default:()=>v});var i=s(66252);const a=(0,i._)("h1",{id:"pipenv使用",tabindex:"-1"},[(0,i._)("a",{class:"header-anchor",href:"#pipenv使用","aria-hidden":"true"},"#"),(0,i.Uk)(" pipenv使用")],-1),l=(0,i._)("h2",{id:"安装",tabindex:"-1"},[(0,i._)("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),(0,i.Uk)(" 安装")],-1),t=(0,i.Uk)("安装python "),p={href:"https://registry.npmmirror.com/binary.html?path=python/",target:"_blank",rel:"noopener noreferrer"},d=(0,i.Uk)("安装包"),c=(0,i._)("br",null,null,-1),o=(0,i.Uk)(" windows安装后会自动吧pip和python加入到环境变量"),r=(0,i.uE)('<h2 id="安装pipenv" tabindex="-1"><a class="header-anchor" href="#安装pipenv" aria-hidden="true">#</a> 安装pipenv</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pip <span class="token function">install</span> pipenv \n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用pipenv" tabindex="-1"><a class="header-anchor" href="#使用pipenv" aria-hidden="true">#</a> 使用pipenv</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>添加镜像\n「清华源」：&quot;https://pypi.tuna.tsinghua.edu.cn/simple/&quot;\n「阿里源」：&quot;http://mirrors.aliyun.com/pypi/simple/&quot;\n「豆瓣源」：&quot;http://pypi.douban.com/simple&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-toml ext-toml line-numbers-mode"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">source</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token key property">url</span> <span class="token punctuation">=</span> <span class="token string">&quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;</span>\n<span class="token key property">verify_ssl</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>\n<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;pypi&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认安装的虚拟环境都在c盘<code>%userprofile%的.virtualenvs</code>文件夹下面,如果想更换,可以添加<code>PIPENV_VENV_IN_PROJECT</code>环境变量,并设置值为<code>1</code>,就是在项目下面创建虚拟环境</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 创建一个env环境</span>\npipenv <span class="token function">install</span>\n<span class="token comment"># 删除env</span>\npipenv --rm\n<span class="token comment"># 安装一个依赖</span>\npipenv <span class="token function">install</span> httpx\n<span class="token comment"># 导出requirements</span>\npipenv lock -r <span class="token operator">&gt;</span> requirements.txt\n<span class="token comment"># 安装包</span>\npipenv <span class="token function">install</span> -r requirements.txt\n<span class="token comment"># 检查包</span>\npipenv run pip list\n<span class="token comment"># 删除所有</span>\npipenv uninstall --all\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如何运行呢? 需要在命令行加上一句<code>pipenv shell;$env:PYTHONPATH=&quot;E:\\PycharmProjects\\douyin-spider&quot;;激活当前的pipenv并</code>把<code>PYTHONPATH</code>改为当前路径,才能让python知道自己当前目录是一个包,不然自己写的包没办法引进去,会报错<code>ModuleNotFoundError: No module named &#39;util&#39;</code></p></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pipenv <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> COMMAND <span class="token punctuation">[</span>ARGS<span class="token punctuation">]</span><span class="token punctuation">..</span>.\n\nOPTIONS:\n--where          显示项目文件所在路径\n--venv           显示虚拟环境实际文件所在路径\n--py             显示虚拟环境 Python 解释器所在路径\n--envs           显示虚拟环境的选项变量\n--rm             删除虚拟环境\n--bare           最小化输出\n--completion     完整输出\n--man            显示帮助页面\n--three / two    使用 Python <span class="token number">3</span> / <span class="token number">2</span> 创建虚拟环境（注意须是本机已安装的 Python 版本）\n--python TEXT    指定某个 Python 版本作为虚拟环境的安装源\n--site-packages  附带安装原 Python 解释器中的第三方库\n--jumbotron      复活节彩蛋\n--version        版本信息\n--h / <span class="token builtin class-name">help</span>       帮助信息\n\nCOMMANDS：\ncheck            检查安全漏洞\ngraph            显示当前依赖关系图信息\n<span class="token function">install</span>          安装虚拟环境或者第三方库\nlock             锁定并生成 Pipfile.lock 文件\n<span class="token function">open</span>             在编辑其中查看一个库\nrun              在虚拟环境中运行命令\nshell            进入虚拟环境\nuninstall        卸载一个库\nupdate           写在当前所有的库，并安装它们的最新版本\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>',9),u={},v=(0,s(83744).Z)(u,[["render",function(n,e){const s=(0,i.up)("ExternalLinkIcon");return(0,i.wg)(),(0,i.iD)("div",null,[a,l,(0,i._)("p",null,[t,(0,i._)("a",p,[d,(0,i.Wm)(s)]),c,o]),r])}]])}}]);