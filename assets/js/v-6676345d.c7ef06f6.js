"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[88244],{55823:(e,o,t)=>{t.r(o),t.d(o,{data:()=>a});const a=JSON.parse('{"key":"v-6676345d","path":"/go-tutor/framework/gframe.html","title":"gf教程","lang":"zh-CN","frontmatter":{"summary":"gf教程 打包静态文件 把静态文件放在public文件夹,必须在main.go(或者其他入口文件)添加_ \\"myapp/packed\\"然后gf build(包含--pack) 然后在入口文件添加s.AddStaticPath(\\"/atools\\", \\"public\\"),到时候就可以通过http://localhost:8000/atools访问到静态文件 必须","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/go-tutor/framework/gframe.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"gf教程"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-26T16:41:58.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-07-26T16:41:58.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"打包静态文件","slug":"打包静态文件","children":[]}],"git":{"createdTime":1658853718000,"updatedTime":1658853718000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":0.82,"words":246},"filePathRelative":"go-tutor/framework/gframe.md","localizedDate":"2022年7月26日"}')},77531:(e,o,t)=>{t.r(o),t.d(o,{default:()=>q});var a=t(66252);const d=(0,a.uE)('<h1 id="gf教程" tabindex="-1"><a class="header-anchor" href="#gf教程" aria-hidden="true">#</a> gf教程</h1><h2 id="打包静态文件" tabindex="-1"><a class="header-anchor" href="#打包静态文件" aria-hidden="true">#</a> 打包静态文件</h2><p>把静态文件放在public文件夹,必须在<code>main.go</code>(或者其他入口文件)添加<code>_ &quot;myapp/packed&quot;</code>然后<code>gf build(包含--pack)</code> 然后在入口文件添加<code>s.AddStaticPath(&quot;/atools&quot;, &quot;public&quot;)</code>,到时候就可以通过<code>http://localhost:8000/atools</code>访问到静态文件</p>',3),c=(0,a.Uk)("必须在"),l=(0,a._)("code",null,"main.go",-1),i=(0,a.Uk)("(或者其他入口文件)添加"),r=(0,a._)("code",null,'_ "myapp/packed"',-1),p=(0,a.Uk)("然后"),n=(0,a._)("code",null,"gf build(包含--pack)",-1),u=(0,a.Uk)(","),g=(0,a._)("strong",null,[(0,a.Uk)("直接"),(0,a._)("code",null,"gf build(包含--pack)"),(0,a.Uk)("是不行的")],-1),m=(0,a.Uk)(". (其实资源管理章节里说了,"),s={href:"https://goframe.org/pages/viewpage.action?pageId=1114148",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Uk)("https://goframe.org/pages/viewpage.action?pageId=1114148"),f=(0,a.Uk)(",但是如果先看的是"),k=(0,a._)("code",null,"gf build",-1),b=(0,a.Uk)("文档就可能会忽视掉这一点)"),_=(0,a.uE)("<p><code>gf build</code>打包过程如下:</p><ol><li><code>gf build(包含--pack)</code>会先在<code>packed</code>文件夹生成一个<code>build_pack_data.go</code>文件</li><li>然后执行<code>go build main.go</code>,因为我们在<code>main.go</code>添加了<code>_ &quot;myapp/packed&quot;</code>,所以资源文件就打包进去了,没加这行代码,就没打包进去</li><li>生成可执行文件</li></ol>",2),y={},q=(0,t(83744).Z)(y,[["render",function(e,o){const t=(0,a.up)("ExternalLinkIcon");return(0,a.wg)(),(0,a.iD)("div",null,[d,(0,a._)("p",null,[c,l,i,r,p,n,u,g,m,(0,a._)("a",s,[h,(0,a.Wm)(t)]),f,k,b]),_])}]])}}]);