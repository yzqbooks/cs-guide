"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[96989],{90251:(e,r,t)=>{t.r(r),t.d(r,{data:()=>a});const a=JSON.parse('{"key":"v-24b01900","path":"/java-tutor/stackoverflow/why-is-char-preferred-over-string-for-passwords-in-java.html","title":"为什么在java中存放密码更倾向于char[]而不是String","lang":"zh-CN","frontmatter":{"summary":"为什么在java中存放密码更倾向于char[]而不是String 问题 在Swing中，password字段有一个getPassword()方法（返回char[]），而不是通常的getText()方法(返回String字符串)。同样的，我看到一个建议说不要使用字符串处理密码。 为什么在涉及passwords时，都说字符串会对安全构成威胁？感觉使用char[]","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/java-tutor/stackoverflow/why-is-char-preferred-over-string-for-passwords-in-java.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"为什么在java中存放密码更倾向于char[]而不是String"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-03-22T11:07:21.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-03-22T11:07:21.000Z"}]]},"excerpt":"","headers":[{"level":3,"title":"问题","slug":"问题","children":[]},{"level":3,"title":"回答","slug":"回答","children":[]}],"git":{"createdTime":1647947241000,"updatedTime":1647947241000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":1.37,"words":410},"filePathRelative":"java-tutor/stackoverflow/why-is-char-preferred-over-string-for-passwords-in-java.md","localizedDate":"2022年3月22日"}')},22970:(e,r,t)=>{t.r(r),t.d(r,{default:()=>u});var a=t(66252);const o=(0,a.uE)('<h1 id="为什么在java中存放密码更倾向于char-而不是string" tabindex="-1"><a class="header-anchor" href="#为什么在java中存放密码更倾向于char-而不是string" aria-hidden="true">#</a> 为什么在java中存放密码更倾向于char[]而不是String</h1><h3 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h3><p>在Swing中，password字段有一个getPassword()方法（返回char[]），而不是通常的getText()方法(返回String字符串)。同样的，我看到一个建议说不要使用字符串处理密码。 为什么在涉及passwords时，都说字符串会对安全构成威胁？感觉使用char[]不是那么的方便。</p><h3 id="回答" tabindex="-1"><a class="header-anchor" href="#回答" aria-hidden="true">#</a> 回答</h3><p>String是不可变的。虽然String加载密码之后可以把这个变量扔掉，但是字符串并不会马上被GC回收，一但进程在GC执行到这个字符串之前被dump，dump出的的转储中就会含有这个明文的字符串。那如果我去“修改”这个字符串，比如把它赋一个新值，那么是不是就没有这个问题了？答案是否定的，因为String本身是不可修改的，任何基于String的修改函数都是返回一个新的字符串，原有的还会在内存里。</p><p>然而对于数组，你可以在抛弃它之前直接修改掉它里面的内容或者置为乱码，密码就不会存在了。但是如果你什么也不做直接交给gc的话，也会存在上面一样的问题。</p><p>所以，这是一个安全性的问题--但是，即使使用char[]也仅仅是降低了攻击者攻击的机会，而且仅仅对这种特定的攻击有效。</p>',7),n=(0,a._)("strong",null,"stackoverflow链接",-1),s=(0,a.Uk)("： "),i={href:"http://stackoverflow.com/questions/8881291/why-is-char-preferred-over-string-for-passwords-in-java",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Uk)("http://stackoverflow.com/questions/8881291/why-is-char-preferred-over-string-for-passwords-in-java"),h=(0,a._)("strong",null,"知乎上也有相关讨论",-1),d=(0,a.Uk)("： "),p={href:"https://www.zhihu.com/question/36734157",target:"_blank",rel:"noopener noreferrer"},l=(0,a.Uk)("https://www.zhihu.com/question/36734157"),g={},u=(0,t(83744).Z)(g,[["render",function(e,r){const t=(0,a.up)("ExternalLinkIcon");return(0,a.wg)(),(0,a.iD)("div",null,[o,(0,a._)("p",null,[n,s,(0,a._)("a",i,[c,(0,a.Wm)(t)])]),(0,a._)("p",null,[h,d,(0,a._)("a",p,[l,(0,a.Wm)(t)])])])}]])}}]);