"use strict";(self.webpackChunkcs_guide=self.webpackChunkcs_guide||[]).push([[49225],{38182:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t=JSON.parse('{"key":"v-7224cfc2","path":"/java-tutor/stackoverflow/sort-arraylist-of-custom-objects-by-property.html","title":"通过对象属性对常规对象的ArrayList进行排序","lang":"zh-CN","frontmatter":{"summary":"通过对象属性对常规对象的ArrayList进行排序 问题 我读过使用Comparator对常规类的ArrayList进行排序的示例，但是它们大多数使用comparedTo(),据我了解这是一个对字符串进行操作的方法。 我想要对一个由常规对象构成的ArrayList，通过它的属性(一个Date对象,getStartDate())对ArrayList进行排序。通","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/cs-guide/cs-guide/java-tutor/stackoverflow/sort-arraylist-of-custom-objects-by-property.html"}],["meta",{"property":"og:site_name","content":"cs-guide"}],["meta",{"property":"og:title","content":"通过对象属性对常规对象的ArrayList进行排序"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-03-22T11:07:21.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-03-22T11:07:21.000Z"}]]},"excerpt":"","headers":[{"level":3,"title":"问题","slug":"问题","children":[]},{"level":3,"title":"回答","slug":"回答","children":[]}],"git":{"createdTime":1647947241000,"updatedTime":1647947241000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":1.36,"words":407},"filePathRelative":"java-tutor/stackoverflow/sort-arraylist-of-custom-objects-by-property.md","localizedDate":"2022年3月22日"}')},55976:(n,a,s)=>{s.r(a),s.d(a,{default:()=>u});var t=s(66252);const p=(0,t.uE)('<h1 id="通过对象属性对常规对象的arraylist进行排序" tabindex="-1"><a class="header-anchor" href="#通过对象属性对常规对象的arraylist进行排序" aria-hidden="true">#</a> 通过对象属性对常规对象的ArrayList进行排序</h1><h3 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h3><p>我读过使用Comparator对常规类的ArrayList进行排序的示例，但是它们大多数使用comparedTo(),据我了解这是一个对字符串进行操作的方法。 我想要对一个由常规对象构成的ArrayList，通过它的属性(一个Date对象,getStartDate())对ArrayList进行排序。通常情况下我这样比较它们：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>item1<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>item2<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>所以我能不能像下面一样：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomComparator</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Object</span> object1<span class="token punctuation">,</span> <span class="token class-name">Object</span> object2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> object1<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>object2<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RandomName</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n    <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Database</span><span class="token punctuation">.</span>arrayList<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CustomComparator</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="回答" tabindex="-1"><a class="header-anchor" href="#回答" aria-hidden="true">#</a> 回答</h3><p>以前Date声明了Comparable,它有一个像处理字符串操作那样的compareTo方法。因此你可以这样：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomComparator</span> <span class="token keyword">implements</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyObject</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">MyObject</span> o1<span class="token punctuation">,</span> <span class="token class-name">MyObject</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> o1<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o2<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这儿的compare()方法必须返回int，所以不能像你预期那样直接返回boolean. 你的代码看起来应该是这样：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Database</span><span class="token punctuation">.</span>arrayList<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CustomComparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你不需要重复使用comparetor的话，一种简单的方法是，把它写成一个内部类的样子：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Database</span><span class="token punctuation">.</span>arrayList<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyObject</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">MyObject</span> o1<span class="token punctuation">,</span> <span class="token class-name">MyObject</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> o1<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o2<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自java8 开始，你可以使用lambda表达式一种简洁的方式来写Comparator()</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Database</span><span class="token punctuation">.</span>arrayList<span class="token punctuation">,</span> \n                        <span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o1<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o2<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>并且List有一个sort(Comparator)方法，所以你可以进一步简化它</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\n<span class="token class-name">Database</span><span class="token punctuation">.</span>arrayList<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o1<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o2<span class="token punctuation">.</span><span class="token function">getStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这是一种司空见惯的方法，使用Comparable为一个类创建一个Comprator</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Database</span><span class="token punctuation">.</span>arrayList<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span><span class="token class-name">MyObject</span><span class="token operator">::</span><span class="token function">getStartDate</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">All</span> of these are equivalent forms<span class="token punctuation">.</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>',19),e=(0,t.Uk)("stackoverflow原地址："),o={href:"http://stackoverflow.com/questions/2784514/sort-arraylist-of-custom-objects-by-property",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("http://stackoverflow.com/questions/2784514/sort-arraylist-of-custom-objects-by-property"),l={},u=(0,s(83744).Z)(l,[["render",function(n,a){const s=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[p,(0,t._)("p",null,[e,(0,t._)("a",o,[c,(0,t.Wm)(s)])])])}]])}}]);